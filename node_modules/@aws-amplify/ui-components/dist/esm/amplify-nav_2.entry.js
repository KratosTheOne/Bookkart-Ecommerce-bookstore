import { r as registerInstance, h } from './index-82dae9d1.js';
import { I18n } from '@aws-amplify/core';
import { A as AuthState } from './auth-types-78df304e.js';
import { T as Translations } from './Translations-baba3f2c.js';
import { N as NO_AUTH_MODULE_FOUND } from './constants-3e1b5fcc.js';
import { Auth } from '@aws-amplify/auth';
import { d as dispatchAuthStateChangeEvent, a as dispatchToastHubEvent } from './helpers-9dae6f2a.js';

const amplifyNavCss = ".nav{display:-ms-flexbox;display:flex;-ms-flex:1 1 0%;flex:1 1 0%;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:center;align-items:center}.nav>*{margin:0 0.5em}";

class AmplifyNav {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("nav", { class: "nav" }, h("slot", null)));
    }
}
AmplifyNav.style = amplifyNavCss;

class AmplifySignOut {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        /** Auth state change handler for this component */
        this.handleAuthStateChange = dispatchAuthStateChangeEvent;
        /** Text inside of the Sign Out button */
        this.buttonText = I18n.get(Translations.SIGN_OUT);
    }
    async signOut(event) {
        if (event)
            event.preventDefault();
        // TODO: Federated Sign Out
        if (!Auth || typeof Auth.signOut !== 'function') {
            throw new Error(NO_AUTH_MODULE_FOUND);
        }
        try {
            await Auth.signOut();
            this.handleAuthStateChange(AuthState.SignedOut);
        }
        catch (error) {
            dispatchToastHubEvent(error);
        }
    }
    render() {
        return (h("amplify-button", { slot: "sign-out", onClick: event => this.signOut(event), "data-test": "sign-out-button" }, this.buttonText));
    }
}

export { AmplifyNav as amplify_nav, AmplifySignOut as amplify_sign_out };
