import { AuthState, CognitoUserInterface, FederatedConfig, UsernameAliasStrings, AuthStateHandler } from '../../common/types/auth-types';
export declare class AmplifyAuthenticator {
    /** Initial starting state of the Authenticator component. E.g. If `signup` is passed the default component is set to AmplifySignUp */
    initialAuthState: AuthState.SignIn | AuthState.SignUp;
    /** Federated credentials & configuration. */
    federated: FederatedConfig;
    /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */
    usernameAlias: UsernameAliasStrings;
    /** Callback for Authenticator state machine changes */
    handleAuthStateChange: AuthStateHandler;
    authState: AuthState;
    authData: CognitoUserInterface;
    toastMessage: string;
    private handleExternalAuthEvent;
    private handleToastEvent;
    componentWillLoad(): Promise<void>;
    private checkUser;
    private onAuthStateChange;
    private renderAuthComponent;
    componentWillUnload(): (authStateHandler: AuthStateHandler) => () => any;
    render(): any;
}
