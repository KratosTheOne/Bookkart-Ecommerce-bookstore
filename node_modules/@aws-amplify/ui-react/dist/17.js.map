{"version":3,"sources":["webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-radio-button_2.entry.js"],"names":["__awaiter","value","resolve","P","step","generator","reject","result","adopt","_arguments","__generator","_","label","sent","t","trys","ops","next","verb","g","Symbol","f","y","op","done","body","amplifyRadioButtonCss","AmplifyRadioButton","registerInstance","h","type","name","onInput","placeholder","id","checked","disabled","htmlFor","fieldId","canPromise","Promise","toString","isarray","Array","arr","__proto__","Uint8Array","foo","Buffer","typedArraySupport","K_MAX_LENGTH","allocUnsafe","from","Object","configurable","enumerable","writable","length","val","buf","createBuffer","size","i","byteLength","actual","array","byteOffset","fromArrayLike","len","obj","isnan","units","string","leadSurrogate","bytes","codePoint","ArrayBuffer","utf8ToBytes","dst","src","blitBuffer","fromArrayBuffer","fromString","fromObject","offset","isFinite","remaining","utf8Write","start","end","newBuf","sliceLen","targetStart","target","code","list","buffer","pos","b","alloc","from_1","typedarrayBuffer","CODEWORDS_COUNT","getSymbolSize","version","getSymbolTotalCodewords","getBCHDigit","digit","data","setToSJISFunction","toSJISFunction","isKanjiModeEnabled","toSJIS","utils","path","exports","require","commonjsRequire","fn","module","errorCorrectionLevel","createCommonjsModule","bit","lcStr","level","BitBuffer","get","bufIndex","Math","index","put","num","getLengthInBits","putBit","bitBuffer","BitMatrix","row","bitMatrix","alignmentPattern","posCount","intervals","positions","coords","posLength","j","getSymbolSize$1","FINDER_PATTERN_SIZE","getPositions","finderPattern","maskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","N1","N2","N3","N4","mask","isNaN","parseInt","points","sameCountCol","sameCountRow","lastCol","lastRow","col","last","bitsCol","bitsRow","darkCount","modulesCount","k","getMaskAt","numPatterns","bestPattern","lowerPenalty","p","setupFormatFunc","penalty","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","getBlocksCount","getTotalCodewordsCount","errorCorrectionCode","EXP_TABLE","LOG_TABLE","x","log","n","exp","mul","galoisField","polynomial","coeff","p1","p2","divisor","poly","Buffer$1","ReedSolomonEncoder","pad","paddedData","remainder","buff","reedSolomonEncoder","isValid","versionCheck","numeric","alphanumeric","kanji","byte","KANJI","BYTE_KANJI","BYTE","NUMERIC","ALPHANUMERIC","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","testKanji","testNumeric","testAlphanumeric","regex","mode","ccBits","G18","G18_BCH","currentVersion","totalBits","segments","reservedBits","getReservedBitsCount","getTotalBitsFromDataArray","mode$1","totalCodewords","ecTotalCodewords","dataTotalCodewordsBits","usableBits","ecl","getBestVersionForMixedData","seg","getBestVersionForDataLength","d","G15","G15_MASK","G15_BCH","getEncodedBits","formatInfo","NumericData","group","remainingNum","numericData","ALPHA_NUM_CHARS","AlphanumericData","alphanumericData","ByteData","l","byteData","KanjiData","kanjiData","dijkstra_1","dijkstra","single_source_shortest_paths","predecessors","costs","open","closest","u","cost_of_s_to_u","adjacent_nodes","graph","cost_of_e","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","first_visit","msg","extract_shortest_path_from_predecessor_list","nodes","find_path","PriorityQueue","make","T","opts","default_sorter","a","push","item","cost","pop","empty","unescape","encodeURIComponent","numSegs","getSegments","alphaNumSegs","byteSegs","kanjiSegs","segs","s1","s2","prevSeg","acc","curr","getStringByteLength","table","prevNodeIds","nodeGroup","currentNodeIds","node","key","lastCount","prevNodeId","getSegmentBitsLength","map","bestMode","buildSingleSegment","getSegmentsFromString","buildNodes","buildGraph","optimizedSegs","mergeSegments","matrix","r","c","bits","mod","inc","bitIndex","byteIndex","dark","remainingByte","createCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup2","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","segments$1","estimatedVersion","rawSegments","bestVersion","version$1","dataBits","createData","moduleCount","modules","setupFinderPattern","setupTimingPattern","setupAlignmentPattern","setupFormatInfo","setupVersionInfo","setupData","maskPattern$1","create","errorCorrectionLevel$1","options","createSymbol","qrcode","utils$1","hex","hexCode","hexValue","margin","width","scale","color","hex2rgba","light","rendererOpts","qrSize","qr","symbolSize","scaledMargin","palette","posDst","pxColor","iSrc","jSrc","imgData","canvas","ctx","document","canvasEl","getCanvasElement","qrData","image","clearCanvas","alpha","str","attrib","cmd","moveBy","newRow","lineLength","svgCmd","render","qrcodesize","bg","getColorAttrib","qrToPath","viewBox","svgTag","cb","args","argsNum","isLastArgCb","text","renderFunc","create$1","toCanvas","renderCanvas","toDataURL","toString_1","browser","amplifyTotpSetupCss","logger","AmplifyTOTPSetup","autoFocus","I18n","Translations","user","_a","Auth","dataVerifed","isEmpty","AuthState","newUser","error_1","dispatchToastHubEvent","event","_b","error_2","issuer","encodeURI","secretKey","error_3","MfaOption","error_4","_this","headerText","submitButtonText","handleSubmit","loading","alt","inputProps","handleInputChange"],"mappings":"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","file":"17.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { r as registerInstance, h } from './index-82dae9d1.js';\nimport { Logger, I18n, isEmpty } from '@aws-amplify/core';\nimport { A as AuthState, M as MfaOption } from './auth-types-78df304e.js';\nimport { T as Translations } from './Translations-baba3f2c.js';\nimport { N as NO_AUTH_MODULE_FOUND, S as SETUP_TOTP, g as SUCCESS } from './constants-3e1b5fcc.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { d as dispatchAuthStateChangeEvent, a as dispatchToastHubEvent } from './helpers-9dae6f2a.js';\nimport buffer from 'buffer';\nvar amplifyRadioButtonCss = \":host{--font-family:var(--amplify-font-family)}.radio-button{display:block;width:100%;padding:16px;font-size:var(--amplify-text-sm);font-family:var(--font-family)}.radio-button input{margin-right:12px}\";\nvar AmplifyRadioButton = /** @class */ (function () {\n    function AmplifyRadioButton(hostRef) {\n        registerInstance(this, hostRef);\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n        /** If `true`, the radio button is selected. */\n        this.checked = false;\n        /** If `true`, the checkbox is disabled */\n        this.disabled = false;\n    }\n    AmplifyRadioButton.prototype.render = function () {\n        return (h(\"span\", { class: \"radio-button\" }, h(\"input\", Object.assign({ type: \"radio\", name: this.name, value: this.value, onInput: this.handleInputChange, placeholder: this.placeholder, id: this.fieldId, checked: this.checked, disabled: this.disabled }, this.inputProps)), h(\"amplify-label\", { htmlFor: this.fieldId }, this.label)));\n    };\n    return AmplifyRadioButton;\n}());\nAmplifyRadioButton.style = amplifyRadioButtonCss;\n// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\nvar canPromise = function () {\n    return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;\n};\nvar toString = {}.toString;\nvar isarray = Array.isArray || function (arr) {\n    return toString.call(arr) == '[object Array]';\n};\nfunction typedArraySupport() {\n    // Can typed array instances be augmented?\n    try {\n        var arr = new Uint8Array(1);\n        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42; } };\n        return arr.foo() === 42;\n    }\n    catch (e) {\n        return false;\n    }\n}\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff;\nfunction Buffer(arg, offset, length) {\n    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, offset, length);\n    }\n    if (typeof arg === 'number') {\n        return allocUnsafe(this, arg);\n    }\n    return from(this, arg, offset, length);\n}\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n    Buffer.prototype.__proto__ = Uint8Array.prototype;\n    Buffer.__proto__ = Uint8Array;\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    if (typeof Symbol !== 'undefined' && Symbol.species &&\n        Buffer[Symbol.species] === Buffer) {\n        Object.defineProperty(Buffer, Symbol.species, {\n            value: null,\n            configurable: true,\n            enumerable: false,\n            writable: false\n        });\n    }\n}\nfunction checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n            'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n    return length | 0;\n}\nfunction isnan(val) {\n    return val !== val; // eslint-disable-line no-self-compare\n}\nfunction createBuffer(that, length) {\n    var buf;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        buf = new Uint8Array(length);\n        buf.__proto__ = Buffer.prototype;\n    }\n    else {\n        // Fallback: Return an object instance of the Buffer class\n        buf = that;\n        if (buf === null) {\n            buf = new Buffer(length);\n        }\n        buf.length = length;\n    }\n    return buf;\n}\nfunction allocUnsafe(that, size) {\n    var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n    if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n            buf[i] = 0;\n        }\n    }\n    return buf;\n}\nfunction fromString(that, string) {\n    var length = byteLength(string) | 0;\n    var buf = createBuffer(that, length);\n    var actual = buf.write(string);\n    if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        buf = buf.slice(0, actual);\n    }\n    return buf;\n}\nfunction fromArrayLike(that, array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(that, length);\n    for (var i = 0; i < length; i += 1) {\n        buf[i] = array[i] & 255;\n    }\n    return buf;\n}\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\\'offset\\' is out of bounds');\n    }\n    if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\\'length\\' is out of bounds');\n    }\n    var buf;\n    if (byteOffset === undefined && length === undefined) {\n        buf = new Uint8Array(array);\n    }\n    else if (length === undefined) {\n        buf = new Uint8Array(array, byteOffset);\n    }\n    else {\n        buf = new Uint8Array(array, byteOffset, length);\n    }\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        buf.__proto__ = Buffer.prototype;\n    }\n    else {\n        // Fallback: Return an object instance of the Buffer class\n        buf = fromArrayLike(that, buf);\n    }\n    return buf;\n}\nfunction fromObject(that, obj) {\n    if (Buffer.isBuffer(obj)) {\n        var len = checked(obj.length) | 0;\n        var buf = createBuffer(that, len);\n        if (buf.length === 0) {\n            return buf;\n        }\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj) {\n        if ((typeof ArrayBuffer !== 'undefined' &&\n            obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n            if (typeof obj.length !== 'number' || isnan(obj.length)) {\n                return createBuffer(that, 0);\n            }\n            return fromArrayLike(that, obj);\n        }\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n            return fromArrayLike(that, obj.data);\n        }\n    }\n    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\nfunction utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n    for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1)\n                        bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1)\n                        bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1)\n                    bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        }\n        else if (leadSurrogate) {\n            // valid bmp char, but last char was a lead\n            if ((units -= 3) > -1)\n                bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0)\n                break;\n            bytes.push(codePoint);\n        }\n        else if (codePoint < 0x800) {\n            if ((units -= 2) < 0)\n                break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        }\n        else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0)\n                break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        }\n        else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0)\n                break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        }\n        else {\n            throw new Error('Invalid code point');\n        }\n    }\n    return bytes;\n}\nfunction byteLength(string) {\n    if (Buffer.isBuffer(string)) {\n        return string.length;\n    }\n    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n        return string.byteLength;\n    }\n    if (typeof string !== 'string') {\n        string = '' + string;\n    }\n    var len = string.length;\n    if (len === 0)\n        return 0;\n    return utf8ToBytes(string).length;\n}\nfunction blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n        if ((i + offset >= dst.length) || (i >= src.length))\n            break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction from(that, value, offset, length) {\n    if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number');\n    }\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, offset, length);\n    }\n    if (typeof value === 'string') {\n        return fromString(that, value);\n    }\n    return fromObject(that, value);\n}\nBuffer.prototype.write = function write(string, offset, length) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, encoding)\n    }\n    else if (length === undefined && typeof offset === 'string') {\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, offset[, length])\n    }\n    else if (isFinite(offset)) {\n        offset = offset | 0;\n        if (isFinite(length)) {\n            length = length | 0;\n        }\n        else {\n            length = undefined;\n        }\n    }\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining)\n        length = remaining;\n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n        throw new RangeError('Attempt to write outside buffer bounds');\n    }\n    return utf8Write(this, string, offset, length);\n};\nBuffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0)\n            start = 0;\n    }\n    else if (start > len) {\n        start = len;\n    }\n    if (end < 0) {\n        end += len;\n        if (end < 0)\n            end = 0;\n    }\n    else if (end > len) {\n        end = len;\n    }\n    if (end < start)\n        end = start;\n    var newBuf;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end);\n        // Return an augmented `Uint8Array` instance\n        newBuf.__proto__ = Buffer.prototype;\n    }\n    else {\n        var sliceLen = end - start;\n        newBuf = new Buffer(sliceLen, undefined);\n        for (var i = 0; i < sliceLen; ++i) {\n            newBuf[i] = this[i + start];\n        }\n    }\n    return newBuf;\n};\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!start)\n        start = 0;\n    if (!end && end !== 0)\n        end = this.length;\n    if (targetStart >= target.length)\n        targetStart = target.length;\n    if (!targetStart)\n        targetStart = 0;\n    if (end > 0 && end < start)\n        end = start;\n    // Copy 0 bytes; we're done\n    if (end === start)\n        return 0;\n    if (target.length === 0 || this.length === 0)\n        return 0;\n    // Fatal error conditions\n    if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds');\n    }\n    if (start < 0 || start >= this.length)\n        throw new RangeError('sourceStart out of bounds');\n    if (end < 0)\n        throw new RangeError('sourceEnd out of bounds');\n    // Are we oob?\n    if (end > this.length)\n        end = this.length;\n    if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n    }\n    var len = end - start;\n    var i;\n    if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n            target[i + targetStart] = this[i + start];\n        }\n    }\n    else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n            target[i + targetStart] = this[i + start];\n        }\n    }\n    else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n    }\n    return len;\n};\nBuffer.prototype.fill = function fill(val, start, end) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n        if (typeof start === 'string') {\n            start = 0;\n            end = this.length;\n        }\n        else if (typeof end === 'string') {\n            end = this.length;\n        }\n        if (val.length === 1) {\n            var code = val.charCodeAt(0);\n            if (code < 256) {\n                val = code;\n            }\n        }\n    }\n    else if (typeof val === 'number') {\n        val = val & 255;\n    }\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index');\n    }\n    if (end <= start) {\n        return this;\n    }\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val)\n        val = 0;\n    var i;\n    if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n            this[i] = val;\n        }\n    }\n    else {\n        var bytes = Buffer.isBuffer(val)\n            ? val\n            : new Buffer(val);\n        var len = bytes.length;\n        for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len];\n        }\n    }\n    return this;\n};\nBuffer.concat = function concat(list, length) {\n    if (!isarray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n    if (list.length === 0) {\n        return createBuffer(null, 0);\n    }\n    var i;\n    if (length === undefined) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n            length += list[i].length;\n        }\n    }\n    var buffer = allocUnsafe(null, length);\n    var pos = 0;\n    for (i = 0; i < list.length; ++i) {\n        var buf = list[i];\n        if (!Buffer.isBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nBuffer.byteLength = byteLength;\nBuffer.prototype._isBuffer = true;\nBuffer.isBuffer = function isBuffer(b) {\n    return !!(b != null && b._isBuffer);\n};\nvar alloc = function (size) {\n    var buffer = new Buffer(size);\n    buffer.fill(0);\n    return buffer;\n};\nvar from_1 = function (data) {\n    return new Buffer(data);\n};\nvar typedarrayBuffer = {\n    alloc: alloc,\n    from: from_1\n};\nvar toSJISFunction;\nvar CODEWORDS_COUNT = [\n    0,\n    26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n    404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n    1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n    2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n];\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nvar getSymbolSize = function getSymbolSize(version) {\n    if (!version)\n        throw new Error('\"version\" cannot be null or undefined');\n    if (version < 1 || version > 40)\n        throw new Error('\"version\" should be in range from 1 to 40');\n    return version * 4 + 17;\n};\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nvar getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {\n    return CODEWORDS_COUNT[version];\n};\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nvar getBCHDigit = function (data) {\n    var digit = 0;\n    while (data !== 0) {\n        digit++;\n        data >>>= 1;\n    }\n    return digit;\n};\nvar setToSJISFunction = function setToSJISFunction(f) {\n    if (typeof f !== 'function') {\n        throw new Error('\"toSJISFunc\" is not a valid function.');\n    }\n    toSJISFunction = f;\n};\nvar isKanjiModeEnabled = function () {\n    return typeof toSJISFunction !== 'undefined';\n};\nvar toSJIS = function toSJIS(kanji) {\n    return toSJISFunction(kanji);\n};\nvar utils = {\n    getSymbolSize: getSymbolSize,\n    getSymbolTotalCodewords: getSymbolTotalCodewords,\n    getBCHDigit: getBCHDigit,\n    setToSJISFunction: setToSJISFunction,\n    isKanjiModeEnabled: isKanjiModeEnabled,\n    toSJIS: toSJIS\n};\nfunction createCommonjsModule(fn, basedir, module) {\n    return module = {\n        path: basedir,\n        exports: {},\n        require: function (path, base) {\n            return commonjsRequire();\n        }\n    }, fn(module, module.exports), module.exports;\n}\nfunction commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\nvar errorCorrectionLevel = createCommonjsModule(function (module, exports) {\n    exports.L = { bit: 1 };\n    exports.M = { bit: 0 };\n    exports.Q = { bit: 3 };\n    exports.H = { bit: 2 };\n    function fromString(string) {\n        if (typeof string !== 'string') {\n            throw new Error('Param is not a string');\n        }\n        var lcStr = string.toLowerCase();\n        switch (lcStr) {\n            case 'l':\n            case 'low':\n                return exports.L;\n            case 'm':\n            case 'medium':\n                return exports.M;\n            case 'q':\n            case 'quartile':\n                return exports.Q;\n            case 'h':\n            case 'high':\n                return exports.H;\n            default:\n                throw new Error('Unknown EC Level: ' + string);\n        }\n    }\n    exports.isValid = function isValid(level) {\n        return level && typeof level.bit !== 'undefined' &&\n            level.bit >= 0 && level.bit < 4;\n    };\n    exports.from = function from(value, defaultValue) {\n        if (exports.isValid(value)) {\n            return value;\n        }\n        try {\n            return fromString(value);\n        }\n        catch (e) {\n            return defaultValue;\n        }\n    };\n});\nfunction BitBuffer() {\n    this.buffer = [];\n    this.length = 0;\n}\nBitBuffer.prototype = {\n    get: function (index) {\n        var bufIndex = Math.floor(index / 8);\n        return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1;\n    },\n    put: function (num, length) {\n        for (var i = 0; i < length; i++) {\n            this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n        }\n    },\n    getLengthInBits: function () {\n        return this.length;\n    },\n    putBit: function (bit) {\n        var bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n        }\n        this.length++;\n    }\n};\nvar bitBuffer = BitBuffer;\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix(size) {\n    if (!size || size < 1) {\n        throw new Error('BitMatrix size must be defined and greater than 0');\n    }\n    this.size = size;\n    this.data = typedarrayBuffer.alloc(size * size);\n    this.reservedBit = typedarrayBuffer.alloc(size * size);\n}\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n    var index = row * this.size + col;\n    this.data[index] = value;\n    if (reserved)\n        this.reservedBit[index] = true;\n};\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n    return this.data[row * this.size + col];\n};\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n    this.data[row * this.size + col] ^= value;\n};\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n    return this.reservedBit[row * this.size + col];\n};\nvar bitMatrix = BitMatrix;\nvar alignmentPattern = createCommonjsModule(function (module, exports) {\n    /**\n     * Alignment pattern are fixed reference pattern in defined positions\n     * in a matrix symbology, which enables the decode software to re-synchronise\n     * the coordinate mapping of the image modules in the event of moderate amounts\n     * of distortion of the image.\n     *\n     * Alignment patterns are present only in QR Code symbols of version 2 or larger\n     * and their number depends on the symbol version.\n     */\n    var getSymbolSize = utils.getSymbolSize;\n    /**\n     * Calculate the row/column coordinates of the center module of each alignment pattern\n     * for the specified QR Code version.\n     *\n     * The alignment patterns are positioned symmetrically on either side of the diagonal\n     * running from the top left corner of the symbol to the bottom right corner.\n     *\n     * Since positions are simmetrical only half of the coordinates are returned.\n     * Each item of the array will represent in turn the x and y coordinate.\n     * @see {@link getPositions}\n     *\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of coordinate\n     */\n    exports.getRowColCoords = function getRowColCoords(version) {\n        if (version === 1)\n            return [];\n        var posCount = Math.floor(version / 7) + 2;\n        var size = getSymbolSize(version);\n        var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\n        var positions = [size - 7]; // Last coord is always (size - 7)\n        for (var i = 1; i < posCount - 1; i++) {\n            positions[i] = positions[i - 1] - intervals;\n        }\n        positions.push(6); // First coord is always 6\n        return positions.reverse();\n    };\n    /**\n     * Returns an array containing the positions of each alignment pattern.\n     * Each array's element represent the center point of the pattern as (x, y) coordinates\n     *\n     * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n     * and filtering out the items that overlaps with finder pattern\n     *\n     * @example\n     * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n     * The alignment patterns, therefore, are to be centered on (row, column)\n     * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n     * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n     * and are not therefore used for alignment patterns.\n     *\n     * var pos = getPositions(7)\n     * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n     *\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of coordinates\n     */\n    exports.getPositions = function getPositions(version) {\n        var coords = [];\n        var pos = exports.getRowColCoords(version);\n        var posLength = pos.length;\n        for (var i = 0; i < posLength; i++) {\n            for (var j = 0; j < posLength; j++) {\n                // Skip if position is occupied by finder patterns\n                if ((i === 0 && j === 0) || // top-left\n                    (i === 0 && j === posLength - 1) || // bottom-left\n                    (i === posLength - 1 && j === 0)) { // top-right\n                    continue;\n                }\n                coords.push([pos[i], pos[j]]);\n            }\n        }\n        return coords;\n    };\n});\nvar getSymbolSize$1 = utils.getSymbolSize;\nvar FINDER_PATTERN_SIZE = 7;\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nvar getPositions = function getPositions(version) {\n    var size = getSymbolSize$1(version);\n    return [\n        // top-left\n        [0, 0],\n        // top-right\n        [size - FINDER_PATTERN_SIZE, 0],\n        // bottom-left\n        [0, size - FINDER_PATTERN_SIZE]\n    ];\n};\nvar finderPattern = {\n    getPositions: getPositions\n};\nvar maskPattern = createCommonjsModule(function (module, exports) {\n    /**\n     * Data mask pattern reference\n     * @type {Object}\n     */\n    exports.Patterns = {\n        PATTERN000: 0,\n        PATTERN001: 1,\n        PATTERN010: 2,\n        PATTERN011: 3,\n        PATTERN100: 4,\n        PATTERN101: 5,\n        PATTERN110: 6,\n        PATTERN111: 7\n    };\n    /**\n     * Weighted penalty scores for the undesirable features\n     * @type {Object}\n     */\n    var PenaltyScores = {\n        N1: 3,\n        N2: 3,\n        N3: 40,\n        N4: 10\n    };\n    /**\n     * Check if mask pattern value is valid\n     *\n     * @param  {Number}  mask    Mask pattern\n     * @return {Boolean}         true if valid, false otherwise\n     */\n    exports.isValid = function isValid(mask) {\n        return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\n    };\n    /**\n     * Returns mask pattern from a value.\n     * If value is not valid, returns undefined\n     *\n     * @param  {Number|String} value        Mask pattern value\n     * @return {Number}                     Valid mask pattern or undefined\n     */\n    exports.from = function from(value) {\n        return exports.isValid(value) ? parseInt(value, 10) : undefined;\n    };\n    /**\n    * Find adjacent modules in row/column with the same color\n    * and assign a penalty value.\n    *\n    * Points: N1 + i\n    * i is the amount by which the number of adjacent modules of the same color exceeds 5\n    */\n    exports.getPenaltyN1 = function getPenaltyN1(data) {\n        var size = data.size;\n        var points = 0;\n        var sameCountCol = 0;\n        var sameCountRow = 0;\n        var lastCol = null;\n        var lastRow = null;\n        for (var row = 0; row < size; row++) {\n            sameCountCol = sameCountRow = 0;\n            lastCol = lastRow = null;\n            for (var col = 0; col < size; col++) {\n                var module = data.get(row, col);\n                if (module === lastCol) {\n                    sameCountCol++;\n                }\n                else {\n                    if (sameCountCol >= 5)\n                        points += PenaltyScores.N1 + (sameCountCol - 5);\n                    lastCol = module;\n                    sameCountCol = 1;\n                }\n                module = data.get(col, row);\n                if (module === lastRow) {\n                    sameCountRow++;\n                }\n                else {\n                    if (sameCountRow >= 5)\n                        points += PenaltyScores.N1 + (sameCountRow - 5);\n                    lastRow = module;\n                    sameCountRow = 1;\n                }\n            }\n            if (sameCountCol >= 5)\n                points += PenaltyScores.N1 + (sameCountCol - 5);\n            if (sameCountRow >= 5)\n                points += PenaltyScores.N1 + (sameCountRow - 5);\n        }\n        return points;\n    };\n    /**\n     * Find 2x2 blocks with the same color and assign a penalty value\n     *\n     * Points: N2 * (m - 1) * (n - 1)\n     */\n    exports.getPenaltyN2 = function getPenaltyN2(data) {\n        var size = data.size;\n        var points = 0;\n        for (var row = 0; row < size - 1; row++) {\n            for (var col = 0; col < size - 1; col++) {\n                var last = data.get(row, col) +\n                    data.get(row, col + 1) +\n                    data.get(row + 1, col) +\n                    data.get(row + 1, col + 1);\n                if (last === 4 || last === 0)\n                    points++;\n            }\n        }\n        return points * PenaltyScores.N2;\n    };\n    /**\n     * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n     * preceded or followed by light area 4 modules wide\n     *\n     * Points: N3 * number of pattern found\n     */\n    exports.getPenaltyN3 = function getPenaltyN3(data) {\n        var size = data.size;\n        var points = 0;\n        var bitsCol = 0;\n        var bitsRow = 0;\n        for (var row = 0; row < size; row++) {\n            bitsCol = bitsRow = 0;\n            for (var col = 0; col < size; col++) {\n                bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col);\n                if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D))\n                    points++;\n                bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row);\n                if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D))\n                    points++;\n            }\n        }\n        return points * PenaltyScores.N3;\n    };\n    /**\n     * Calculate proportion of dark modules in entire symbol\n     *\n     * Points: N4 * k\n     *\n     * k is the rating of the deviation of the proportion of dark modules\n     * in the symbol from 50% in steps of 5%\n     */\n    exports.getPenaltyN4 = function getPenaltyN4(data) {\n        var darkCount = 0;\n        var modulesCount = data.data.length;\n        for (var i = 0; i < modulesCount; i++)\n            darkCount += data.data[i];\n        var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10);\n        return k * PenaltyScores.N4;\n    };\n    /**\n     * Return mask value at given position\n     *\n     * @param  {Number} maskPattern Pattern reference value\n     * @param  {Number} i           Row\n     * @param  {Number} j           Column\n     * @return {Boolean}            Mask value\n     */\n    function getMaskAt(maskPattern, i, j) {\n        switch (maskPattern) {\n            case exports.Patterns.PATTERN000: return (i + j) % 2 === 0;\n            case exports.Patterns.PATTERN001: return i % 2 === 0;\n            case exports.Patterns.PATTERN010: return j % 3 === 0;\n            case exports.Patterns.PATTERN011: return (i + j) % 3 === 0;\n            case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n            case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0;\n            case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0;\n            case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0;\n            default: throw new Error('bad maskPattern:' + maskPattern);\n        }\n    }\n    /**\n     * Apply a mask pattern to a BitMatrix\n     *\n     * @param  {Number}    pattern Pattern reference number\n     * @param  {BitMatrix} data    BitMatrix data\n     */\n    exports.applyMask = function applyMask(pattern, data) {\n        var size = data.size;\n        for (var col = 0; col < size; col++) {\n            for (var row = 0; row < size; row++) {\n                if (data.isReserved(row, col))\n                    continue;\n                data.xor(row, col, getMaskAt(pattern, row, col));\n            }\n        }\n    };\n    /**\n     * Returns the best mask pattern for data\n     *\n     * @param  {BitMatrix} data\n     * @return {Number} Mask pattern reference number\n     */\n    exports.getBestMask = function getBestMask(data, setupFormatFunc) {\n        var numPatterns = Object.keys(exports.Patterns).length;\n        var bestPattern = 0;\n        var lowerPenalty = Infinity;\n        for (var p = 0; p < numPatterns; p++) {\n            setupFormatFunc(p);\n            exports.applyMask(p, data);\n            // Calculate penalty\n            var penalty = exports.getPenaltyN1(data) +\n                exports.getPenaltyN2(data) +\n                exports.getPenaltyN3(data) +\n                exports.getPenaltyN4(data);\n            // Undo previously applied mask\n            exports.applyMask(p, data);\n            if (penalty < lowerPenalty) {\n                lowerPenalty = penalty;\n                bestPattern = p;\n            }\n        }\n        return bestPattern;\n    };\n});\nvar EC_BLOCKS_TABLE = [\n    // L  M  Q  H\n    1, 1, 1, 1,\n    1, 1, 1, 1,\n    1, 1, 2, 2,\n    1, 2, 2, 4,\n    1, 2, 4, 4,\n    2, 4, 4, 4,\n    2, 4, 6, 5,\n    2, 4, 6, 6,\n    2, 5, 8, 8,\n    4, 5, 8, 8,\n    4, 5, 8, 11,\n    4, 8, 10, 11,\n    4, 9, 12, 16,\n    4, 9, 16, 16,\n    6, 10, 12, 18,\n    6, 10, 17, 16,\n    6, 11, 16, 19,\n    6, 13, 18, 21,\n    7, 14, 21, 25,\n    8, 16, 20, 25,\n    8, 17, 23, 25,\n    9, 17, 23, 34,\n    9, 18, 25, 30,\n    10, 20, 27, 32,\n    12, 21, 29, 35,\n    12, 23, 34, 37,\n    12, 25, 34, 40,\n    13, 26, 35, 42,\n    14, 28, 38, 45,\n    15, 29, 40, 48,\n    16, 31, 43, 51,\n    17, 33, 45, 54,\n    18, 35, 48, 57,\n    19, 37, 51, 60,\n    19, 38, 53, 63,\n    20, 40, 56, 66,\n    21, 43, 59, 70,\n    22, 45, 62, 74,\n    24, 47, 65, 77,\n    25, 49, 68, 81\n];\nvar EC_CODEWORDS_TABLE = [\n    // L  M  Q  H\n    7, 10, 13, 17,\n    10, 16, 22, 28,\n    15, 26, 36, 44,\n    20, 36, 52, 64,\n    26, 48, 72, 88,\n    36, 64, 96, 112,\n    40, 72, 108, 130,\n    48, 88, 132, 156,\n    60, 110, 160, 192,\n    72, 130, 192, 224,\n    80, 150, 224, 264,\n    96, 176, 260, 308,\n    104, 198, 288, 352,\n    120, 216, 320, 384,\n    132, 240, 360, 432,\n    144, 280, 408, 480,\n    168, 308, 448, 532,\n    180, 338, 504, 588,\n    196, 364, 546, 650,\n    224, 416, 600, 700,\n    224, 442, 644, 750,\n    252, 476, 690, 816,\n    270, 504, 750, 900,\n    300, 560, 810, 960,\n    312, 588, 870, 1050,\n    336, 644, 952, 1110,\n    360, 700, 1020, 1200,\n    390, 728, 1050, 1260,\n    420, 784, 1140, 1350,\n    450, 812, 1200, 1440,\n    480, 868, 1290, 1530,\n    510, 924, 1350, 1620,\n    540, 980, 1440, 1710,\n    570, 1036, 1530, 1800,\n    570, 1064, 1590, 1890,\n    600, 1120, 1680, 1980,\n    630, 1204, 1770, 2100,\n    660, 1260, 1860, 2220,\n    720, 1316, 1950, 2310,\n    750, 1372, 2040, 2430\n];\n/**\n * Returns the number of error correction block that the QR Code should contain\n * for the specified version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction blocks\n */\nvar getBlocksCount = function getBlocksCount(version, errorCorrectionLevel$1) {\n    switch (errorCorrectionLevel$1) {\n        case errorCorrectionLevel.L:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n        case errorCorrectionLevel.M:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n        case errorCorrectionLevel.Q:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n        case errorCorrectionLevel.H:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\n/**\n * Returns the number of error correction codewords to use for the specified\n * version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction codewords\n */\nvar getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel$1) {\n    switch (errorCorrectionLevel$1) {\n        case errorCorrectionLevel.L:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n        case errorCorrectionLevel.M:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n        case errorCorrectionLevel.Q:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n        case errorCorrectionLevel.H:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\nvar errorCorrectionCode = {\n    getBlocksCount: getBlocksCount,\n    getTotalCodewordsCount: getTotalCodewordsCount\n};\nvar EXP_TABLE = typedarrayBuffer.alloc(512);\nvar LOG_TABLE = typedarrayBuffer.alloc(256);\n(function initTables() {\n    var x = 1;\n    for (var i = 0; i < 255; i++) {\n        EXP_TABLE[i] = x;\n        LOG_TABLE[x] = i;\n        x <<= 1; // multiply by 2\n        // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n        // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n        if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n            x ^= 0x11D;\n        }\n    }\n    // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n    // stay inside the bounds (because we will mainly use this table for the multiplication of\n    // two GF numbers, no more).\n    // @see {@link mul}\n    for (i = 255; i < 512; i++) {\n        EXP_TABLE[i] = EXP_TABLE[i - 255];\n    }\n}());\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nvar log = function log(n) {\n    if (n < 1)\n        throw new Error('log(' + n + ')');\n    return LOG_TABLE[n];\n};\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nvar exp = function exp(n) {\n    return EXP_TABLE[n];\n};\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nvar mul = function mul(x, y) {\n    if (x === 0 || y === 0)\n        return 0;\n    // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n    // @see {@link initTables}\n    return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];\n};\nvar galoisField = {\n    log: log,\n    exp: exp,\n    mul: mul\n};\nvar polynomial = createCommonjsModule(function (module, exports) {\n    /**\n     * Multiplies two polynomials inside Galois Field\n     *\n     * @param  {Buffer} p1 Polynomial\n     * @param  {Buffer} p2 Polynomial\n     * @return {Buffer}    Product of p1 and p2\n     */\n    exports.mul = function mul(p1, p2) {\n        var coeff = typedarrayBuffer.alloc(p1.length + p2.length - 1);\n        for (var i = 0; i < p1.length; i++) {\n            for (var j = 0; j < p2.length; j++) {\n                coeff[i + j] ^= galoisField.mul(p1[i], p2[j]);\n            }\n        }\n        return coeff;\n    };\n    /**\n     * Calculate the remainder of polynomials division\n     *\n     * @param  {Buffer} divident Polynomial\n     * @param  {Buffer} divisor  Polynomial\n     * @return {Buffer}          Remainder\n     */\n    exports.mod = function mod(divident, divisor) {\n        var result = typedarrayBuffer.from(divident);\n        while ((result.length - divisor.length) >= 0) {\n            var coeff = result[0];\n            for (var i = 0; i < divisor.length; i++) {\n                result[i] ^= galoisField.mul(divisor[i], coeff);\n            }\n            // remove all zeros from buffer head\n            var offset = 0;\n            while (offset < result.length && result[offset] === 0)\n                offset++;\n            result = result.slice(offset);\n        }\n        return result;\n    };\n    /**\n     * Generate an irreducible generator polynomial of specified degree\n     * (used by Reed-Solomon encoder)\n     *\n     * @param  {Number} degree Degree of the generator polynomial\n     * @return {Buffer}        Buffer containing polynomial coefficients\n     */\n    exports.generateECPolynomial = function generateECPolynomial(degree) {\n        var poly = typedarrayBuffer.from([1]);\n        for (var i = 0; i < degree; i++) {\n            poly = exports.mul(poly, [1, galoisField.exp(i)]);\n        }\n        return poly;\n    };\n});\nvar Buffer$1 = buffer.Buffer;\nfunction ReedSolomonEncoder(degree) {\n    this.genPoly = undefined;\n    this.degree = degree;\n    if (this.degree)\n        this.initialize(this.degree);\n}\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize(degree) {\n    // create an irreducible generator polynomial\n    this.degree = degree;\n    this.genPoly = polynomial.generateECPolynomial(this.degree);\n};\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode(data) {\n    if (!this.genPoly) {\n        throw new Error('Encoder not initialized');\n    }\n    // Calculate EC for this data block\n    // extends data size to data+genPoly size\n    var pad = typedarrayBuffer.alloc(this.degree);\n    var paddedData = Buffer$1.concat([data, pad], data.length + this.degree);\n    // The error correction codewords are the remainder after dividing the data codewords\n    // by a generator polynomial\n    var remainder = polynomial.mod(paddedData, this.genPoly);\n    // return EC data blocks (last n byte, where n is the degree of genPoly)\n    // If coefficients number in remainder are less than genPoly degree,\n    // pad with 0s to the left to reach the needed number of coefficients\n    var start = this.degree - remainder.length;\n    if (start > 0) {\n        var buff = typedarrayBuffer.alloc(this.degree);\n        remainder.copy(buff, start);\n        return buff;\n    }\n    return remainder;\n};\nvar reedSolomonEncoder = ReedSolomonEncoder;\n/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nvar isValid = function isValid(version) {\n    return !isNaN(version) && version >= 1 && version <= 40;\n};\nvar versionCheck = {\n    isValid: isValid\n};\nvar numeric = '[0-9]+';\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+';\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n    '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n    '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n    '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\nkanji = kanji.replace(/u/g, '\\\\u');\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+';\nvar KANJI = new RegExp(kanji, 'g');\nvar BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\nvar BYTE = new RegExp(byte, 'g');\nvar NUMERIC = new RegExp(numeric, 'g');\nvar ALPHANUMERIC = new RegExp(alphanumeric, 'g');\nvar TEST_KANJI = new RegExp('^' + kanji + '$');\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$');\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\nvar testKanji = function testKanji(str) {\n    return TEST_KANJI.test(str);\n};\nvar testNumeric = function testNumeric(str) {\n    return TEST_NUMERIC.test(str);\n};\nvar testAlphanumeric = function testAlphanumeric(str) {\n    return TEST_ALPHANUMERIC.test(str);\n};\nvar regex = {\n    KANJI: KANJI,\n    BYTE_KANJI: BYTE_KANJI,\n    BYTE: BYTE,\n    NUMERIC: NUMERIC,\n    ALPHANUMERIC: ALPHANUMERIC,\n    testKanji: testKanji,\n    testNumeric: testNumeric,\n    testAlphanumeric: testAlphanumeric\n};\nvar mode = createCommonjsModule(function (module, exports) {\n    /**\n     * Numeric mode encodes data from the decimal digit set (0 - 9)\n     * (byte values 30HEX to 39HEX).\n     * Normally, 3 data characters are represented by 10 bits.\n     *\n     * @type {Object}\n     */\n    exports.NUMERIC = {\n        id: 'Numeric',\n        bit: 1 << 0,\n        ccBits: [10, 12, 14]\n    };\n    /**\n     * Alphanumeric mode encodes data from a set of 45 characters,\n     * i.e. 10 numeric digits (0 - 9),\n     *      26 alphabetic characters (A - Z),\n     *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n     * Normally, two input characters are represented by 11 bits.\n     *\n     * @type {Object}\n     */\n    exports.ALPHANUMERIC = {\n        id: 'Alphanumeric',\n        bit: 1 << 1,\n        ccBits: [9, 11, 13]\n    };\n    /**\n     * In byte mode, data is encoded at 8 bits per character.\n     *\n     * @type {Object}\n     */\n    exports.BYTE = {\n        id: 'Byte',\n        bit: 1 << 2,\n        ccBits: [8, 16, 16]\n    };\n    /**\n     * The Kanji mode efficiently encodes Kanji characters in accordance with\n     * the Shift JIS system based on JIS X 0208.\n     * The Shift JIS values are shifted from the JIS X 0208 values.\n     * JIS X 0208 gives details of the shift coded representation.\n     * Each two-byte character value is compacted to a 13-bit binary codeword.\n     *\n     * @type {Object}\n     */\n    exports.KANJI = {\n        id: 'Kanji',\n        bit: 1 << 3,\n        ccBits: [8, 10, 12]\n    };\n    /**\n     * Mixed mode will contain a sequences of data in a combination of any of\n     * the modes described above\n     *\n     * @type {Object}\n     */\n    exports.MIXED = {\n        bit: -1\n    };\n    /**\n     * Returns the number of bits needed to store the data length\n     * according to QR Code specifications.\n     *\n     * @param  {Mode}   mode    Data mode\n     * @param  {Number} version QR Code version\n     * @return {Number}         Number of bits\n     */\n    exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\n        if (!mode.ccBits)\n            throw new Error('Invalid mode: ' + mode);\n        if (!versionCheck.isValid(version)) {\n            throw new Error('Invalid version: ' + version);\n        }\n        if (version >= 1 && version < 10)\n            return mode.ccBits[0];\n        else if (version < 27)\n            return mode.ccBits[1];\n        return mode.ccBits[2];\n    };\n    /**\n     * Returns the most efficient mode to store the specified data\n     *\n     * @param  {String} dataStr Input data string\n     * @return {Mode}           Best mode\n     */\n    exports.getBestModeForData = function getBestModeForData(dataStr) {\n        if (regex.testNumeric(dataStr))\n            return exports.NUMERIC;\n        else if (regex.testAlphanumeric(dataStr))\n            return exports.ALPHANUMERIC;\n        else if (regex.testKanji(dataStr))\n            return exports.KANJI;\n        else\n            return exports.BYTE;\n    };\n    /**\n     * Return mode name as string\n     *\n     * @param {Mode} mode Mode object\n     * @returns {String}  Mode name\n     */\n    exports.toString = function toString(mode) {\n        if (mode && mode.id)\n            return mode.id;\n        throw new Error('Invalid mode');\n    };\n    /**\n     * Check if input param is a valid mode object\n     *\n     * @param   {Mode}    mode Mode object\n     * @returns {Boolean} True if valid mode, false otherwise\n     */\n    exports.isValid = function isValid(mode) {\n        return mode && mode.bit && mode.ccBits;\n    };\n    /**\n     * Get mode object from its name\n     *\n     * @param   {String} string Mode name\n     * @returns {Mode}          Mode object\n     */\n    function fromString(string) {\n        if (typeof string !== 'string') {\n            throw new Error('Param is not a string');\n        }\n        var lcStr = string.toLowerCase();\n        switch (lcStr) {\n            case 'numeric':\n                return exports.NUMERIC;\n            case 'alphanumeric':\n                return exports.ALPHANUMERIC;\n            case 'kanji':\n                return exports.KANJI;\n            case 'byte':\n                return exports.BYTE;\n            default:\n                throw new Error('Unknown mode: ' + string);\n        }\n    }\n    /**\n     * Returns mode from a value.\n     * If value is not a valid mode, returns defaultValue\n     *\n     * @param  {Mode|String} value        Encoding mode\n     * @param  {Mode}        defaultValue Fallback value\n     * @return {Mode}                     Encoding mode\n     */\n    exports.from = function from(value, defaultValue) {\n        if (exports.isValid(value)) {\n            return value;\n        }\n        try {\n            return fromString(value);\n        }\n        catch (e) {\n            return defaultValue;\n        }\n    };\n});\nvar version = createCommonjsModule(function (module, exports) {\n    // Generator polynomial used to encode version information\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G18_BCH = utils.getBCHDigit(G18);\n    function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n                return currentVersion;\n            }\n        }\n        return undefined;\n    }\n    function getReservedBitsCount(mode$1, version) {\n        // Character count indicator + mode indicator bits\n        return mode.getCharCountIndicator(mode$1, version) + 4;\n    }\n    function getTotalBitsFromDataArray(segments, version) {\n        var totalBits = 0;\n        segments.forEach(function (data) {\n            var reservedBits = getReservedBitsCount(data.mode, version);\n            totalBits += reservedBits + data.getBitsLength();\n        });\n        return totalBits;\n    }\n    function getBestVersionForMixedData(segments, errorCorrectionLevel) {\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n            var length = getTotalBitsFromDataArray(segments, currentVersion);\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode.MIXED)) {\n                return currentVersion;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns version number from a value.\n     * If value is not a valid version, returns defaultValue\n     *\n     * @param  {Number|String} value        QR Code version\n     * @param  {Number}        defaultValue Fallback value\n     * @return {Number}                     QR Code version number\n     */\n    exports.from = function from(value, defaultValue) {\n        if (versionCheck.isValid(value)) {\n            return parseInt(value, 10);\n        }\n        return defaultValue;\n    };\n    /**\n     * Returns how much data can be stored with the specified QR code version\n     * and error correction level\n     *\n     * @param  {Number} version              QR Code version (1-40)\n     * @param  {Number} errorCorrectionLevel Error correction level\n     * @param  {Mode}   mode                 Data mode\n     * @return {Number}                      Quantity of storable data\n     */\n    exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode$1) {\n        if (!versionCheck.isValid(version)) {\n            throw new Error('Invalid QR Code version');\n        }\n        // Use Byte mode as default\n        if (typeof mode$1 === 'undefined')\n            mode$1 = mode.BYTE;\n        // Total codewords for this QR code version (Data + Error correction)\n        var totalCodewords = utils.getSymbolTotalCodewords(version);\n        // Total number of error correction codewords\n        var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n        // Total number of data codewords\n        var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n        if (mode$1 === mode.MIXED)\n            return dataTotalCodewordsBits;\n        var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode$1, version);\n        // Return max number of storable codewords\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return Math.floor((usableBits / 10) * 3);\n            case mode.ALPHANUMERIC:\n                return Math.floor((usableBits / 11) * 2);\n            case mode.KANJI:\n                return Math.floor(usableBits / 13);\n            case mode.BYTE:\n            default:\n                return Math.floor(usableBits / 8);\n        }\n    };\n    /**\n     * Returns the minimum version needed to contain the amount of data\n     *\n     * @param  {Segment} data                    Segment of data\n     * @param  {Number} [errorCorrectionLevel=H] Error correction level\n     * @param  {Mode} mode                       Data mode\n     * @return {Number}                          QR Code version\n     */\n    exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel$1) {\n        var seg;\n        var ecl = errorCorrectionLevel.from(errorCorrectionLevel$1, errorCorrectionLevel.M);\n        if (isarray(data)) {\n            if (data.length > 1) {\n                return getBestVersionForMixedData(data, ecl);\n            }\n            if (data.length === 0) {\n                return 1;\n            }\n            seg = data[0];\n        }\n        else {\n            seg = data;\n        }\n        return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\n    };\n    /**\n     * Returns version information with relative error correction bits\n     *\n     * The version information is included in QR Code symbols of version 7 or larger.\n     * It consists of an 18-bit sequence containing 6 data bits,\n     * with 12 error correction bits calculated using the (18, 6) Golay code.\n     *\n     * @param  {Number} version QR Code version\n     * @return {Number}         Encoded version info bits\n     */\n    exports.getEncodedBits = function getEncodedBits(version) {\n        if (!versionCheck.isValid(version) || version < 7) {\n            throw new Error('Invalid QR Code version');\n        }\n        var d = version << 12;\n        while (utils.getBCHDigit(d) - G18_BCH >= 0) {\n            d ^= (G18 << (utils.getBCHDigit(d) - G18_BCH));\n        }\n        return (version << 12) | d;\n    };\n});\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\nvar G15_BCH = utils.getBCHDigit(G15);\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nvar getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {\n    var data = ((errorCorrectionLevel.bit << 3) | mask);\n    var d = data << 10;\n    while (utils.getBCHDigit(d) - G15_BCH >= 0) {\n        d ^= (G15 << (utils.getBCHDigit(d) - G15_BCH));\n    }\n    // xor final data with mask pattern in order to ensure that\n    // no combination of Error Correction Level and data mask pattern\n    // will result in an all-zero data string\n    return ((data << 10) | d) ^ G15_MASK;\n};\nvar formatInfo = {\n    getEncodedBits: getEncodedBits\n};\nfunction NumericData(data) {\n    this.mode = mode.NUMERIC;\n    this.data = data.toString();\n}\nNumericData.getBitsLength = function getBitsLength(length) {\n    return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0);\n};\nNumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nNumericData.prototype.getBitsLength = function getBitsLength() {\n    return NumericData.getBitsLength(this.data.length);\n};\nNumericData.prototype.write = function write(bitBuffer) {\n    var i, group, value;\n    // The input data string is divided into groups of three digits,\n    // and each group is converted to its 10-bit binary equivalent.\n    for (i = 0; i + 3 <= this.data.length; i += 3) {\n        group = this.data.substr(i, 3);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, 10);\n    }\n    // If the number of input digits is not an exact multiple of three,\n    // the final one or two digits are converted to 4 or 7 bits respectively.\n    var remainingNum = this.data.length - i;\n    if (remainingNum > 0) {\n        group = this.data.substr(i);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, remainingNum * 3 + 1);\n    }\n};\nvar numericData = NumericData;\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n    ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n];\nfunction AlphanumericData(data) {\n    this.mode = mode.ALPHANUMERIC;\n    this.data = data;\n}\nAlphanumericData.getBitsLength = function getBitsLength(length) {\n    return 11 * Math.floor(length / 2) + 6 * (length % 2);\n};\nAlphanumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nAlphanumericData.prototype.getBitsLength = function getBitsLength() {\n    return AlphanumericData.getBitsLength(this.data.length);\n};\nAlphanumericData.prototype.write = function write(bitBuffer) {\n    var i;\n    // Input data characters are divided into groups of two characters\n    // and encoded as 11-bit binary codes.\n    for (i = 0; i + 2 <= this.data.length; i += 2) {\n        // The character value of the first character is multiplied by 45\n        var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\n        // The character value of the second digit is added to the product\n        value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\n        // The sum is then stored as 11-bit binary number\n        bitBuffer.put(value, 11);\n    }\n    // If the number of input data characters is not a multiple of two,\n    // the character value of the final character is encoded as a 6-bit binary number.\n    if (this.data.length % 2) {\n        bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n    }\n};\nvar alphanumericData = AlphanumericData;\nfunction ByteData(data) {\n    this.mode = mode.BYTE;\n    this.data = typedarrayBuffer.from(data);\n}\nByteData.getBitsLength = function getBitsLength(length) {\n    return length * 8;\n};\nByteData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nByteData.prototype.getBitsLength = function getBitsLength() {\n    return ByteData.getBitsLength(this.data.length);\n};\nByteData.prototype.write = function (bitBuffer) {\n    for (var i = 0, l = this.data.length; i < l; i++) {\n        bitBuffer.put(this.data[i], 8);\n    }\n};\nvar byteData = ByteData;\nfunction KanjiData(data) {\n    this.mode = mode.KANJI;\n    this.data = data;\n}\nKanjiData.getBitsLength = function getBitsLength(length) {\n    return length * 13;\n};\nKanjiData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nKanjiData.prototype.getBitsLength = function getBitsLength() {\n    return KanjiData.getBitsLength(this.data.length);\n};\nKanjiData.prototype.write = function (bitBuffer) {\n    var i;\n    // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n    // These byte values are shifted from the JIS X 0208 values.\n    // JIS X 0208 gives details of the shift coded representation.\n    for (i = 0; i < this.data.length; i++) {\n        var value = utils.toSJIS(this.data[i]);\n        // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n        if (value >= 0x8140 && value <= 0x9FFC) {\n            // Subtract 0x8140 from Shift JIS value\n            value -= 0x8140;\n            // For characters with Shift JIS values from 0xE040 to 0xEBBF\n        }\n        else if (value >= 0xE040 && value <= 0xEBBF) {\n            // Subtract 0xC140 from Shift JIS value\n            value -= 0xC140;\n        }\n        else {\n            throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' +\n                'Make sure your charset is UTF-8');\n        }\n        // Multiply most significant byte of result by 0xC0\n        // and add least significant byte to product\n        value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff);\n        // Convert result to a 13-bit binary string\n        bitBuffer.put(value, 13);\n    }\n};\nvar kanjiData = KanjiData;\nvar dijkstra_1 = createCommonjsModule(function (module) {\n    /******************************************************************************\n     * Created 2008-08-19.\n     *\n     * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n     *\n     * Copyright (C) 2008\n     *   Wyatt Baldwin <self@wyattbaldwin.com>\n     *   All rights reserved\n     *\n     * Licensed under the MIT license.\n     *\n     *   http://www.opensource.org/licenses/mit-license.php\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     *****************************************************************************/\n    var dijkstra = {\n        single_source_shortest_paths: function (graph, s, d) {\n            // Predecessor map for each node that has been encountered.\n            // node ID => predecessor node ID\n            var predecessors = {};\n            // Costs of shortest paths from s to all nodes encountered.\n            // node ID => cost\n            var costs = {};\n            costs[s] = 0;\n            // Costs of shortest paths from s to all nodes encountered; differs from\n            // `costs` in that it provides easy access to the node that currently has\n            // the known shortest path from s.\n            // XXX: Do we actually need both `costs` and `open`?\n            var open = dijkstra.PriorityQueue.make();\n            open.push(s, 0);\n            var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;\n            while (!open.empty()) {\n                // In the nodes remaining in graph that have a known cost from s,\n                // find the node, u, that currently has the shortest path from s.\n                closest = open.pop();\n                u = closest.value;\n                cost_of_s_to_u = closest.cost;\n                // Get nodes adjacent to u...\n                adjacent_nodes = graph[u] || {};\n                // ...and explore the edges that connect u to those nodes, updating\n                // the cost of the shortest paths to any or all of those nodes as\n                // necessary. v is the node across the current edge from u.\n                for (v in adjacent_nodes) {\n                    if (adjacent_nodes.hasOwnProperty(v)) {\n                        // Get the cost of the edge running from u to v.\n                        cost_of_e = adjacent_nodes[v];\n                        // Cost of s to u plus the cost of u to v across e--this is *a*\n                        // cost from s to v that may or may not be less than the current\n                        // known cost to v.\n                        cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n                        // If we haven't visited v yet OR if the current known cost from s to\n                        // v is greater than the new cost we just found (cost of s to u plus\n                        // cost of u to v across e), update v's cost in the cost list and\n                        // update v's predecessor in the predecessor list (it's now u).\n                        cost_of_s_to_v = costs[v];\n                        first_visit = (typeof costs[v] === 'undefined');\n                        if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n                            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n                            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n                            predecessors[v] = u;\n                        }\n                    }\n                }\n            }\n            if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n                var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n                throw new Error(msg);\n            }\n            return predecessors;\n        },\n        extract_shortest_path_from_predecessor_list: function (predecessors, d) {\n            var nodes = [];\n            var u = d;\n            while (u) {\n                nodes.push(u);\n                u = predecessors[u];\n            }\n            nodes.reverse();\n            return nodes;\n        },\n        find_path: function (graph, s, d) {\n            var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n            return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);\n        },\n        /**\n         * A very naive priority queue implementation.\n         */\n        PriorityQueue: {\n            make: function (opts) {\n                var T = dijkstra.PriorityQueue, t = {}, key;\n                opts = opts || {};\n                for (key in T) {\n                    if (T.hasOwnProperty(key)) {\n                        t[key] = T[key];\n                    }\n                }\n                t.queue = [];\n                t.sorter = opts.sorter || T.default_sorter;\n                return t;\n            },\n            default_sorter: function (a, b) {\n                return a.cost - b.cost;\n            },\n            /**\n             * Add a new item to the queue and ensure the highest priority element\n             * is at the front of the queue.\n             */\n            push: function (value, cost) {\n                var item = { value: value, cost: cost };\n                this.queue.push(item);\n                this.queue.sort(this.sorter);\n            },\n            /**\n             * Return the highest priority element in the queue.\n             */\n            pop: function () {\n                return this.queue.shift();\n            },\n            empty: function () {\n                return this.queue.length === 0;\n            }\n        }\n    };\n    // node.js module exports\n    {\n        module.exports = dijkstra;\n    }\n});\nvar segments = createCommonjsModule(function (module, exports) {\n    /**\n     * Returns UTF8 byte length\n     *\n     * @param  {String} str Input string\n     * @return {Number}     Number of byte\n     */\n    function getStringByteLength(str) {\n        return unescape(encodeURIComponent(str)).length;\n    }\n    /**\n     * Get a list of segments of the specified mode\n     * from a string\n     *\n     * @param  {Mode}   mode Segment mode\n     * @param  {String} str  String to process\n     * @return {Array}       Array of object with segments data\n     */\n    function getSegments(regex, mode, str) {\n        var segments = [];\n        var result;\n        while ((result = regex.exec(str)) !== null) {\n            segments.push({\n                data: result[0],\n                index: result.index,\n                mode: mode,\n                length: result[0].length\n            });\n        }\n        return segments;\n    }\n    /**\n     * Extracts a series of segments with the appropriate\n     * modes from a string\n     *\n     * @param  {String} dataStr Input string\n     * @return {Array}          Array of object with segments data\n     */\n    function getSegmentsFromString(dataStr) {\n        var numSegs = getSegments(regex.NUMERIC, mode.NUMERIC, dataStr);\n        var alphaNumSegs = getSegments(regex.ALPHANUMERIC, mode.ALPHANUMERIC, dataStr);\n        var byteSegs;\n        var kanjiSegs;\n        if (utils.isKanjiModeEnabled()) {\n            byteSegs = getSegments(regex.BYTE, mode.BYTE, dataStr);\n            kanjiSegs = getSegments(regex.KANJI, mode.KANJI, dataStr);\n        }\n        else {\n            byteSegs = getSegments(regex.BYTE_KANJI, mode.BYTE, dataStr);\n            kanjiSegs = [];\n        }\n        var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\n        return segs\n            .sort(function (s1, s2) {\n            return s1.index - s2.index;\n        })\n            .map(function (obj) {\n            return {\n                data: obj.data,\n                mode: obj.mode,\n                length: obj.length\n            };\n        });\n    }\n    /**\n     * Returns how many bits are needed to encode a string of\n     * specified length with the specified mode\n     *\n     * @param  {Number} length String length\n     * @param  {Mode} mode     Segment mode\n     * @return {Number}        Bit length\n     */\n    function getSegmentBitsLength(length, mode$1) {\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return numericData.getBitsLength(length);\n            case mode.ALPHANUMERIC:\n                return alphanumericData.getBitsLength(length);\n            case mode.KANJI:\n                return kanjiData.getBitsLength(length);\n            case mode.BYTE:\n                return byteData.getBitsLength(length);\n        }\n    }\n    /**\n     * Merges adjacent segments which have the same mode\n     *\n     * @param  {Array} segs Array of object with segments data\n     * @return {Array}      Array of object with segments data\n     */\n    function mergeSegments(segs) {\n        return segs.reduce(function (acc, curr) {\n            var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\n            if (prevSeg && prevSeg.mode === curr.mode) {\n                acc[acc.length - 1].data += curr.data;\n                return acc;\n            }\n            acc.push(curr);\n            return acc;\n        }, []);\n    }\n    /**\n     * Generates a list of all possible nodes combination which\n     * will be used to build a segments graph.\n     *\n     * Nodes are divided by groups. Each group will contain a list of all the modes\n     * in which is possible to encode the given text.\n     *\n     * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n     * The group for '12345' will contain then 3 objects, one for each\n     * possible encoding mode.\n     *\n     * Each node represents a possible segment.\n     *\n     * @param  {Array} segs Array of object with segments data\n     * @return {Array}      Array of object with segments data\n     */\n    function buildNodes(segs) {\n        var nodes = [];\n        for (var i = 0; i < segs.length; i++) {\n            var seg = segs[i];\n            switch (seg.mode) {\n                case mode.NUMERIC:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.ALPHANUMERIC, length: seg.length },\n                        { data: seg.data, mode: mode.BYTE, length: seg.length }\n                    ]);\n                    break;\n                case mode.ALPHANUMERIC:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.BYTE, length: seg.length }\n                    ]);\n                    break;\n                case mode.KANJI:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.BYTE, length: getStringByteLength(seg.data) }\n                    ]);\n                    break;\n                case mode.BYTE:\n                    nodes.push([\n                        { data: seg.data, mode: mode.BYTE, length: getStringByteLength(seg.data) }\n                    ]);\n            }\n        }\n        return nodes;\n    }\n    /**\n     * Builds a graph from a list of nodes.\n     * All segments in each node group will be connected with all the segments of\n     * the next group and so on.\n     *\n     * At each connection will be assigned a weight depending on the\n     * segment's byte length.\n     *\n     * @param  {Array} nodes    Array of object with segments data\n     * @param  {Number} version QR Code version\n     * @return {Object}         Graph of all possible segments\n     */\n    function buildGraph(nodes, version) {\n        var table = {};\n        var graph = { 'start': {} };\n        var prevNodeIds = ['start'];\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeGroup = nodes[i];\n            var currentNodeIds = [];\n            for (var j = 0; j < nodeGroup.length; j++) {\n                var node = nodeGroup[j];\n                var key = '' + i + j;\n                currentNodeIds.push(key);\n                table[key] = { node: node, lastCount: 0 };\n                graph[key] = {};\n                for (var n = 0; n < prevNodeIds.length; n++) {\n                    var prevNodeId = prevNodeIds[n];\n                    if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n                        graph[prevNodeId][key] =\n                            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n                                getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\n                        table[prevNodeId].lastCount += node.length;\n                    }\n                    else {\n                        if (table[prevNodeId])\n                            table[prevNodeId].lastCount = node.length;\n                        graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n                            4 + mode.getCharCountIndicator(node.mode, version); // switch cost\n                    }\n                }\n            }\n            prevNodeIds = currentNodeIds;\n        }\n        for (n = 0; n < prevNodeIds.length; n++) {\n            graph[prevNodeIds[n]]['end'] = 0;\n        }\n        return { map: graph, table: table };\n    }\n    /**\n     * Builds a segment from a specified data and mode.\n     * If a mode is not specified, the more suitable will be used.\n     *\n     * @param  {String} data             Input data\n     * @param  {Mode | String} modesHint Data mode\n     * @return {Segment}                 Segment\n     */\n    function buildSingleSegment(data, modesHint) {\n        var mode$1;\n        var bestMode = mode.getBestModeForData(data);\n        mode$1 = mode.from(modesHint, bestMode);\n        // Make sure data can be encoded\n        if (mode$1 !== mode.BYTE && mode$1.bit < bestMode.bit) {\n            throw new Error('\"' + data + '\"' +\n                ' cannot be encoded with mode ' + mode.toString(mode$1) +\n                '.\\n Suggested mode is: ' + mode.toString(bestMode));\n        }\n        // Use Mode.BYTE if Kanji support is disabled\n        if (mode$1 === mode.KANJI && !utils.isKanjiModeEnabled()) {\n            mode$1 = mode.BYTE;\n        }\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return new numericData(data);\n            case mode.ALPHANUMERIC:\n                return new alphanumericData(data);\n            case mode.KANJI:\n                return new kanjiData(data);\n            case mode.BYTE:\n                return new byteData(data);\n        }\n    }\n    /**\n     * Builds a list of segments from an array.\n     * Array can contain Strings or Objects with segment's info.\n     *\n     * For each item which is a string, will be generated a segment with the given\n     * string and the more appropriate encoding mode.\n     *\n     * For each item which is an object, will be generated a segment with the given\n     * data and mode.\n     * Objects must contain at least the property \"data\".\n     * If property \"mode\" is not present, the more suitable mode will be used.\n     *\n     * @param  {Array} array Array of objects with segments data\n     * @return {Array}       Array of Segments\n     */\n    exports.fromArray = function fromArray(array) {\n        return array.reduce(function (acc, seg) {\n            if (typeof seg === 'string') {\n                acc.push(buildSingleSegment(seg, null));\n            }\n            else if (seg.data) {\n                acc.push(buildSingleSegment(seg.data, seg.mode));\n            }\n            return acc;\n        }, []);\n    };\n    /**\n     * Builds an optimized sequence of segments from a string,\n     * which will produce the shortest possible bitstream.\n     *\n     * @param  {String} data    Input string\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of segments\n     */\n    exports.fromString = function fromString(data, version) {\n        var segs = getSegmentsFromString(data, utils.isKanjiModeEnabled());\n        var nodes = buildNodes(segs);\n        var graph = buildGraph(nodes, version);\n        var path = dijkstra_1.find_path(graph.map, 'start', 'end');\n        var optimizedSegs = [];\n        for (var i = 1; i < path.length - 1; i++) {\n            optimizedSegs.push(graph.table[path[i]].node);\n        }\n        return exports.fromArray(mergeSegments(optimizedSegs));\n    };\n    /**\n     * Splits a string in various segments with the modes which\n     * best represent their content.\n     * The produced segments are far from being optimized.\n     * The output of this function is only used to estimate a QR Code version\n     * which may contain the data.\n     *\n     * @param  {string} data Input string\n     * @return {Array}       Array of segments\n     */\n    exports.rawSplit = function rawSplit(data) {\n        return exports.fromArray(getSegmentsFromString(data, utils.isKanjiModeEnabled()));\n    };\n});\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern(matrix, version) {\n    var size = matrix.size;\n    var pos = finderPattern.getPositions(version);\n    for (var i = 0; i < pos.length; i++) {\n        var row = pos[i][0];\n        var col = pos[i][1];\n        for (var r = -1; r <= 7; r++) {\n            if (row + r <= -1 || size <= row + r)\n                continue;\n            for (var c = -1; c <= 7; c++) {\n                if (col + c <= -1 || size <= col + c)\n                    continue;\n                if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n                    (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n                    (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n                    matrix.set(row + r, col + c, true, true);\n                }\n                else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern(matrix) {\n    var size = matrix.size;\n    for (var r = 8; r < size - 8; r++) {\n        var value = r % 2 === 0;\n        matrix.set(r, 6, value, true);\n        matrix.set(6, r, value, true);\n    }\n}\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern(matrix, version) {\n    var pos = alignmentPattern.getPositions(version);\n    for (var i = 0; i < pos.length; i++) {\n        var row = pos[i][0];\n        var col = pos[i][1];\n        for (var r = -2; r <= 2; r++) {\n            for (var c = -2; c <= 2; c++) {\n                if (r === -2 || r === 2 || c === -2 || c === 2 ||\n                    (r === 0 && c === 0)) {\n                    matrix.set(row + r, col + c, true, true);\n                }\n                else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo(matrix, version$1) {\n    var size = matrix.size;\n    var bits = version.getEncodedBits(version$1);\n    var row, col, mod;\n    for (var i = 0; i < 18; i++) {\n        row = Math.floor(i / 3);\n        col = i % 3 + size - 8 - 3;\n        mod = ((bits >> i) & 1) === 1;\n        matrix.set(row, col, mod, true);\n        matrix.set(col, row, mod, true);\n    }\n}\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\n    var size = matrix.size;\n    var bits = formatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);\n    var i, mod;\n    for (i = 0; i < 15; i++) {\n        mod = ((bits >> i) & 1) === 1;\n        // vertical\n        if (i < 6) {\n            matrix.set(i, 8, mod, true);\n        }\n        else if (i < 8) {\n            matrix.set(i + 1, 8, mod, true);\n        }\n        else {\n            matrix.set(size - 15 + i, 8, mod, true);\n        }\n        // horizontal\n        if (i < 8) {\n            matrix.set(8, size - i - 1, mod, true);\n        }\n        else if (i < 9) {\n            matrix.set(8, 15 - i - 1 + 1, mod, true);\n        }\n        else {\n            matrix.set(8, 15 - i - 1, mod, true);\n        }\n    }\n    // fixed module\n    matrix.set(size - 8, 8, 1, true);\n}\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData(matrix, data) {\n    var size = matrix.size;\n    var inc = -1;\n    var row = size - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n    for (var col = size - 1; col > 0; col -= 2) {\n        if (col === 6)\n            col--;\n        while (true) {\n            for (var c = 0; c < 2; c++) {\n                if (!matrix.isReserved(row, col - c)) {\n                    var dark = false;\n                    if (byteIndex < data.length) {\n                        dark = (((data[byteIndex] >>> bitIndex) & 1) === 1);\n                    }\n                    matrix.set(row, col - c, dark);\n                    bitIndex--;\n                    if (bitIndex === -1) {\n                        byteIndex++;\n                        bitIndex = 7;\n                    }\n                }\n            }\n            row += inc;\n            if (row < 0 || size <= row) {\n                row -= inc;\n                inc = -inc;\n                break;\n            }\n        }\n    }\n}\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData(version, errorCorrectionLevel, segments) {\n    // Prepare data buffer\n    var buffer = new bitBuffer();\n    segments.forEach(function (data) {\n        // prefix data with mode indicator (4 bits)\n        buffer.put(data.mode.bit, 4);\n        // Prefix data with character count indicator.\n        // The character count indicator is a string of bits that represents the\n        // number of characters that are being encoded.\n        // The character count indicator must be placed after the mode indicator\n        // and must be a certain number of bits long, depending on the QR version\n        // and data mode\n        // @see {@link Mode.getCharCountIndicator}.\n        buffer.put(data.getLength(), mode.getCharCountIndicator(data.mode, version));\n        // add binary data sequence to buffer\n        data.write(buffer);\n    });\n    // Calculate required number of bits\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n    // Add a terminator.\n    // If the bit string is shorter than the total number of required bits,\n    // a terminator of up to four 0s must be added to the right side of the string.\n    // If the bit string is more than four bits shorter than the required number of bits,\n    // add four 0s to the end.\n    if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n        buffer.put(0, 4);\n    }\n    // If the bit string is fewer than four bits shorter, add only the number of 0s that\n    // are needed to reach the required number of bits.\n    // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n    // pad the string on the right with 0s to make the string's length a multiple of 8.\n    while (buffer.getLengthInBits() % 8 !== 0) {\n        buffer.putBit(0);\n    }\n    // Add pad bytes if the string is still shorter than the total number of required bits.\n    // Extend the buffer to fill the data capacity of the symbol corresponding to\n    // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n    // and 00010001 (0x11) alternately.\n    var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\n    for (var i = 0; i < remainingByte; i++) {\n        buffer.put(i % 2 ? 0x11 : 0xEC, 8);\n    }\n    return createCodewords(buffer, version, errorCorrectionLevel);\n}\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords(bitBuffer, version, errorCorrectionLevel) {\n    // Total codewords for this QR code version (Data + Error correction)\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\n    // Total number of error correction codewords\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    // Total number of data codewords\n    var dataTotalCodewords = totalCodewords - ecTotalCodewords;\n    // Total number of blocks\n    var ecTotalBlocks = errorCorrectionCode.getBlocksCount(version, errorCorrectionLevel);\n    // Calculate how many blocks each group should contain\n    var blocksInGroup2 = totalCodewords % ecTotalBlocks;\n    var blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\n    var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\n    var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\n    var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;\n    // Number of EC codewords is the same for both groups\n    var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;\n    // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n    var rs = new reedSolomonEncoder(ecCount);\n    var offset = 0;\n    var dcData = new Array(ecTotalBlocks);\n    var ecData = new Array(ecTotalBlocks);\n    var maxDataSize = 0;\n    var buffer = typedarrayBuffer.from(bitBuffer.buffer);\n    // Divide the buffer into the required number of blocks\n    for (var b = 0; b < ecTotalBlocks; b++) {\n        var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;\n        // extract a block of data from buffer\n        dcData[b] = buffer.slice(offset, offset + dataSize);\n        // Calculate EC codewords for this data block\n        ecData[b] = rs.encode(dcData[b]);\n        offset += dataSize;\n        maxDataSize = Math.max(maxDataSize, dataSize);\n    }\n    // Create final data\n    // Interleave the data and error correction codewords from each block\n    var data = typedarrayBuffer.alloc(totalCodewords);\n    var index = 0;\n    var i, r;\n    // Add data codewords\n    for (i = 0; i < maxDataSize; i++) {\n        for (r = 0; r < ecTotalBlocks; r++) {\n            if (i < dcData[r].length) {\n                data[index++] = dcData[r][i];\n            }\n        }\n    }\n    // Apped EC codewords\n    for (i = 0; i < ecCount; i++) {\n        for (r = 0; r < ecTotalBlocks; r++) {\n            data[index++] = ecData[r][i];\n        }\n    }\n    return data;\n}\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol(data, version$1, errorCorrectionLevel, maskPattern$1) {\n    var segments$1;\n    if (isarray(data)) {\n        segments$1 = segments.fromArray(data);\n    }\n    else if (typeof data === 'string') {\n        var estimatedVersion = version$1;\n        if (!estimatedVersion) {\n            var rawSegments = segments.rawSplit(data);\n            // Estimate best version that can contain raw splitted segments\n            estimatedVersion = version.getBestVersionForData(rawSegments, errorCorrectionLevel);\n        }\n        // Build optimized segments\n        // If estimated version is undefined, try with the highest version\n        segments$1 = segments.fromString(data, estimatedVersion || 40);\n    }\n    else {\n        throw new Error('Invalid data');\n    }\n    // Get the min version that can contain data\n    var bestVersion = version.getBestVersionForData(segments$1, errorCorrectionLevel);\n    // If no version is found, data cannot be stored\n    if (!bestVersion) {\n        throw new Error('The amount of data is too big to be stored in a QR Code');\n    }\n    // If not specified, use min version as default\n    if (!version$1) {\n        version$1 = bestVersion;\n        // Check if the specified version can contain the data\n    }\n    else if (version$1 < bestVersion) {\n        throw new Error('\\n' +\n            'The chosen QR Code version cannot contain this amount of data.\\n' +\n            'Minimum version required to store current data is: ' + bestVersion + '.\\n');\n    }\n    var dataBits = createData(version$1, errorCorrectionLevel, segments$1);\n    // Allocate matrix buffer\n    var moduleCount = utils.getSymbolSize(version$1);\n    var modules = new bitMatrix(moduleCount);\n    // Add function modules\n    setupFinderPattern(modules, version$1);\n    setupTimingPattern(modules);\n    setupAlignmentPattern(modules, version$1);\n    // Add temporary dummy bits for format info just to set them as reserved.\n    // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n    // since the masking operation must be performed only on the encoding region.\n    // These blocks will be replaced with correct values later in code.\n    setupFormatInfo(modules, errorCorrectionLevel, 0);\n    if (version$1 >= 7) {\n        setupVersionInfo(modules, version$1);\n    }\n    // Add data codewords\n    setupData(modules, dataBits);\n    if (isNaN(maskPattern$1)) {\n        // Find best mask pattern\n        maskPattern$1 = maskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));\n    }\n    // Apply mask pattern\n    maskPattern.applyMask(maskPattern$1, modules);\n    // Replace format info bits with correct values\n    setupFormatInfo(modules, errorCorrectionLevel, maskPattern$1);\n    return {\n        modules: modules,\n        version: version$1,\n        errorCorrectionLevel: errorCorrectionLevel,\n        maskPattern: maskPattern$1,\n        segments: segments$1\n    };\n}\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nvar create = function create(data, options) {\n    if (typeof data === 'undefined' || data === '') {\n        throw new Error('No input text');\n    }\n    var errorCorrectionLevel$1 = errorCorrectionLevel.M;\n    var version$1;\n    var mask;\n    if (typeof options !== 'undefined') {\n        // Use higher error correction level as default\n        errorCorrectionLevel$1 = errorCorrectionLevel.from(options.errorCorrectionLevel, errorCorrectionLevel.M);\n        version$1 = version.from(options.version);\n        mask = maskPattern.from(options.maskPattern);\n        if (options.toSJISFunc) {\n            utils.setToSJISFunction(options.toSJISFunc);\n        }\n    }\n    return createSymbol(data, version$1, errorCorrectionLevel$1, mask);\n};\nvar qrcode = {\n    create: create\n};\nvar utils$1 = createCommonjsModule(function (module, exports) {\n    function hex2rgba(hex) {\n        if (typeof hex === 'number') {\n            hex = hex.toString();\n        }\n        if (typeof hex !== 'string') {\n            throw new Error('Color should be defined as hex string');\n        }\n        var hexCode = hex.slice().replace('#', '').split('');\n        if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n            throw new Error('Invalid hex color: ' + hex);\n        }\n        // Convert from short to long form (fff -> ffffff)\n        if (hexCode.length === 3 || hexCode.length === 4) {\n            hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n                return [c, c];\n            }));\n        }\n        // Add default alpha value\n        if (hexCode.length === 6)\n            hexCode.push('F', 'F');\n        var hexValue = parseInt(hexCode.join(''), 16);\n        return {\n            r: (hexValue >> 24) & 255,\n            g: (hexValue >> 16) & 255,\n            b: (hexValue >> 8) & 255,\n            a: hexValue & 255,\n            hex: '#' + hexCode.slice(0, 6).join('')\n        };\n    }\n    exports.getOptions = function getOptions(options) {\n        if (!options)\n            options = {};\n        if (!options.color)\n            options.color = {};\n        var margin = typeof options.margin === 'undefined' ||\n            options.margin === null ||\n            options.margin < 0 ? 4 : options.margin;\n        var width = options.width && options.width >= 21 ? options.width : undefined;\n        var scale = options.scale || 4;\n        return {\n            width: width,\n            scale: width ? 4 : scale,\n            margin: margin,\n            color: {\n                dark: hex2rgba(options.color.dark || '#000000ff'),\n                light: hex2rgba(options.color.light || '#ffffffff')\n            },\n            type: options.type,\n            rendererOpts: options.rendererOpts || {}\n        };\n    };\n    exports.getScale = function getScale(qrSize, opts) {\n        return opts.width && opts.width >= qrSize + opts.margin * 2\n            ? opts.width / (qrSize + opts.margin * 2)\n            : opts.scale;\n    };\n    exports.getImageWidth = function getImageWidth(qrSize, opts) {\n        var scale = exports.getScale(qrSize, opts);\n        return Math.floor((qrSize + opts.margin * 2) * scale);\n    };\n    exports.qrToImageData = function qrToImageData(imgData, qr, opts) {\n        var size = qr.modules.size;\n        var data = qr.modules.data;\n        var scale = exports.getScale(size, opts);\n        var symbolSize = Math.floor((size + opts.margin * 2) * scale);\n        var scaledMargin = opts.margin * scale;\n        var palette = [opts.color.light, opts.color.dark];\n        for (var i = 0; i < symbolSize; i++) {\n            for (var j = 0; j < symbolSize; j++) {\n                var posDst = (i * symbolSize + j) * 4;\n                var pxColor = opts.color.light;\n                if (i >= scaledMargin && j >= scaledMargin &&\n                    i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n                    var iSrc = Math.floor((i - scaledMargin) / scale);\n                    var jSrc = Math.floor((j - scaledMargin) / scale);\n                    pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n                }\n                imgData[posDst++] = pxColor.r;\n                imgData[posDst++] = pxColor.g;\n                imgData[posDst++] = pxColor.b;\n                imgData[posDst] = pxColor.a;\n            }\n        }\n    };\n});\nvar canvas = createCommonjsModule(function (module, exports) {\n    function clearCanvas(ctx, canvas, size) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        if (!canvas.style)\n            canvas.style = {};\n        canvas.height = size;\n        canvas.width = size;\n        canvas.style.height = size + 'px';\n        canvas.style.width = size + 'px';\n    }\n    function getCanvasElement() {\n        try {\n            return document.createElement('canvas');\n        }\n        catch (e) {\n            throw new Error('You need to specify a canvas element');\n        }\n    }\n    exports.render = function render(qrData, canvas, options) {\n        var opts = options;\n        var canvasEl = canvas;\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n            opts = canvas;\n            canvas = undefined;\n        }\n        if (!canvas) {\n            canvasEl = getCanvasElement();\n        }\n        opts = utils$1.getOptions(opts);\n        var size = utils$1.getImageWidth(qrData.modules.size, opts);\n        var ctx = canvasEl.getContext('2d');\n        var image = ctx.createImageData(size, size);\n        utils$1.qrToImageData(image.data, qrData, opts);\n        clearCanvas(ctx, canvasEl, size);\n        ctx.putImageData(image, 0, 0);\n        return canvasEl;\n    };\n    exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\n        var opts = options;\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n            opts = canvas;\n            canvas = undefined;\n        }\n        if (!opts)\n            opts = {};\n        var canvasEl = exports.render(qrData, canvas, opts);\n        var type = opts.type || 'image/png';\n        var rendererOpts = opts.rendererOpts || {};\n        return canvasEl.toDataURL(type, rendererOpts.quality);\n    };\n});\nfunction getColorAttrib(color, attrib) {\n    var alpha = color.a / 255;\n    var str = attrib + '=\"' + color.hex + '\"';\n    return alpha < 1\n        ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n        : str;\n}\nfunction svgCmd(cmd, x, y) {\n    var str = cmd + x;\n    if (typeof y !== 'undefined')\n        str += ' ' + y;\n    return str;\n}\nfunction qrToPath(data, size, margin) {\n    var path = '';\n    var moveBy = 0;\n    var newRow = false;\n    var lineLength = 0;\n    for (var i = 0; i < data.length; i++) {\n        var col = Math.floor(i % size);\n        var row = Math.floor(i / size);\n        if (!col && !newRow)\n            newRow = true;\n        if (data[i]) {\n            lineLength++;\n            if (!(i > 0 && col > 0 && data[i - 1])) {\n                path += newRow\n                    ? svgCmd('M', col + margin, 0.5 + row + margin)\n                    : svgCmd('m', moveBy, 0);\n                moveBy = 0;\n                newRow = false;\n            }\n            if (!(col + 1 < size && data[i + 1])) {\n                path += svgCmd('h', lineLength);\n                lineLength = 0;\n            }\n        }\n        else {\n            moveBy++;\n        }\n    }\n    return path;\n}\nvar render = function render(qrData, options, cb) {\n    var opts = utils$1.getOptions(options);\n    var size = qrData.modules.size;\n    var data = qrData.modules.data;\n    var qrcodesize = size + opts.margin * 2;\n    var bg = !opts.color.light.a\n        ? ''\n        : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n            ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>';\n    var path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n        ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>';\n    var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"';\n    var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\n    var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n';\n    if (typeof cb === 'function') {\n        cb(null, svgTag);\n    }\n    return svgTag;\n};\nvar svgTag = {\n    render: render\n};\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\n    var args = [].slice.call(arguments, 1);\n    var argsNum = args.length;\n    var isLastArgCb = typeof args[argsNum - 1] === 'function';\n    if (!isLastArgCb && !canPromise()) {\n        throw new Error('Callback required as last argument');\n    }\n    if (isLastArgCb) {\n        if (argsNum < 2) {\n            throw new Error('Too few arguments provided');\n        }\n        if (argsNum === 2) {\n            cb = text;\n            text = canvas;\n            canvas = opts = undefined;\n        }\n        else if (argsNum === 3) {\n            if (canvas.getContext && typeof cb === 'undefined') {\n                cb = opts;\n                opts = undefined;\n            }\n            else {\n                cb = opts;\n                opts = text;\n                text = canvas;\n                canvas = undefined;\n            }\n        }\n    }\n    else {\n        if (argsNum < 1) {\n            throw new Error('Too few arguments provided');\n        }\n        if (argsNum === 1) {\n            text = canvas;\n            canvas = opts = undefined;\n        }\n        else if (argsNum === 2 && !canvas.getContext) {\n            opts = text;\n            text = canvas;\n            canvas = undefined;\n        }\n        return new Promise(function (resolve, reject) {\n            try {\n                var data = qrcode.create(text, opts);\n                resolve(renderFunc(data, canvas, opts));\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    try {\n        var data = qrcode.create(text, opts);\n        cb(null, renderFunc(data, canvas, opts));\n    }\n    catch (e) {\n        cb(e);\n    }\n}\nvar create$1 = qrcode.create;\nvar toCanvas = renderCanvas.bind(null, canvas.render);\nvar toDataURL = renderCanvas.bind(null, canvas.renderToDataURL);\n// only svg for now.\nvar toString_1 = renderCanvas.bind(null, function (data, _, opts) {\n    return svgTag.render(data, opts);\n});\nvar browser = {\n    create: create$1,\n    toCanvas: toCanvas,\n    toDataURL: toDataURL,\n    toString: toString_1\n};\nvar amplifyTotpSetupCss = \".totp-setup{text-align:center;margin-bottom:30px}.totp-setup img{height:128px;width:128px}\";\nvar logger = new Logger('TOTP');\nvar AmplifyTOTPSetup = /** @class */ (function () {\n    function AmplifyTOTPSetup(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputProps = {\n            autoFocus: true,\n        };\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Used for header text in totp setup component */\n        this.headerText = I18n.get(Translations.TOTP_HEADER_TEXT);\n        this.code = null;\n        this.setupMessage = null;\n        this.qrCodeInput = null;\n        this.loading = false;\n    }\n    AmplifyTOTPSetup.prototype.componentWillLoad = function () {\n        this.setup();\n    };\n    AmplifyTOTPSetup.prototype.buildOtpAuthPath = function (user, issuer, secretKey) {\n        return \"otpauth://totp/\" + issuer + \":\" + user.username + \"?secret=\" + secretKey + \"&issuer=\" + issuer;\n    };\n    AmplifyTOTPSetup.prototype.checkContact = function (user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dataVerifed, newUser, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!Auth || typeof Auth.verifiedContact !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Auth.verifiedContact(user)];\n                    case 2:\n                        dataVerifed = _a.sent();\n                        if (!isEmpty(dataVerifed)) {\n                            this.handleAuthStateChange(AuthState.SignedIn, user);\n                        }\n                        else {\n                            newUser = Object.assign(user, dataVerifed);\n                            this.handleAuthStateChange(AuthState.VerifyContact, newUser);\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _a.sent();\n                        dispatchToastHubEvent(error_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmplifyTOTPSetup.prototype.onTOTPEvent = function (event, data, user) {\n        logger.debug('on totp event', event, data);\n        if (event === SETUP_TOTP && data === SUCCESS) {\n            this.checkContact(user);\n        }\n    };\n    AmplifyTOTPSetup.prototype.handleTotpInputChange = function (event) {\n        this.setupMessage = null;\n        this.qrCodeInput = event.target.value;\n    };\n    AmplifyTOTPSetup.prototype.generateQRCode = function (codeFromTotp) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, error_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        _a = this;\n                        return [4 /*yield*/, browser.toDataURL(codeFromTotp)];\n                    case 1:\n                        _a.qrCodeImageSource = _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_2 = _b.sent();\n                        dispatchToastHubEvent(error_2);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmplifyTOTPSetup.prototype.setup = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var issuer, secretKey, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.setupMessage = null;\n                        issuer = encodeURI('AWSCognito');\n                        if (!Auth || typeof Auth.setupTOTP !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, Auth.setupTOTP(this.user)];\n                    case 2:\n                        secretKey = _a.sent();\n                        logger.debug('secret key', secretKey);\n                        this.code = this.buildOtpAuthPath(this.user, issuer, secretKey);\n                        this.generateQRCode(this.code);\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_3 = _a.sent();\n                        dispatchToastHubEvent(error_3);\n                        logger.debug(I18n.get(Translations.TOTP_SETUP_FAILURE), error_3);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmplifyTOTPSetup.prototype.verifyTotpToken = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var user, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!this.qrCodeInput) {\n                            logger.debug('No TOTP Code provided');\n                            return [2 /*return*/];\n                        }\n                        user = this.user;\n                        if (!Auth || typeof Auth.verifyTotpToken !== 'function' || typeof Auth.setPreferredMFA !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, Auth.verifyTotpToken(user, this.qrCodeInput)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, Auth.setPreferredMFA(user, MfaOption.TOTP)];\n                    case 3:\n                        _a.sent();\n                        this.setupMessage = I18n.get(Translations.TOTP_SUCCESS_MESSAGE);\n                        logger.debug(I18n.get(Translations.TOTP_SUCCESS_MESSAGE));\n                        this.onTOTPEvent(SETUP_TOTP, SUCCESS, user);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_4 = _a.sent();\n                        this.setupMessage = I18n.get(Translations.TOTP_SETUP_FAILURE);\n                        logger.error(error_4);\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // TODO add Toast component to the Top of the form section\n    AmplifyTOTPSetup.prototype.render = function () {\n        var _this = this;\n        return (h(\"amplify-form-section\", { headerText: this.headerText, submitButtonText: I18n.get(Translations.TOTP_SUBMIT_BUTTON_TEXT), handleSubmit: function (event) { return _this.verifyTotpToken(event); }, loading: this.loading }, h(\"div\", { class: \"totp-setup\" }, h(\"img\", { src: this.qrCodeImageSource, alt: I18n.get(Translations.QR_CODE_ALT) }), h(\"amplify-form-field\", { label: I18n.get(Translations.TOTP_LABEL), inputProps: this.inputProps, fieldId: \"totpCode\", name: \"totpCode\", handleInputChange: function (event) { return _this.handleTotpInputChange(event); } }))));\n    };\n    return AmplifyTOTPSetup;\n}());\nAmplifyTOTPSetup.style = amplifyTotpSetupCss;\nexport { AmplifyRadioButton as amplify_radio_button, AmplifyTOTPSetup as amplify_totp_setup };\n"],"sourceRoot":""}