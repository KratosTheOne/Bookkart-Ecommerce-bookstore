"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const buffer_1 = require("buffer");
const util_buffer_from_1 = require("@aws-sdk/util-buffer-from");
const crypto_1 = require("crypto");
class Hash {
    constructor(algorithmIdentifier, secret) {
        this.hash = secret
            ? crypto_1.createHmac(algorithmIdentifier, castSourceData(secret))
            : crypto_1.createHash(algorithmIdentifier);
    }
    update(toHash, encoding) {
        this.hash.update(castSourceData(toHash, encoding));
    }
    digest() {
        return Promise.resolve(this.hash.digest());
    }
}
exports.Hash = Hash;
function castSourceData(toCast, encoding) {
    if (buffer_1.Buffer.isBuffer(toCast)) {
        return toCast;
    }
    if (typeof toCast === "string") {
        return util_buffer_from_1.fromString(toCast, encoding);
    }
    if (ArrayBuffer.isView(toCast)) {
        return util_buffer_from_1.fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);
    }
    return util_buffer_from_1.fromArrayBuffer(toCast);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxtQ0FBZ0M7QUFDaEMsZ0VBQXdFO0FBQ3hFLG1DQUF3RTtBQUV4RSxNQUFhLElBQUk7SUFHZixZQUFZLG1CQUEyQixFQUFFLE1BQW1CO1FBQzFELElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTTtZQUNoQixDQUFDLENBQUMsbUJBQVUsQ0FBQyxtQkFBbUIsRUFBRSxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDekQsQ0FBQyxDQUFDLG1CQUFVLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQWtCLEVBQUUsUUFBc0M7UUFDL0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFRCxNQUFNO1FBQ0osT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUM3QyxDQUFDO0NBQ0Y7QUFoQkQsb0JBZ0JDO0FBRUQsU0FBUyxjQUFjLENBQUMsTUFBa0IsRUFBRSxRQUFpQjtJQUMzRCxJQUFJLGVBQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDM0IsT0FBTyxNQUFNLENBQUM7S0FDZjtJQUVELElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQzlCLE9BQU8sNkJBQVUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7S0FDckM7SUFFRCxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDOUIsT0FBTyxrQ0FBZSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7S0FDN0U7SUFFRCxPQUFPLGtDQUFlLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDakMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhhc2ggYXMgSUhhc2gsIFNvdXJjZURhdGEgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCB7IGZyb21BcnJheUJ1ZmZlciwgZnJvbVN0cmluZyB9IGZyb20gXCJAYXdzLXNkay91dGlsLWJ1ZmZlci1mcm9tXCI7XG5pbXBvcnQgeyBjcmVhdGVIYXNoLCBjcmVhdGVIbWFjLCBIYXNoIGFzIE5vZGVIYXNoLCBIbWFjIH0gZnJvbSBcImNyeXB0b1wiO1xuXG5leHBvcnQgY2xhc3MgSGFzaCBpbXBsZW1lbnRzIElIYXNoIHtcbiAgcHJpdmF0ZSByZWFkb25seSBoYXNoOiBOb2RlSGFzaCB8IEhtYWM7XG5cbiAgY29uc3RydWN0b3IoYWxnb3JpdGhtSWRlbnRpZmllcjogc3RyaW5nLCBzZWNyZXQ/OiBTb3VyY2VEYXRhKSB7XG4gICAgdGhpcy5oYXNoID0gc2VjcmV0XG4gICAgICA/IGNyZWF0ZUhtYWMoYWxnb3JpdGhtSWRlbnRpZmllciwgY2FzdFNvdXJjZURhdGEoc2VjcmV0KSlcbiAgICAgIDogY3JlYXRlSGFzaChhbGdvcml0aG1JZGVudGlmaWVyKTtcbiAgfVxuXG4gIHVwZGF0ZSh0b0hhc2g6IFNvdXJjZURhdGEsIGVuY29kaW5nPzogXCJ1dGY4XCIgfCBcImFzY2lpXCIgfCBcImxhdGluMVwiKTogdm9pZCB7XG4gICAgdGhpcy5oYXNoLnVwZGF0ZShjYXN0U291cmNlRGF0YSh0b0hhc2gsIGVuY29kaW5nKSk7XG4gIH1cblxuICBkaWdlc3QoKTogUHJvbWlzZTxVaW50OEFycmF5PiB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmhhc2guZGlnZXN0KCkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNhc3RTb3VyY2VEYXRhKHRvQ2FzdDogU291cmNlRGF0YSwgZW5jb2Rpbmc/OiBzdHJpbmcpOiBCdWZmZXIge1xuICBpZiAoQnVmZmVyLmlzQnVmZmVyKHRvQ2FzdCkpIHtcbiAgICByZXR1cm4gdG9DYXN0O1xuICB9XG5cbiAgaWYgKHR5cGVvZiB0b0Nhc3QgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gZnJvbVN0cmluZyh0b0Nhc3QsIGVuY29kaW5nKTtcbiAgfVxuXG4gIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcodG9DYXN0KSkge1xuICAgIHJldHVybiBmcm9tQXJyYXlCdWZmZXIodG9DYXN0LmJ1ZmZlciwgdG9DYXN0LmJ5dGVPZmZzZXQsIHRvQ2FzdC5ieXRlTGVuZ3RoKTtcbiAgfVxuXG4gIHJldHVybiBmcm9tQXJyYXlCdWZmZXIodG9DYXN0KTtcbn1cbiJdfQ==