import { __assign } from "tslib";
import { name, version } from "./package.json";
import { defaultProvider as credentialDefaultProvider } from "@aws-sdk/credential-provider-node";
import { Hash } from "@aws-sdk/hash-node";
import { NodeHttpHandler, streamCollector } from "@aws-sdk/node-http-handler";
import { defaultProvider as regionDefaultProvider } from "@aws-sdk/region-provider";
import { parseUrl } from "@aws-sdk/url-parser-node";
import { fromBase64, toBase64 } from "@aws-sdk/util-base64-node";
import { calculateBodyLength } from "@aws-sdk/util-body-length-node";
import { defaultUserAgent } from "@aws-sdk/util-user-agent-node";
import { fromUtf8, toUtf8 } from "@aws-sdk/util-utf8-node";
import { ClientSharedValues } from "./runtimeConfig.shared";
export var ClientDefaultValues = __assign(__assign({}, ClientSharedValues), { runtime: "node", base64Decoder: fromBase64, base64Encoder: toBase64, bodyLengthChecker: calculateBodyLength, credentialDefaultProvider: (function (options) {
        try {
            return credentialDefaultProvider(options);
        }
        catch (e) { }
        return {};
    }), defaultUserAgent: defaultUserAgent(name, version), regionDefaultProvider: regionDefaultProvider, requestHandler: new NodeHttpHandler(), sha256: Hash.bind(null, "sha256"), streamCollector: streamCollector, urlParser: parseUrl, utf8Decoder: fromUtf8, utf8Encoder: toUtf8 });
//# sourceMappingURL=runtimeConfig.js.map