"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
function normalizeEndpoint(endpoint, urlParser) {
    if (typeof endpoint === "string") {
        var promisified_1 = Promise.resolve(urlParser(endpoint));
        return function () { return promisified_1; };
    }
    else if (typeof endpoint === "object") {
        var promisified_2 = Promise.resolve(endpoint);
        return function () { return promisified_2; };
    }
    return endpoint;
}
exports.normalizeEndpoint = normalizeEndpoint;
function resolveEndpointsConfig(input) {
    var _this = this;
    var tls = input.tls === undefined ? true : input.tls;
    var endpoint = input.endpoint
        ? normalizeEndpoint(input.endpoint, input.urlParser)
        : function () {
            return input.region().then(function (region) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var hostname, endpoint;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, input.regionInfoProvider(region)];
                        case 1:
                            hostname = ((_a.sent()) || {}).hostname;
                            if (!hostname) {
                                throw new Error("Cannot resolve hostname from client config");
                            }
                            endpoint = input.urlParser((tls ? "https:" : "http:") + "//" + hostname);
                            return [2 /*return*/, endpoint];
                    }
                });
            }); });
        };
    return tslib_1.__assign(tslib_1.__assign({}, input), { endpoint: endpoint,
        tls: tls });
}
exports.resolveEndpointsConfig = resolveEndpointsConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRzQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0VuZHBvaW50c0NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFRQSxTQUFnQixpQkFBaUIsQ0FDL0IsUUFBaUQsRUFDakQsU0FBcUI7SUFFckIsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7UUFDaEMsSUFBTSxhQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMxRCxPQUFPLGNBQU0sT0FBQSxhQUFXLEVBQVgsQ0FBVyxDQUFDO0tBQzFCO1NBQU0sSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7UUFDdkMsSUFBTSxhQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM5QyxPQUFPLGNBQU0sT0FBQSxhQUFXLEVBQVgsQ0FBVyxDQUFDO0tBQzFCO0lBQ0QsT0FBTyxRQUFTLENBQUM7QUFDbkIsQ0FBQztBQVpELDhDQVlDO0FBc0JELFNBQWdCLHNCQUFzQixDQUNwQyxLQUFvRDtJQUR0RCxpQkF3QkM7SUFyQkMsSUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLEdBQUcsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUN2RCxJQUFNLFFBQVEsR0FBdUIsS0FBSyxDQUFDLFFBQVE7UUFDakQsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQztRQUNwRCxDQUFDLENBQUM7WUFDRSxPQUFBLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBTSxNQUFNOzs7O2dDQUUzQixxQkFBTSxLQUFLLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLEVBQUE7OzRCQURuQyxRQUFRLEdBQUcsQ0FDZixDQUFDLFNBQXNDLENBQUMsSUFBSyxFQUFpQixDQUMvRCxDQUFDLFFBQVE7NEJBQ1YsSUFBSSxDQUFDLFFBQVEsRUFBRTtnQ0FDYixNQUFNLElBQUksS0FBSyxDQUFDLDRDQUE0QyxDQUFDLENBQUM7NkJBQy9EOzRCQUNLLFFBQVEsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUM5QixDQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxPQUFPLFdBQUssUUFBVSxDQUMzQyxDQUFDOzRCQUNGLHNCQUFPLFFBQVEsRUFBQzs7O2lCQUNqQixDQUFDO1FBWEYsQ0FXRSxDQUFDO0lBQ1QsNkNBQ0ssS0FBSyxLQUNSLFFBQVEsVUFBQTtRQUNSLEdBQUcsS0FBQSxJQUNIO0FBQ0osQ0FBQztBQXhCRCx3REF3QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBQcm92aWRlcixcbiAgVXJsUGFyc2VyLFxuICBFbmRwb2ludCxcbiAgUmVnaW9uSW5mb1Byb3ZpZGVyLFxuICBSZWdpb25JbmZvXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplRW5kcG9pbnQoXG4gIGVuZHBvaW50Pzogc3RyaW5nIHwgRW5kcG9pbnQgfCBQcm92aWRlcjxFbmRwb2ludD4sXG4gIHVybFBhcnNlcj86IFVybFBhcnNlclxuKTogUHJvdmlkZXI8RW5kcG9pbnQ+IHtcbiAgaWYgKHR5cGVvZiBlbmRwb2ludCA9PT0gXCJzdHJpbmdcIikge1xuICAgIGNvbnN0IHByb21pc2lmaWVkID0gUHJvbWlzZS5yZXNvbHZlKHVybFBhcnNlciEoZW5kcG9pbnQpKTtcbiAgICByZXR1cm4gKCkgPT4gcHJvbWlzaWZpZWQ7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGVuZHBvaW50ID09PSBcIm9iamVjdFwiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUoZW5kcG9pbnQpO1xuICAgIHJldHVybiAoKSA9PiBwcm9taXNpZmllZDtcbiAgfVxuICByZXR1cm4gZW5kcG9pbnQhO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEVuZHBvaW50c0lucHV0Q29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBmdWxseSBxdWFsaWZpZWQgZW5kcG9pbnQgb2YgdGhlIHdlYnNlcnZpY2UuIFRoaXMgaXMgb25seSByZXF1aXJlZCB3aGVuIHVzaW5nIGEgY3VzdG9tIGVuZHBvaW50IChmb3IgZXhhbXBsZSwgd2hlbiB1c2luZyBhIGxvY2FsIHZlcnNpb24gb2YgUzMpLlxuICAgKi9cbiAgZW5kcG9pbnQ/OiBzdHJpbmcgfCBFbmRwb2ludCB8IFByb3ZpZGVyPEVuZHBvaW50PjtcblxuICAvKipcbiAgICogV2hldGhlciBUTFMgaXMgZW5hYmxlZCBmb3IgcmVxdWVzdHMuXG4gICAqL1xuICB0bHM/OiBib29sZWFuO1xufVxuaW50ZXJmYWNlIFByZXZpb3VzbHlSZXNvbHZlZCB7XG4gIHJlZ2lvbkluZm9Qcm92aWRlcjogUmVnaW9uSW5mb1Byb3ZpZGVyO1xuICB1cmxQYXJzZXI6IFVybFBhcnNlcjtcbiAgcmVnaW9uOiBQcm92aWRlcjxzdHJpbmc+O1xufVxuZXhwb3J0IGludGVyZmFjZSBFbmRwb2ludHNSZXNvbHZlZENvbmZpZ1xuICBleHRlbmRzIFJlcXVpcmVkPEVuZHBvaW50c0lucHV0Q29uZmlnPiB7XG4gIGVuZHBvaW50OiBQcm92aWRlcjxFbmRwb2ludD47XG59XG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZUVuZHBvaW50c0NvbmZpZzxUPihcbiAgaW5wdXQ6IFQgJiBFbmRwb2ludHNJbnB1dENvbmZpZyAmIFByZXZpb3VzbHlSZXNvbHZlZFxuKTogVCAmIEVuZHBvaW50c1Jlc29sdmVkQ29uZmlnIHtcbiAgY29uc3QgdGxzID0gaW5wdXQudGxzID09PSB1bmRlZmluZWQgPyB0cnVlIDogaW5wdXQudGxzO1xuICBjb25zdCBlbmRwb2ludDogUHJvdmlkZXI8RW5kcG9pbnQ+ID0gaW5wdXQuZW5kcG9pbnRcbiAgICA/IG5vcm1hbGl6ZUVuZHBvaW50KGlucHV0LmVuZHBvaW50LCBpbnB1dC51cmxQYXJzZXIpXG4gICAgOiAoKSA9PlxuICAgICAgICBpbnB1dC5yZWdpb24oKS50aGVuKGFzeW5jIHJlZ2lvbiA9PiB7XG4gICAgICAgICAgY29uc3QgaG9zdG5hbWUgPSAoXG4gICAgICAgICAgICAoYXdhaXQgaW5wdXQucmVnaW9uSW5mb1Byb3ZpZGVyKHJlZ2lvbikpIHx8ICh7fSBhcyBSZWdpb25JbmZvKVxuICAgICAgICAgICkuaG9zdG5hbWU7XG4gICAgICAgICAgaWYgKCFob3N0bmFtZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHJlc29sdmUgaG9zdG5hbWUgZnJvbSBjbGllbnQgY29uZmlnXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBlbmRwb2ludCA9IGlucHV0LnVybFBhcnNlcihcbiAgICAgICAgICAgIGAke3RscyA/IFwiaHR0cHM6XCIgOiBcImh0dHA6XCJ9Ly8ke2hvc3RuYW1lfWBcbiAgICAgICAgICApO1xuICAgICAgICAgIHJldHVybiBlbmRwb2ludDtcbiAgICAgICAgfSk7XG4gIHJldHVybiB7XG4gICAgLi4uaW5wdXQsXG4gICAgZW5kcG9pbnQsXG4gICAgdGxzXG4gIH07XG59XG4iXX0=