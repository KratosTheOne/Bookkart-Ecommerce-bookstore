"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var property_provider_1 = require("@aws-sdk/property-provider");
var shared_ini_file_loader_1 = require("@aws-sdk/shared-ini-file-loader");
var DEFAULT_PROFILE = "default";
exports.ENV_PROFILE = "AWS_PROFILE";
function fromSharedConfigFiles(init) {
    if (init === void 0) { init = {}; }
    return function () {
        var _a = init.loadedConfig, loadedConfig = _a === void 0 ? shared_ini_file_loader_1.loadSharedConfigFiles(init) : _a, _b = init.profile, profile = _b === void 0 ? process.env[exports.ENV_PROFILE] || DEFAULT_PROFILE : _b;
        return loadedConfig.then(function (_a) {
            var e_1, _b;
            var configFile = _a.configFile, credentialsFile = _a.credentialsFile;
            try {
                for (var _c = tslib_1.__values([credentialsFile, configFile]), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var file = _d.value;
                    var region = (file[profile] || {}).region;
                    if (typeof region === "string") {
                        return region;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_1) throw e_1.error; }
            }
            throw new property_provider_1.ProviderError("No region found for profile " + profile + " in SDK configuration files");
        });
    };
}
exports.fromSharedConfigFiles = fromSharedConfigFiles;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVNoYXJlZENvbmZpZ0ZpbGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Zyb21TaGFyZWRDb25maWdGaWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxnRUFBMkQ7QUFDM0QsMEVBSXlDO0FBR3pDLElBQU0sZUFBZSxHQUFHLFNBQVMsQ0FBQztBQUNyQixRQUFBLFdBQVcsR0FBRyxhQUFhLENBQUM7QUFlekMsU0FBZ0IscUJBQXFCLENBQ25DLElBQTJCO0lBQTNCLHFCQUFBLEVBQUEsU0FBMkI7SUFFM0IsT0FBTztRQUVILElBQUEsc0JBQTBDLEVBQTFDLHdGQUEwQyxFQUMxQyxpQkFBcUQsRUFBckQsa0ZBQXFELENBQzlDO1FBRVQsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQUMsRUFBK0I7O2dCQUE3QiwwQkFBVSxFQUFFLG9DQUFlOztnQkFDckQsS0FBaUIsSUFBQSxLQUFBLGlCQUFBLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQyxDQUFBLGdCQUFBLDRCQUFFO29CQUEzQyxJQUFJLElBQUksV0FBQTtvQkFDSCxJQUFBLHFDQUFNLENBQThCO29CQUM1QyxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTt3QkFDOUIsT0FBTyxNQUFNLENBQUM7cUJBQ2Y7aUJBQ0Y7Ozs7Ozs7OztZQUVELE1BQU0sSUFBSSxpQ0FBYSxDQUNyQixpQ0FBK0IsT0FBTyxnQ0FBNkIsQ0FDcEUsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQXRCRCxzREFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlckVycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQge1xuICBsb2FkU2hhcmVkQ29uZmlnRmlsZXMsXG4gIFNoYXJlZENvbmZpZ0ZpbGVzLFxuICBTaGFyZWRDb25maWdJbml0IGFzIEJhc2VTaGFyZWRDb25maWdJbml0XG59IGZyb20gXCJAYXdzLXNkay9zaGFyZWQtaW5pLWZpbGUtbG9hZGVyXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5jb25zdCBERUZBVUxUX1BST0ZJTEUgPSBcImRlZmF1bHRcIjtcbmV4cG9ydCBjb25zdCBFTlZfUFJPRklMRSA9IFwiQVdTX1BST0ZJTEVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTaGFyZWRDb25maWdJbml0IGV4dGVuZHMgQmFzZVNoYXJlZENvbmZpZ0luaXQge1xuICAvKipcbiAgICogVGhlIGNvbmZpZ3VyYXRpb24gcHJvZmlsZSB0byB1c2UuXG4gICAqL1xuICBwcm9maWxlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBIHByb21pc2UgdGhhdCB3aWxsIGJlIHJlc29sdmVkIHdpdGggbG9hZGVkIGFuZCBwYXJzZWQgY3JlZGVudGlhbHMgZmlsZXMuXG4gICAqIFVzZWQgdG8gYXZvaWQgbG9hZGluZyBzaGFyZWQgY29uZmlnIGZpbGVzIG11bHRpcGxlIHRpbWVzLlxuICAgKi9cbiAgbG9hZGVkQ29uZmlnPzogUHJvbWlzZTxTaGFyZWRDb25maWdGaWxlcz47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmcm9tU2hhcmVkQ29uZmlnRmlsZXMoXG4gIGluaXQ6IFNoYXJlZENvbmZpZ0luaXQgPSB7fVxuKTogUHJvdmlkZXI8c3RyaW5nPiB7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgbG9hZGVkQ29uZmlnID0gbG9hZFNoYXJlZENvbmZpZ0ZpbGVzKGluaXQpLFxuICAgICAgcHJvZmlsZSA9IHByb2Nlc3MuZW52W0VOVl9QUk9GSUxFXSB8fCBERUZBVUxUX1BST0ZJTEVcbiAgICB9ID0gaW5pdDtcblxuICAgIHJldHVybiBsb2FkZWRDb25maWcudGhlbigoeyBjb25maWdGaWxlLCBjcmVkZW50aWFsc0ZpbGUgfSkgPT4ge1xuICAgICAgZm9yIChsZXQgZmlsZSBvZiBbY3JlZGVudGlhbHNGaWxlLCBjb25maWdGaWxlXSkge1xuICAgICAgICBjb25zdCB7IHJlZ2lvbiB9ID0gZmlsZVtwcm9maWxlXSB8fCA8YW55Pnt9O1xuICAgICAgICBpZiAodHlwZW9mIHJlZ2lvbiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIHJldHVybiByZWdpb247XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoXG4gICAgICAgIGBObyByZWdpb24gZm91bmQgZm9yIHByb2ZpbGUgJHtwcm9maWxlfSBpbiBTREsgY29uZmlndXJhdGlvbiBmaWxlc2BcbiAgICAgICk7XG4gICAgfSk7XG4gIH07XG59XG4iXX0=