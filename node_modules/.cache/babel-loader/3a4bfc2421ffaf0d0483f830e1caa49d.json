{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { Amplify, ConsoleLogger as Logger, Hub, JS } from '@aws-amplify/core';\nimport { immerable, produce, setAutoFreeze, enablePatches } from 'immer';\nimport { v4 as uuid4 } from 'uuid';\nimport Observable from 'zen-observable-ts';\nimport { defaultAuthStrategy, multiAuthStrategy } from '../authModeStrategies';\nimport { isPredicatesAll, ModelPredicateCreator, ModelSortPredicateCreator } from '../predicates';\nimport { ExclusiveStorage as Storage } from '../storage/storage';\nimport { ControlMessage, SyncEngine } from '../sync';\nimport { GraphQLScalarType, isGraphQLScalarType, AuthModeStrategyType } from '../types';\nimport { DATASTORE, establishRelation, exhaustiveCheck, isModelConstructor, monotonicUlidFactory, STORAGE, SYNC, USER, isNullOrUndefined } from '../util';\nsetAutoFreeze(true);\nenablePatches();\nvar logger = new Logger('DataStore');\nvar ulid = monotonicUlidFactory(Date.now());\nvar isNode = JS.browserOrNode().isNode;\nvar SETTING_SCHEMA_VERSION = 'schemaVersion';\nvar schema;\nvar modelNamespaceMap = new WeakMap(); // stores data for crafting the correct update mutation input for a model\n// Patch[] - array of changed fields and metadata\n// PersistentModel - the source model, used for diffing object-type fields\n\nvar modelPatchesMap = new WeakMap();\n\nvar getModelDefinition = function (modelConstructor) {\n  var namespace = modelNamespaceMap.get(modelConstructor);\n  return schema.namespaces[namespace].models[modelConstructor.name];\n};\n\nvar isValidModelConstructor = function (obj) {\n  return isModelConstructor(obj) && modelNamespaceMap.has(obj);\n};\n\nvar namespaceResolver = function (modelConstructor) {\n  return modelNamespaceMap.get(modelConstructor);\n}; // exporting syncClasses for testing outbox.test.ts\n\n\nexport var syncClasses;\nvar userClasses;\nvar dataStoreClasses;\nvar storageClasses;\n\nvar initSchema = function (userSchema) {\n  var _a;\n\n  if (schema !== undefined) {\n    console.warn('The schema has already been initialized');\n    return userClasses;\n  }\n\n  logger.log('validating schema', {\n    schema: userSchema\n  });\n\n  var internalUserNamespace = __assign({\n    name: USER\n  }, userSchema);\n\n  logger.log('DataStore', 'Init models');\n  userClasses = createTypeClasses(internalUserNamespace);\n  logger.log('DataStore', 'Models initialized');\n  var dataStoreNamespace = getNamespace();\n  var storageNamespace = Storage.getNamespace();\n  var syncNamespace = SyncEngine.getNamespace();\n  dataStoreClasses = createTypeClasses(dataStoreNamespace);\n  storageClasses = createTypeClasses(storageNamespace);\n  syncClasses = createTypeClasses(syncNamespace);\n  schema = {\n    namespaces: (_a = {}, _a[dataStoreNamespace.name] = dataStoreNamespace, _a[internalUserNamespace.name] = internalUserNamespace, _a[storageNamespace.name] = storageNamespace, _a[syncNamespace.name] = syncNamespace, _a),\n    version: userSchema.version\n  };\n  Object.keys(schema.namespaces).forEach(function (namespace) {\n    var e_1, _a;\n\n    schema.namespaces[namespace].relationships = establishRelation(schema.namespaces[namespace]);\n    var modelAssociations = new Map();\n    Object.values(schema.namespaces[namespace].models).forEach(function (model) {\n      var connectedModels = [];\n      Object.values(model.fields).filter(function (field) {\n        return field.association && field.association.connectionType === 'BELONGS_TO' && field.type.model !== model.name;\n      }).forEach(function (field) {\n        return connectedModels.push(field.type.model);\n      });\n      modelAssociations.set(model.name, connectedModels);\n    });\n    var result = new Map();\n    var count = 1000;\n\n    while (true && count > 0) {\n      if (modelAssociations.size === 0) {\n        break;\n      }\n\n      count--;\n\n      if (count === 0) {\n        throw new Error('Models are not topologically sortable. Please verify your schema.');\n      }\n\n      try {\n        for (var _b = (e_1 = void 0, __values(Array.from(modelAssociations.keys()))), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var modelName = _c.value;\n          var parents = modelAssociations.get(modelName);\n\n          if (parents.every(function (x) {\n            return result.has(x);\n          })) {\n            result.set(modelName, parents);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      Array.from(result.keys()).forEach(function (x) {\n        return modelAssociations.delete(x);\n      });\n    }\n\n    schema.namespaces[namespace].modelTopologicalOrdering = result;\n  });\n  return userClasses;\n};\n\nvar createTypeClasses = function (namespace) {\n  var classes = {};\n  Object.entries(namespace.models).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        modelName = _b[0],\n        modelDefinition = _b[1];\n\n    var clazz = createModelClass(modelDefinition);\n    classes[modelName] = clazz;\n    modelNamespaceMap.set(clazz, namespace.name);\n  });\n  Object.entries(namespace.nonModels || {}).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        typeName = _b[0],\n        typeDefinition = _b[1];\n\n    var clazz = createNonModelClass(typeDefinition);\n    classes[typeName] = clazz;\n  });\n  return classes;\n};\n\nvar instancesMetadata = new WeakSet();\n\nfunction modelInstanceCreator(modelConstructor, init) {\n  instancesMetadata.add(init);\n  return new modelConstructor(init);\n}\n\nvar validateModelFields = function (modelDefinition) {\n  return function (k, v) {\n    var fieldDefinition = modelDefinition.fields[k];\n\n    if (fieldDefinition !== undefined) {\n      var type = fieldDefinition.type,\n          isRequired_1 = fieldDefinition.isRequired,\n          isArrayNullable = fieldDefinition.isArrayNullable,\n          name_1 = fieldDefinition.name,\n          isArray = fieldDefinition.isArray;\n\n      if ((!isArray && isRequired_1 || isArray && !isArrayNullable) && (v === null || v === undefined)) {\n        throw new Error(\"Field \" + name_1 + \" is required\");\n      }\n\n      if (isGraphQLScalarType(type)) {\n        var jsType_1 = GraphQLScalarType.getJSType(type);\n        var validateScalar_1 = GraphQLScalarType.getValidationFunction(type);\n\n        if (isArray) {\n          var errorTypeText = jsType_1;\n\n          if (!isRequired_1) {\n            errorTypeText = jsType_1 + \" | null | undefined\";\n          }\n\n          if (!Array.isArray(v) && !isArrayNullable) {\n            throw new Error(\"Field \" + name_1 + \" should be of type [\" + errorTypeText + \"], \" + typeof v + \" received. \" + v);\n          }\n\n          if (!isNullOrUndefined(v) && v.some(function (e) {\n            return isNullOrUndefined(e) ? isRequired_1 : typeof e !== jsType_1;\n          })) {\n            var elemTypes = v.map(function (e) {\n              return e === null ? 'null' : typeof e;\n            }).join(',');\n            throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + errorTypeText + \", [\" + elemTypes + \"] received. \" + v);\n          }\n\n          if (validateScalar_1 && !isNullOrUndefined(v)) {\n            var validationStatus = v.map(function (e) {\n              if (!isNullOrUndefined(e)) {\n                return validateScalar_1(e);\n              } else if (isNullOrUndefined(e) && !isRequired_1) {\n                return true;\n              } else {\n                return false;\n              }\n            });\n\n            if (!validationStatus.every(function (s) {\n              return s;\n            })) {\n              throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + type + \", validation failed for one or more elements. \" + v);\n            }\n          }\n        } else if (!isRequired_1 && v === undefined) {\n          return;\n        } else if (typeof v !== jsType_1 && v !== null) {\n          throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \", \" + typeof v + \" received. \" + v);\n        } else if (!isNullOrUndefined(v) && validateScalar_1 && !validateScalar_1(v)) {\n          throw new Error(\"Field \" + name_1 + \" should be of type \" + type + \", validation failed. \" + v);\n        }\n      }\n    }\n  };\n};\n\nvar initializeInstance = function (init, modelDefinition, draft) {\n  var modelValidator = validateModelFields(modelDefinition);\n  Object.entries(init).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        k = _b[0],\n        v = _b[1];\n\n    modelValidator(k, v);\n    draft[k] = v;\n  });\n};\n\nvar createModelClass = function (modelDefinition) {\n  var clazz =\n  /** @class */\n  function () {\n    function Model(init) {\n      var instance = produce(this, function (draft) {\n        initializeInstance(init, modelDefinition, draft);\n        var modelInstanceMetadata = instancesMetadata.has(init) ? init : {};\n        var _id = modelInstanceMetadata.id,\n            _version = modelInstanceMetadata._version,\n            _lastChangedAt = modelInstanceMetadata._lastChangedAt,\n            _deleted = modelInstanceMetadata._deleted;\n        var id = // instancesIds is set by modelInstanceCreator, it is accessible only internally\n        _id !== null && _id !== undefined ? _id : modelDefinition.syncable ? uuid4() : ulid();\n        draft.id = id;\n\n        if (modelDefinition.syncable) {\n          draft._version = _version;\n          draft._lastChangedAt = _lastChangedAt;\n          draft._deleted = _deleted;\n        }\n      });\n      return instance;\n    }\n\n    Model.copyOf = function (source, fn) {\n      var modelConstructor = Object.getPrototypeOf(source || {}).constructor;\n\n      if (!isValidModelConstructor(modelConstructor)) {\n        var msg = 'The source object is not a valid model';\n        logger.error(msg, {\n          source: source\n        });\n        throw new Error(msg);\n      }\n\n      var patches;\n      var model = produce(source, function (draft) {\n        fn(draft);\n        draft.id = source.id;\n        var modelValidator = validateModelFields(modelDefinition);\n        Object.entries(draft).forEach(function (_a) {\n          var _b = __read(_a, 2),\n              k = _b[0],\n              v = _b[1];\n\n          modelValidator(k, v);\n        });\n      }, function (p) {\n        return patches = p;\n      });\n\n      if (patches.length) {\n        modelPatchesMap.set(model, [patches, source]);\n      }\n\n      return model;\n    }; // \"private\" method (that's hidden via `Setting`) for `withSSRContext` to use\n    // to gain access to `modelInstanceCreator` and `clazz` for persisting IDs from server to client.\n\n\n    Model.fromJSON = function (json) {\n      var _this = this;\n\n      if (Array.isArray(json)) {\n        return json.map(function (init) {\n          return _this.fromJSON(init);\n        });\n      }\n\n      var instance = modelInstanceCreator(clazz, json);\n      var modelValidator = validateModelFields(modelDefinition);\n      Object.entries(instance).forEach(function (_a) {\n        var _b = __read(_a, 2),\n            k = _b[0],\n            v = _b[1];\n\n        modelValidator(k, v);\n      });\n      return instance;\n    };\n\n    return Model;\n  }();\n\n  clazz[immerable] = true;\n  Object.defineProperty(clazz, 'name', {\n    value: modelDefinition.name\n  });\n  return clazz;\n};\n\nvar createNonModelClass = function (typeDefinition) {\n  var clazz =\n  /** @class */\n  function () {\n    function Model(init) {\n      var instance = produce(this, function (draft) {\n        initializeInstance(init, typeDefinition, draft);\n      });\n      return instance;\n    }\n\n    return Model;\n  }();\n\n  clazz[immerable] = true;\n  Object.defineProperty(clazz, 'name', {\n    value: typeDefinition.name\n  });\n  return clazz;\n};\n\nfunction isQueryOne(obj) {\n  return typeof obj === 'string';\n}\n\nfunction defaultConflictHandler(conflictData) {\n  var localModel = conflictData.localModel,\n      modelConstructor = conflictData.modelConstructor,\n      remoteModel = conflictData.remoteModel;\n  var _version = remoteModel._version;\n  return modelInstanceCreator(modelConstructor, __assign(__assign({}, localModel), {\n    _version: _version\n  }));\n}\n\nfunction defaultErrorHandler(error) {\n  logger.warn(error);\n}\n\nfunction getModelConstructorByModelName(namespaceName, modelName) {\n  var result;\n\n  switch (namespaceName) {\n    case DATASTORE:\n      result = dataStoreClasses[modelName];\n      break;\n\n    case USER:\n      result = userClasses[modelName];\n      break;\n\n    case SYNC:\n      result = syncClasses[modelName];\n      break;\n\n    case STORAGE:\n      result = storageClasses[modelName];\n      break;\n\n    default:\n      exhaustiveCheck(namespaceName);\n      break;\n  }\n\n  if (isValidModelConstructor(result)) {\n    return result;\n  } else {\n    var msg = \"Model name is not valid for namespace. modelName: \" + modelName + \", namespace: \" + namespaceName;\n    logger.error(msg);\n    throw new Error(msg);\n  }\n}\n\nfunction checkSchemaVersion(storage, version) {\n  return __awaiter(this, void 0, void 0, function () {\n    var Setting, modelDefinition;\n\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          Setting = dataStoreClasses.Setting;\n          modelDefinition = schema.namespaces[DATASTORE].models.Setting;\n          return [4\n          /*yield*/\n          , storage.runExclusive(function (s) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var _a, schemaVersionSetting, storedValue;\n\n              return __generator(this, function (_b) {\n                switch (_b.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , s.query(Setting, ModelPredicateCreator.createFromExisting(modelDefinition, function (c) {\n                      // @ts-ignore Argument of type '\"eq\"' is not assignable to parameter of type 'never'.\n                      return c.key('eq', SETTING_SCHEMA_VERSION);\n                    }), {\n                      page: 0,\n                      limit: 1\n                    })];\n\n                  case 1:\n                    _a = __read.apply(void 0, [_b.sent(), 1]), schemaVersionSetting = _a[0];\n                    if (!(schemaVersionSetting !== undefined && schemaVersionSetting.value !== undefined)) return [3\n                    /*break*/\n                    , 4];\n                    storedValue = JSON.parse(schemaVersionSetting.value);\n                    if (!(storedValue !== version)) return [3\n                    /*break*/\n                    , 3];\n                    return [4\n                    /*yield*/\n                    , s.clear(false)];\n\n                  case 2:\n                    _b.sent();\n\n                    _b.label = 3;\n\n                  case 3:\n                    return [3\n                    /*break*/\n                    , 6];\n\n                  case 4:\n                    return [4\n                    /*yield*/\n                    , s.save(modelInstanceCreator(Setting, {\n                      key: SETTING_SCHEMA_VERSION,\n                      value: JSON.stringify(version)\n                    }))];\n\n                  case 5:\n                    _b.sent();\n\n                    _b.label = 6;\n\n                  case 6:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          })];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nvar syncSubscription;\n\nfunction getNamespace() {\n  var namespace = {\n    name: DATASTORE,\n    relationships: {},\n    enums: {},\n    nonModels: {},\n    models: {\n      Setting: {\n        name: 'Setting',\n        pluralName: 'Settings',\n        syncable: false,\n        fields: {\n          id: {\n            name: 'id',\n            type: 'ID',\n            isRequired: true,\n            isArray: false\n          },\n          key: {\n            name: 'key',\n            type: 'String',\n            isRequired: true,\n            isArray: false\n          },\n          value: {\n            name: 'value',\n            type: 'String',\n            isRequired: true,\n            isArray: false\n          }\n        }\n      }\n    }\n  };\n  return namespace;\n}\n\nvar DataStore =\n/** @class */\nfunction () {\n  function DataStore() {\n    var _this = this;\n\n    this.amplifyConfig = {};\n    this.syncPredicates = new WeakMap();\n\n    this.start = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var aws_appsync_graphqlEndpoint, _a, fullSyncIntervalInMilliseconds;\n\n        var _this = this;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!(this.initialized === undefined)) return [3\n              /*break*/\n              , 1];\n              logger.debug('Starting DataStore');\n              this.initialized = new Promise(function (res, rej) {\n                _this.initResolve = res;\n                _this.initReject = rej;\n              });\n              return [3\n              /*break*/\n              , 3];\n\n            case 1:\n              return [4\n              /*yield*/\n              , this.initialized];\n\n            case 2:\n              _b.sent();\n\n              return [2\n              /*return*/\n              ];\n\n            case 3:\n              this.storage = new Storage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, undefined, this.sessionId);\n              return [4\n              /*yield*/\n              , this.storage.init()];\n\n            case 4:\n              _b.sent();\n\n              return [4\n              /*yield*/\n              , checkSchemaVersion(this.storage, schema.version)];\n\n            case 5:\n              _b.sent();\n\n              aws_appsync_graphqlEndpoint = this.amplifyConfig.aws_appsync_graphqlEndpoint;\n              if (!aws_appsync_graphqlEndpoint) return [3\n              /*break*/\n              , 7];\n              logger.debug('GraphQL endpoint available', aws_appsync_graphqlEndpoint);\n              _a = this;\n              return [4\n              /*yield*/\n              , this.processSyncExpressions()];\n\n            case 6:\n              _a.syncPredicates = _b.sent();\n              this.sync = new SyncEngine(schema, namespaceResolver, syncClasses, userClasses, this.storage, modelInstanceCreator, this.maxRecordsToSync, this.syncPageSize, this.conflictHandler, this.errorHandler, this.syncPredicates, this.amplifyConfig, this.authModeStrategy);\n              fullSyncIntervalInMilliseconds = this.fullSyncInterval * 1000 * 60;\n              syncSubscription = this.sync.start({\n                fullSyncInterval: fullSyncIntervalInMilliseconds\n              }).subscribe({\n                next: function (_a) {\n                  var type = _a.type,\n                      data = _a.data; // In Node, we need to wait for queries to be synced to prevent returning empty arrays.\n                  // In the Browser, we can begin returning data once subscriptions are in place.\n\n                  var readyType = isNode ? ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY : ControlMessage.SYNC_ENGINE_STORAGE_SUBSCRIBED;\n\n                  if (type === readyType) {\n                    _this.initResolve();\n                  }\n\n                  Hub.dispatch('datastore', {\n                    event: type,\n                    data: data\n                  });\n                },\n                error: function (err) {\n                  logger.warn('Sync error', err);\n\n                  _this.initReject();\n                }\n              });\n              return [3\n              /*break*/\n              , 8];\n\n            case 7:\n              logger.warn(\"Data won't be synchronized. No GraphQL endpoint configured. Did you forget `Amplify.configure(awsconfig)`?\", {\n                config: this.amplifyConfig\n              });\n              this.initResolve();\n              _b.label = 8;\n\n            case 8:\n              return [4\n              /*yield*/\n              , this.initialized];\n\n            case 9:\n              _b.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.query = function (modelConstructor, idOrCriteria, paginationProducer) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var msg, modelDefinition, predicate, pagination, result;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.start()];\n\n            case 1:\n              _a.sent(); //#region Input validation\n\n\n              if (!isValidModelConstructor(modelConstructor)) {\n                msg = 'Constructor is not for a valid model';\n                logger.error(msg, {\n                  modelConstructor: modelConstructor\n                });\n                throw new Error(msg);\n              }\n\n              if (typeof idOrCriteria === 'string') {\n                if (paginationProducer !== undefined) {\n                  logger.warn('Pagination is ignored when querying by id');\n                }\n              }\n\n              modelDefinition = getModelDefinition(modelConstructor);\n\n              if (isQueryOne(idOrCriteria)) {\n                predicate = ModelPredicateCreator.createForId(modelDefinition, idOrCriteria);\n              } else {\n                if (isPredicatesAll(idOrCriteria)) {\n                  // Predicates.ALL means \"all records\", so no predicate (undefined)\n                  predicate = undefined;\n                } else {\n                  predicate = ModelPredicateCreator.createFromExisting(modelDefinition, idOrCriteria);\n                }\n              }\n\n              pagination = this.processPagination(modelDefinition, paginationProducer); //#endregion\n\n              logger.debug('params ready', {\n                modelConstructor: modelConstructor,\n                predicate: ModelPredicateCreator.getPredicates(predicate, false),\n                pagination: __assign(__assign({}, pagination), {\n                  sort: ModelSortPredicateCreator.getPredicates(pagination && pagination.sort, false)\n                })\n              });\n              return [4\n              /*yield*/\n              , this.storage.query(modelConstructor, predicate, pagination)];\n\n            case 2:\n              result = _a.sent();\n              return [2\n              /*return*/\n              , isQueryOne(idOrCriteria) ? result[0] : result];\n          }\n        });\n      });\n    };\n\n    this.save = function (model, condition) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var patchesTuple, modelConstructor, msg, modelDefinition, producedCondition, _a, savedModel;\n\n        var _this = this;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.start()];\n\n            case 1:\n              _b.sent();\n\n              patchesTuple = modelPatchesMap.get(model);\n              modelConstructor = model ? model.constructor : undefined;\n\n              if (!isValidModelConstructor(modelConstructor)) {\n                msg = 'Object is not an instance of a valid model';\n                logger.error(msg, {\n                  model: model\n                });\n                throw new Error(msg);\n              }\n\n              modelDefinition = getModelDefinition(modelConstructor);\n              producedCondition = ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n              return [4\n              /*yield*/\n              , this.storage.runExclusive(function (s) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4\n                        /*yield*/\n                        , s.save(model, producedCondition, undefined, patchesTuple)];\n\n                      case 1:\n                        _a.sent();\n\n                        return [2\n                        /*return*/\n                        , s.query(modelConstructor, ModelPredicateCreator.createForId(modelDefinition, model.id))];\n                    }\n                  });\n                });\n              })];\n\n            case 2:\n              _a = __read.apply(void 0, [_b.sent(), 1]), savedModel = _a[0];\n              return [2\n              /*return*/\n              , savedModel];\n          }\n        });\n      });\n    };\n\n    this.setConflictHandler = function (config) {\n      var configDataStore = config.DataStore;\n\n      var conflictHandlerIsDefault = function () {\n        return _this.conflictHandler === defaultConflictHandler;\n      };\n\n      if (configDataStore) {\n        return configDataStore.conflictHandler;\n      }\n\n      if (conflictHandlerIsDefault() && config.conflictHandler) {\n        return config.conflictHandler;\n      }\n\n      return _this.conflictHandler || defaultConflictHandler;\n    };\n\n    this.setErrorHandler = function (config) {\n      var configDataStore = config.DataStore;\n\n      var errorHandlerIsDefault = function () {\n        return _this.errorHandler === defaultErrorHandler;\n      };\n\n      if (configDataStore) {\n        return configDataStore.errorHandler;\n      }\n\n      if (errorHandlerIsDefault() && config.errorHandler) {\n        return config.errorHandler;\n      }\n\n      return _this.errorHandler || defaultErrorHandler;\n    };\n\n    this.delete = function (modelOrConstructor, idOrCriteria) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var condition, msg, modelConstructor, msg, msg, _a, deleted, model, modelConstructor, msg, modelDefinition, idPredicate, msg, _b, _c, deleted;\n\n        return __generator(this, function (_d) {\n          switch (_d.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.start()];\n\n            case 1:\n              _d.sent();\n\n              if (!modelOrConstructor) {\n                msg = 'Model or Model Constructor required';\n                logger.error(msg, {\n                  modelOrConstructor: modelOrConstructor\n                });\n                throw new Error(msg);\n              }\n\n              if (!isValidModelConstructor(modelOrConstructor)) return [3\n              /*break*/\n              , 3];\n              modelConstructor = modelOrConstructor;\n\n              if (!idOrCriteria) {\n                msg = 'Id to delete or criteria required. Do you want to delete all? Pass Predicates.ALL';\n                logger.error(msg, {\n                  idOrCriteria: idOrCriteria\n                });\n                throw new Error(msg);\n              }\n\n              if (typeof idOrCriteria === 'string') {\n                condition = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n              } else {\n                condition = ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor),\n                /**\n                 * idOrCriteria is always a ProducerModelPredicate<T>, never a symbol.\n                 * The symbol is used only for typing purposes. e.g. see Predicates.ALL\n                 */\n                idOrCriteria);\n\n                if (!condition || !ModelPredicateCreator.isValidPredicate(condition)) {\n                  msg = 'Criteria required. Do you want to delete all? Pass Predicates.ALL';\n                  logger.error(msg, {\n                    condition: condition\n                  });\n                  throw new Error(msg);\n                }\n              }\n\n              return [4\n              /*yield*/\n              , this.storage.delete(modelConstructor, condition)];\n\n            case 2:\n              _a = __read.apply(void 0, [_d.sent(), 1]), deleted = _a[0];\n              return [2\n              /*return*/\n              , deleted];\n\n            case 3:\n              model = modelOrConstructor;\n              modelConstructor = Object.getPrototypeOf(model || {}).constructor;\n\n              if (!isValidModelConstructor(modelConstructor)) {\n                msg = 'Object is not an instance of a valid model';\n                logger.error(msg, {\n                  model: model\n                });\n                throw new Error(msg);\n              }\n\n              modelDefinition = getModelDefinition(modelConstructor);\n              idPredicate = ModelPredicateCreator.createForId(modelDefinition, model.id);\n\n              if (idOrCriteria) {\n                if (typeof idOrCriteria !== 'function') {\n                  msg = 'Invalid criteria';\n                  logger.error(msg, {\n                    idOrCriteria: idOrCriteria\n                  });\n                  throw new Error(msg);\n                }\n\n                condition = idOrCriteria(idPredicate);\n              } else {\n                condition = idPredicate;\n              }\n\n              return [4\n              /*yield*/\n              , this.storage.delete(model, condition)];\n\n            case 4:\n              _b = __read.apply(void 0, [_d.sent(), 1]), _c = __read(_b[0], 1), deleted = _c[0];\n              return [2\n              /*return*/\n              , deleted];\n          }\n        });\n      });\n    };\n\n    this.observe = function (modelOrConstructor, idOrCriteria) {\n      var predicate;\n      var modelConstructor = modelOrConstructor && isValidModelConstructor(modelOrConstructor) ? modelOrConstructor : undefined;\n\n      if (modelOrConstructor && modelConstructor === undefined) {\n        var model = modelOrConstructor;\n        var modelConstructor_1 = model && Object.getPrototypeOf(model).constructor;\n\n        if (isValidModelConstructor(modelConstructor_1)) {\n          if (idOrCriteria) {\n            logger.warn('idOrCriteria is ignored when using a model instance', {\n              model: model,\n              idOrCriteria: idOrCriteria\n            });\n          }\n\n          return _this.observe(modelConstructor_1, model.id);\n        } else {\n          var msg = 'The model is not an instance of a PersistentModelConstructor';\n          logger.error(msg, {\n            model: model\n          });\n          throw new Error(msg);\n        }\n      }\n\n      if (idOrCriteria !== undefined && modelConstructor === undefined) {\n        var msg = 'Cannot provide criteria without a modelConstructor';\n        logger.error(msg, idOrCriteria);\n        throw new Error(msg);\n      }\n\n      if (modelConstructor && !isValidModelConstructor(modelConstructor)) {\n        var msg = 'Constructor is not for a valid model';\n        logger.error(msg, {\n          modelConstructor: modelConstructor\n        });\n        throw new Error(msg);\n      }\n\n      if (typeof idOrCriteria === 'string') {\n        predicate = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n      } else {\n        predicate = modelConstructor && ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), idOrCriteria);\n      }\n\n      return new Observable(function (observer) {\n        var handle;\n\n        (function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.start()];\n\n                case 1:\n                  _a.sent();\n\n                  handle = this.storage.observe(modelConstructor, predicate).filter(function (_a) {\n                    var model = _a.model;\n                    return namespaceResolver(model) === USER;\n                  }).subscribe(observer);\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        })();\n\n        return function () {\n          if (handle) {\n            handle.unsubscribe();\n          }\n        };\n      });\n    };\n\n    this.configure = function (config) {\n      if (config === void 0) {\n        config = {};\n      }\n\n      var configDataStore = config.DataStore,\n          configAuthModeStrategyType = config.authModeStrategyType,\n          configConflictHandler = config.conflictHandler,\n          configErrorHandler = config.errorHandler,\n          configMaxRecordsToSync = config.maxRecordsToSync,\n          configSyncPageSize = config.syncPageSize,\n          configFullSyncInterval = config.fullSyncInterval,\n          configSyncExpressions = config.syncExpressions,\n          configFromAmplify = __rest(config, [\"DataStore\", \"authModeStrategyType\", \"conflictHandler\", \"errorHandler\", \"maxRecordsToSync\", \"syncPageSize\", \"fullSyncInterval\", \"syncExpressions\"]);\n\n      _this.amplifyConfig = __assign(__assign({}, configFromAmplify), _this.amplifyConfig);\n      _this.conflictHandler = _this.setConflictHandler(config);\n      _this.errorHandler = _this.setErrorHandler(config);\n      var authModeStrategyType = configDataStore && configDataStore.authModeStrategyType || configAuthModeStrategyType || AuthModeStrategyType.DEFAULT;\n\n      switch (authModeStrategyType) {\n        case AuthModeStrategyType.MULTI_AUTH:\n          _this.authModeStrategy = multiAuthStrategy;\n          break;\n\n        case AuthModeStrategyType.DEFAULT:\n          _this.authModeStrategy = defaultAuthStrategy;\n          break;\n\n        default:\n          _this.authModeStrategy = defaultAuthStrategy;\n          break;\n      }\n\n      _this.syncExpressions = configDataStore && configDataStore.syncExpressions || _this.syncExpressions || configSyncExpressions;\n      _this.maxRecordsToSync = configDataStore && configDataStore.maxRecordsToSync || _this.maxRecordsToSync || configMaxRecordsToSync;\n      _this.syncPageSize = configDataStore && configDataStore.syncPageSize || _this.syncPageSize || configSyncPageSize;\n      _this.fullSyncInterval = configDataStore && configDataStore.fullSyncInterval || _this.fullSyncInterval || configFullSyncInterval || 24 * 60; // 1 day\n\n      _this.sessionId = _this.retrieveSessionId();\n    };\n\n    this.clear = function clear() {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this.storage === undefined) {\n                return [2\n                /*return*/\n                ];\n              }\n\n              if (syncSubscription && !syncSubscription.closed) {\n                syncSubscription.unsubscribe();\n              }\n\n              return [4\n              /*yield*/\n              , this.storage.clear()];\n\n            case 1:\n              _a.sent();\n\n              if (this.sync) {\n                this.sync.unsubscribeConnectivity();\n              }\n\n              this.initialized = undefined; // Should re-initialize when start() is called.\n\n              this.storage = undefined;\n              this.sync = undefined;\n              this.syncPredicates = new WeakMap();\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.stop = function stop() {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(this.initialized !== undefined)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.start()];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              if (syncSubscription && !syncSubscription.closed) {\n                syncSubscription.unsubscribe();\n              }\n\n              if (this.sync) {\n                this.sync.unsubscribeConnectivity();\n              }\n\n              this.initialized = undefined; // Should re-initialize when start() is called.\n\n              this.sync = undefined;\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n  }\n\n  DataStore.prototype.getModuleName = function () {\n    return 'DataStore';\n  };\n\n  DataStore.prototype.processPagination = function (modelDefinition, paginationProducer) {\n    var sortPredicate;\n\n    var _a = paginationProducer || {},\n        limit = _a.limit,\n        page = _a.page,\n        sort = _a.sort;\n\n    if (limit === undefined && page === undefined && sort === undefined) {\n      return undefined;\n    }\n\n    if (page !== undefined && limit === undefined) {\n      throw new Error('Limit is required when requesting a page');\n    }\n\n    if (page !== undefined) {\n      if (typeof page !== 'number') {\n        throw new Error('Page should be a number');\n      }\n\n      if (page < 0) {\n        throw new Error(\"Page can't be negative\");\n      }\n    }\n\n    if (limit !== undefined) {\n      if (typeof limit !== 'number') {\n        throw new Error('Limit should be a number');\n      }\n\n      if (limit < 0) {\n        throw new Error(\"Limit can't be negative\");\n      }\n    }\n\n    if (sort) {\n      sortPredicate = ModelSortPredicateCreator.createFromExisting(modelDefinition, paginationProducer.sort);\n    }\n\n    return {\n      limit: limit,\n      page: page,\n      sort: sortPredicate\n    };\n  };\n\n  DataStore.prototype.processSyncExpressions = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var syncPredicates;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.syncExpressions || !this.syncExpressions.length) {\n              return [2\n              /*return*/\n              , new WeakMap()];\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all(this.syncExpressions.map(function (syncExpression) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a, modelConstructor, conditionProducer, modelDefinition, condition, predicate;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , syncExpression];\n\n                    case 1:\n                      _a = _b.sent(), modelConstructor = _a.modelConstructor, conditionProducer = _a.conditionProducer;\n                      modelDefinition = getModelDefinition(modelConstructor);\n                      return [4\n                      /*yield*/\n                      , this.unwrapPromise(conditionProducer)];\n\n                    case 2:\n                      condition = _b.sent();\n\n                      if (isPredicatesAll(condition)) {\n                        return [2\n                        /*return*/\n                        , [modelDefinition, null]];\n                      }\n\n                      predicate = this.createFromCondition(modelDefinition, condition);\n                      return [2\n                      /*return*/\n                      , [modelDefinition, predicate]];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            syncPredicates = _a.sent();\n            return [2\n            /*return*/\n            , this.weakMapFromEntries(syncPredicates)];\n        }\n      });\n    });\n  };\n\n  DataStore.prototype.createFromCondition = function (modelDefinition, condition) {\n    try {\n      return ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n    } catch (error) {\n      logger.error('Error creating Sync Predicate');\n      throw error;\n    }\n  };\n\n  DataStore.prototype.unwrapPromise = function (conditionProducer) {\n    return __awaiter(this, void 0, void 0, function () {\n      var condition, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , conditionProducer()];\n\n          case 1:\n            condition = _a.sent();\n            return [2\n            /*return*/\n            , condition];\n\n          case 2:\n            error_1 = _a.sent();\n\n            if (error_1 instanceof TypeError) {\n              return [2\n              /*return*/\n              , conditionProducer];\n            }\n\n            throw error_1;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DataStore.prototype.weakMapFromEntries = function (entries) {\n    return entries.reduce(function (map, _a) {\n      var _b = __read(_a, 2),\n          modelDefinition = _b[0],\n          predicate = _b[1];\n\n      if (map.has(modelDefinition)) {\n        var name_2 = modelDefinition.name;\n        logger.warn(\"You can only utilize one Sync Expression per model.\\n          Subsequent sync expressions for the \" + name_2 + \" model will be ignored.\");\n        return map;\n      }\n\n      if (predicate) {\n        map.set(modelDefinition, predicate);\n      }\n\n      return map;\n    }, new WeakMap());\n  }; // database separation for Amplify Console. Not a public API\n\n\n  DataStore.prototype.retrieveSessionId = function () {\n    try {\n      var sessionId = sessionStorage.getItem('datastoreSessionId');\n\n      if (sessionId) {\n        var aws_appsync_graphqlEndpoint = this.amplifyConfig.aws_appsync_graphqlEndpoint;\n        var appSyncUrl = aws_appsync_graphqlEndpoint.split('/')[2];\n\n        var _a = __read(appSyncUrl.split('.'), 1),\n            appSyncId = _a[0];\n\n        return sessionId + \"-\" + appSyncId;\n      }\n    } catch (_b) {\n      return undefined;\n    }\n  };\n\n  return DataStore;\n}();\n\nvar instance = new DataStore();\nAmplify.register(instance);\nexport { DataStore as DataStoreClass, initSchema, instance as DataStore };","map":{"version":3,"sources":["../../src/datastore/datastore.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { Amplify, ConsoleLogger as Logger, Hub, JS } from '@aws-amplify/core';\nimport { immerable, produce, setAutoFreeze, enablePatches, } from 'immer';\nimport { v4 as uuid4 } from 'uuid';\nimport Observable from 'zen-observable-ts';\nimport { defaultAuthStrategy, multiAuthStrategy } from '../authModeStrategies';\nimport { isPredicatesAll, ModelPredicateCreator, ModelSortPredicateCreator, } from '../predicates';\nimport { ExclusiveStorage as Storage } from '../storage/storage';\nimport { ControlMessage, SyncEngine } from '../sync';\nimport { GraphQLScalarType, isGraphQLScalarType, AuthModeStrategyType, } from '../types';\nimport { DATASTORE, establishRelation, exhaustiveCheck, isModelConstructor, monotonicUlidFactory, STORAGE, SYNC, USER, isNullOrUndefined, } from '../util';\nsetAutoFreeze(true);\nenablePatches();\nvar logger = new Logger('DataStore');\nvar ulid = monotonicUlidFactory(Date.now());\nvar isNode = JS.browserOrNode().isNode;\nvar SETTING_SCHEMA_VERSION = 'schemaVersion';\nvar schema;\nvar modelNamespaceMap = new WeakMap();\n// stores data for crafting the correct update mutation input for a model\n// Patch[] - array of changed fields and metadata\n// PersistentModel - the source model, used for diffing object-type fields\nvar modelPatchesMap = new WeakMap();\nvar getModelDefinition = function (modelConstructor) {\n    var namespace = modelNamespaceMap.get(modelConstructor);\n    return schema.namespaces[namespace].models[modelConstructor.name];\n};\nvar isValidModelConstructor = function (obj) {\n    return isModelConstructor(obj) && modelNamespaceMap.has(obj);\n};\nvar namespaceResolver = function (modelConstructor) {\n    return modelNamespaceMap.get(modelConstructor);\n};\n// exporting syncClasses for testing outbox.test.ts\nexport var syncClasses;\nvar userClasses;\nvar dataStoreClasses;\nvar storageClasses;\nvar initSchema = function (userSchema) {\n    var _a;\n    if (schema !== undefined) {\n        console.warn('The schema has already been initialized');\n        return userClasses;\n    }\n    logger.log('validating schema', { schema: userSchema });\n    var internalUserNamespace = __assign({ name: USER }, userSchema);\n    logger.log('DataStore', 'Init models');\n    userClasses = createTypeClasses(internalUserNamespace);\n    logger.log('DataStore', 'Models initialized');\n    var dataStoreNamespace = getNamespace();\n    var storageNamespace = Storage.getNamespace();\n    var syncNamespace = SyncEngine.getNamespace();\n    dataStoreClasses = createTypeClasses(dataStoreNamespace);\n    storageClasses = createTypeClasses(storageNamespace);\n    syncClasses = createTypeClasses(syncNamespace);\n    schema = {\n        namespaces: (_a = {},\n            _a[dataStoreNamespace.name] = dataStoreNamespace,\n            _a[internalUserNamespace.name] = internalUserNamespace,\n            _a[storageNamespace.name] = storageNamespace,\n            _a[syncNamespace.name] = syncNamespace,\n            _a),\n        version: userSchema.version,\n    };\n    Object.keys(schema.namespaces).forEach(function (namespace) {\n        var e_1, _a;\n        schema.namespaces[namespace].relationships = establishRelation(schema.namespaces[namespace]);\n        var modelAssociations = new Map();\n        Object.values(schema.namespaces[namespace].models).forEach(function (model) {\n            var connectedModels = [];\n            Object.values(model.fields)\n                .filter(function (field) {\n                return field.association &&\n                    field.association.connectionType === 'BELONGS_TO' &&\n                    field.type.model !== model.name;\n            })\n                .forEach(function (field) {\n                return connectedModels.push(field.type.model);\n            });\n            modelAssociations.set(model.name, connectedModels);\n        });\n        var result = new Map();\n        var count = 1000;\n        while (true && count > 0) {\n            if (modelAssociations.size === 0) {\n                break;\n            }\n            count--;\n            if (count === 0) {\n                throw new Error('Models are not topologically sortable. Please verify your schema.');\n            }\n            try {\n                for (var _b = (e_1 = void 0, __values(Array.from(modelAssociations.keys()))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var modelName = _c.value;\n                    var parents = modelAssociations.get(modelName);\n                    if (parents.every(function (x) { return result.has(x); })) {\n                        result.set(modelName, parents);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            Array.from(result.keys()).forEach(function (x) { return modelAssociations.delete(x); });\n        }\n        schema.namespaces[namespace].modelTopologicalOrdering = result;\n    });\n    return userClasses;\n};\nvar createTypeClasses = function (namespace) {\n    var classes = {};\n    Object.entries(namespace.models).forEach(function (_a) {\n        var _b = __read(_a, 2), modelName = _b[0], modelDefinition = _b[1];\n        var clazz = createModelClass(modelDefinition);\n        classes[modelName] = clazz;\n        modelNamespaceMap.set(clazz, namespace.name);\n    });\n    Object.entries(namespace.nonModels || {}).forEach(function (_a) {\n        var _b = __read(_a, 2), typeName = _b[0], typeDefinition = _b[1];\n        var clazz = createNonModelClass(typeDefinition);\n        classes[typeName] = clazz;\n    });\n    return classes;\n};\nvar instancesMetadata = new WeakSet();\nfunction modelInstanceCreator(modelConstructor, init) {\n    instancesMetadata.add(init);\n    return new modelConstructor(init);\n}\nvar validateModelFields = function (modelDefinition) { return function (k, v) {\n    var fieldDefinition = modelDefinition.fields[k];\n    if (fieldDefinition !== undefined) {\n        var type = fieldDefinition.type, isRequired_1 = fieldDefinition.isRequired, isArrayNullable = fieldDefinition.isArrayNullable, name_1 = fieldDefinition.name, isArray = fieldDefinition.isArray;\n        if (((!isArray && isRequired_1) || (isArray && !isArrayNullable)) &&\n            (v === null || v === undefined)) {\n            throw new Error(\"Field \" + name_1 + \" is required\");\n        }\n        if (isGraphQLScalarType(type)) {\n            var jsType_1 = GraphQLScalarType.getJSType(type);\n            var validateScalar_1 = GraphQLScalarType.getValidationFunction(type);\n            if (isArray) {\n                var errorTypeText = jsType_1;\n                if (!isRequired_1) {\n                    errorTypeText = jsType_1 + \" | null | undefined\";\n                }\n                if (!Array.isArray(v) && !isArrayNullable) {\n                    throw new Error(\"Field \" + name_1 + \" should be of type [\" + errorTypeText + \"], \" + typeof v + \" received. \" + v);\n                }\n                if (!isNullOrUndefined(v) &&\n                    v.some(function (e) {\n                        return isNullOrUndefined(e) ? isRequired_1 : typeof e !== jsType_1;\n                    })) {\n                    var elemTypes = v\n                        .map(function (e) { return (e === null ? 'null' : typeof e); })\n                        .join(',');\n                    throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + errorTypeText + \", [\" + elemTypes + \"] received. \" + v);\n                }\n                if (validateScalar_1 && !isNullOrUndefined(v)) {\n                    var validationStatus = v.map(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            return validateScalar_1(e);\n                        }\n                        else if (isNullOrUndefined(e) && !isRequired_1) {\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                    if (!validationStatus.every(function (s) { return s; })) {\n                        throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + type + \", validation failed for one or more elements. \" + v);\n                    }\n                }\n            }\n            else if (!isRequired_1 && v === undefined) {\n                return;\n            }\n            else if (typeof v !== jsType_1 && v !== null) {\n                throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \", \" + typeof v + \" received. \" + v);\n            }\n            else if (!isNullOrUndefined(v) &&\n                validateScalar_1 &&\n                !validateScalar_1(v)) {\n                throw new Error(\"Field \" + name_1 + \" should be of type \" + type + \", validation failed. \" + v);\n            }\n        }\n    }\n}; };\nvar initializeInstance = function (init, modelDefinition, draft) {\n    var modelValidator = validateModelFields(modelDefinition);\n    Object.entries(init).forEach(function (_a) {\n        var _b = __read(_a, 2), k = _b[0], v = _b[1];\n        modelValidator(k, v);\n        draft[k] = v;\n    });\n};\nvar createModelClass = function (modelDefinition) {\n    var clazz = /** @class */ (function () {\n        function Model(init) {\n            var instance = produce(this, function (draft) {\n                initializeInstance(init, modelDefinition, draft);\n                var modelInstanceMetadata = instancesMetadata.has(init)\n                    ? init\n                    : {};\n                var _id = modelInstanceMetadata.id, _version = modelInstanceMetadata._version, _lastChangedAt = modelInstanceMetadata._lastChangedAt, _deleted = modelInstanceMetadata._deleted;\n                var id = \n                // instancesIds is set by modelInstanceCreator, it is accessible only internally\n                _id !== null && _id !== undefined\n                    ? _id\n                    : modelDefinition.syncable\n                        ? uuid4()\n                        : ulid();\n                draft.id = id;\n                if (modelDefinition.syncable) {\n                    draft._version = _version;\n                    draft._lastChangedAt = _lastChangedAt;\n                    draft._deleted = _deleted;\n                }\n            });\n            return instance;\n        }\n        Model.copyOf = function (source, fn) {\n            var modelConstructor = Object.getPrototypeOf(source || {}).constructor;\n            if (!isValidModelConstructor(modelConstructor)) {\n                var msg = 'The source object is not a valid model';\n                logger.error(msg, { source: source });\n                throw new Error(msg);\n            }\n            var patches;\n            var model = produce(source, function (draft) {\n                fn(draft);\n                draft.id = source.id;\n                var modelValidator = validateModelFields(modelDefinition);\n                Object.entries(draft).forEach(function (_a) {\n                    var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                    modelValidator(k, v);\n                });\n            }, function (p) { return (patches = p); });\n            if (patches.length) {\n                modelPatchesMap.set(model, [patches, source]);\n            }\n            return model;\n        };\n        // \"private\" method (that's hidden via `Setting`) for `withSSRContext` to use\n        // to gain access to `modelInstanceCreator` and `clazz` for persisting IDs from server to client.\n        Model.fromJSON = function (json) {\n            var _this = this;\n            if (Array.isArray(json)) {\n                return json.map(function (init) { return _this.fromJSON(init); });\n            }\n            var instance = modelInstanceCreator(clazz, json);\n            var modelValidator = validateModelFields(modelDefinition);\n            Object.entries(instance).forEach(function (_a) {\n                var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                modelValidator(k, v);\n            });\n            return instance;\n        };\n        return Model;\n    }());\n    clazz[immerable] = true;\n    Object.defineProperty(clazz, 'name', { value: modelDefinition.name });\n    return clazz;\n};\nvar createNonModelClass = function (typeDefinition) {\n    var clazz = /** @class */ (function () {\n        function Model(init) {\n            var instance = produce(this, function (draft) {\n                initializeInstance(init, typeDefinition, draft);\n            });\n            return instance;\n        }\n        return Model;\n    }());\n    clazz[immerable] = true;\n    Object.defineProperty(clazz, 'name', { value: typeDefinition.name });\n    return clazz;\n};\nfunction isQueryOne(obj) {\n    return typeof obj === 'string';\n}\nfunction defaultConflictHandler(conflictData) {\n    var localModel = conflictData.localModel, modelConstructor = conflictData.modelConstructor, remoteModel = conflictData.remoteModel;\n    var _version = remoteModel._version;\n    return modelInstanceCreator(modelConstructor, __assign(__assign({}, localModel), { _version: _version }));\n}\nfunction defaultErrorHandler(error) {\n    logger.warn(error);\n}\nfunction getModelConstructorByModelName(namespaceName, modelName) {\n    var result;\n    switch (namespaceName) {\n        case DATASTORE:\n            result = dataStoreClasses[modelName];\n            break;\n        case USER:\n            result = userClasses[modelName];\n            break;\n        case SYNC:\n            result = syncClasses[modelName];\n            break;\n        case STORAGE:\n            result = storageClasses[modelName];\n            break;\n        default:\n            exhaustiveCheck(namespaceName);\n            break;\n    }\n    if (isValidModelConstructor(result)) {\n        return result;\n    }\n    else {\n        var msg = \"Model name is not valid for namespace. modelName: \" + modelName + \", namespace: \" + namespaceName;\n        logger.error(msg);\n        throw new Error(msg);\n    }\n}\nfunction checkSchemaVersion(storage, version) {\n    return __awaiter(this, void 0, void 0, function () {\n        var Setting, modelDefinition;\n        var _this = this;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    Setting = dataStoreClasses.Setting;\n                    modelDefinition = schema.namespaces[DATASTORE].models.Setting;\n                    return [4 /*yield*/, storage.runExclusive(function (s) { return __awaiter(_this, void 0, void 0, function () {\n                            var _a, schemaVersionSetting, storedValue;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0: return [4 /*yield*/, s.query(Setting, ModelPredicateCreator.createFromExisting(modelDefinition, function (c) {\n                                            // @ts-ignore Argument of type '\"eq\"' is not assignable to parameter of type 'never'.\n                                            return c.key('eq', SETTING_SCHEMA_VERSION);\n                                        }), { page: 0, limit: 1 })];\n                                    case 1:\n                                        _a = __read.apply(void 0, [_b.sent(), 1]), schemaVersionSetting = _a[0];\n                                        if (!(schemaVersionSetting !== undefined &&\n                                            schemaVersionSetting.value !== undefined)) return [3 /*break*/, 4];\n                                        storedValue = JSON.parse(schemaVersionSetting.value);\n                                        if (!(storedValue !== version)) return [3 /*break*/, 3];\n                                        return [4 /*yield*/, s.clear(false)];\n                                    case 2:\n                                        _b.sent();\n                                        _b.label = 3;\n                                    case 3: return [3 /*break*/, 6];\n                                    case 4: return [4 /*yield*/, s.save(modelInstanceCreator(Setting, {\n                                            key: SETTING_SCHEMA_VERSION,\n                                            value: JSON.stringify(version),\n                                        }))];\n                                    case 5:\n                                        _b.sent();\n                                        _b.label = 6;\n                                    case 6: return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nvar syncSubscription;\nfunction getNamespace() {\n    var namespace = {\n        name: DATASTORE,\n        relationships: {},\n        enums: {},\n        nonModels: {},\n        models: {\n            Setting: {\n                name: 'Setting',\n                pluralName: 'Settings',\n                syncable: false,\n                fields: {\n                    id: {\n                        name: 'id',\n                        type: 'ID',\n                        isRequired: true,\n                        isArray: false,\n                    },\n                    key: {\n                        name: 'key',\n                        type: 'String',\n                        isRequired: true,\n                        isArray: false,\n                    },\n                    value: {\n                        name: 'value',\n                        type: 'String',\n                        isRequired: true,\n                        isArray: false,\n                    },\n                },\n            },\n        },\n    };\n    return namespace;\n}\nvar DataStore = /** @class */ (function () {\n    function DataStore() {\n        var _this = this;\n        this.amplifyConfig = {};\n        this.syncPredicates = new WeakMap();\n        this.start = function () { return __awaiter(_this, void 0, void 0, function () {\n            var aws_appsync_graphqlEndpoint, _a, fullSyncIntervalInMilliseconds;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(this.initialized === undefined)) return [3 /*break*/, 1];\n                        logger.debug('Starting DataStore');\n                        this.initialized = new Promise(function (res, rej) {\n                            _this.initResolve = res;\n                            _this.initReject = rej;\n                        });\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.initialized];\n                    case 2:\n                        _b.sent();\n                        return [2 /*return*/];\n                    case 3:\n                        this.storage = new Storage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, undefined, this.sessionId);\n                        return [4 /*yield*/, this.storage.init()];\n                    case 4:\n                        _b.sent();\n                        return [4 /*yield*/, checkSchemaVersion(this.storage, schema.version)];\n                    case 5:\n                        _b.sent();\n                        aws_appsync_graphqlEndpoint = this.amplifyConfig.aws_appsync_graphqlEndpoint;\n                        if (!aws_appsync_graphqlEndpoint) return [3 /*break*/, 7];\n                        logger.debug('GraphQL endpoint available', aws_appsync_graphqlEndpoint);\n                        _a = this;\n                        return [4 /*yield*/, this.processSyncExpressions()];\n                    case 6:\n                        _a.syncPredicates = _b.sent();\n                        this.sync = new SyncEngine(schema, namespaceResolver, syncClasses, userClasses, this.storage, modelInstanceCreator, this.maxRecordsToSync, this.syncPageSize, this.conflictHandler, this.errorHandler, this.syncPredicates, this.amplifyConfig, this.authModeStrategy);\n                        fullSyncIntervalInMilliseconds = this.fullSyncInterval * 1000 * 60;\n                        syncSubscription = this.sync\n                            .start({ fullSyncInterval: fullSyncIntervalInMilliseconds })\n                            .subscribe({\n                            next: function (_a) {\n                                var type = _a.type, data = _a.data;\n                                // In Node, we need to wait for queries to be synced to prevent returning empty arrays.\n                                // In the Browser, we can begin returning data once subscriptions are in place.\n                                var readyType = isNode\n                                    ? ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY\n                                    : ControlMessage.SYNC_ENGINE_STORAGE_SUBSCRIBED;\n                                if (type === readyType) {\n                                    _this.initResolve();\n                                }\n                                Hub.dispatch('datastore', {\n                                    event: type,\n                                    data: data,\n                                });\n                            },\n                            error: function (err) {\n                                logger.warn('Sync error', err);\n                                _this.initReject();\n                            },\n                        });\n                        return [3 /*break*/, 8];\n                    case 7:\n                        logger.warn(\"Data won't be synchronized. No GraphQL endpoint configured. Did you forget `Amplify.configure(awsconfig)`?\", {\n                            config: this.amplifyConfig,\n                        });\n                        this.initResolve();\n                        _b.label = 8;\n                    case 8: return [4 /*yield*/, this.initialized];\n                    case 9:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        this.query = function (modelConstructor, idOrCriteria, paginationProducer) { return __awaiter(_this, void 0, void 0, function () {\n            var msg, modelDefinition, predicate, pagination, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.start()];\n                    case 1:\n                        _a.sent();\n                        //#region Input validation\n                        if (!isValidModelConstructor(modelConstructor)) {\n                            msg = 'Constructor is not for a valid model';\n                            logger.error(msg, { modelConstructor: modelConstructor });\n                            throw new Error(msg);\n                        }\n                        if (typeof idOrCriteria === 'string') {\n                            if (paginationProducer !== undefined) {\n                                logger.warn('Pagination is ignored when querying by id');\n                            }\n                        }\n                        modelDefinition = getModelDefinition(modelConstructor);\n                        if (isQueryOne(idOrCriteria)) {\n                            predicate = ModelPredicateCreator.createForId(modelDefinition, idOrCriteria);\n                        }\n                        else {\n                            if (isPredicatesAll(idOrCriteria)) {\n                                // Predicates.ALL means \"all records\", so no predicate (undefined)\n                                predicate = undefined;\n                            }\n                            else {\n                                predicate = ModelPredicateCreator.createFromExisting(modelDefinition, idOrCriteria);\n                            }\n                        }\n                        pagination = this.processPagination(modelDefinition, paginationProducer);\n                        //#endregion\n                        logger.debug('params ready', {\n                            modelConstructor: modelConstructor,\n                            predicate: ModelPredicateCreator.getPredicates(predicate, false),\n                            pagination: __assign(__assign({}, pagination), { sort: ModelSortPredicateCreator.getPredicates(pagination && pagination.sort, false) }),\n                        });\n                        return [4 /*yield*/, this.storage.query(modelConstructor, predicate, pagination)];\n                    case 2:\n                        result = _a.sent();\n                        return [2 /*return*/, isQueryOne(idOrCriteria) ? result[0] : result];\n                }\n            });\n        }); };\n        this.save = function (model, condition) { return __awaiter(_this, void 0, void 0, function () {\n            var patchesTuple, modelConstructor, msg, modelDefinition, producedCondition, _a, savedModel;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.start()];\n                    case 1:\n                        _b.sent();\n                        patchesTuple = modelPatchesMap.get(model);\n                        modelConstructor = model\n                            ? model.constructor\n                            : undefined;\n                        if (!isValidModelConstructor(modelConstructor)) {\n                            msg = 'Object is not an instance of a valid model';\n                            logger.error(msg, { model: model });\n                            throw new Error(msg);\n                        }\n                        modelDefinition = getModelDefinition(modelConstructor);\n                        producedCondition = ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n                        return [4 /*yield*/, this.storage.runExclusive(function (s) { return __awaiter(_this, void 0, void 0, function () {\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, s.save(model, producedCondition, undefined, patchesTuple)];\n                                        case 1:\n                                            _a.sent();\n                                            return [2 /*return*/, s.query(modelConstructor, ModelPredicateCreator.createForId(modelDefinition, model.id))];\n                                    }\n                                });\n                            }); })];\n                    case 2:\n                        _a = __read.apply(void 0, [_b.sent(), 1]), savedModel = _a[0];\n                        return [2 /*return*/, savedModel];\n                }\n            });\n        }); };\n        this.setConflictHandler = function (config) {\n            var configDataStore = config.DataStore;\n            var conflictHandlerIsDefault = function () {\n                return _this.conflictHandler === defaultConflictHandler;\n            };\n            if (configDataStore) {\n                return configDataStore.conflictHandler;\n            }\n            if (conflictHandlerIsDefault() && config.conflictHandler) {\n                return config.conflictHandler;\n            }\n            return _this.conflictHandler || defaultConflictHandler;\n        };\n        this.setErrorHandler = function (config) {\n            var configDataStore = config.DataStore;\n            var errorHandlerIsDefault = function () {\n                return _this.errorHandler === defaultErrorHandler;\n            };\n            if (configDataStore) {\n                return configDataStore.errorHandler;\n            }\n            if (errorHandlerIsDefault() && config.errorHandler) {\n                return config.errorHandler;\n            }\n            return _this.errorHandler || defaultErrorHandler;\n        };\n        this.delete = function (modelOrConstructor, idOrCriteria) { return __awaiter(_this, void 0, void 0, function () {\n            var condition, msg, modelConstructor, msg, msg, _a, deleted, model, modelConstructor, msg, modelDefinition, idPredicate, msg, _b, _c, deleted;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0: return [4 /*yield*/, this.start()];\n                    case 1:\n                        _d.sent();\n                        if (!modelOrConstructor) {\n                            msg = 'Model or Model Constructor required';\n                            logger.error(msg, { modelOrConstructor: modelOrConstructor });\n                            throw new Error(msg);\n                        }\n                        if (!isValidModelConstructor(modelOrConstructor)) return [3 /*break*/, 3];\n                        modelConstructor = modelOrConstructor;\n                        if (!idOrCriteria) {\n                            msg = 'Id to delete or criteria required. Do you want to delete all? Pass Predicates.ALL';\n                            logger.error(msg, { idOrCriteria: idOrCriteria });\n                            throw new Error(msg);\n                        }\n                        if (typeof idOrCriteria === 'string') {\n                            condition = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n                        }\n                        else {\n                            condition = ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), \n                            /**\n                             * idOrCriteria is always a ProducerModelPredicate<T>, never a symbol.\n                             * The symbol is used only for typing purposes. e.g. see Predicates.ALL\n                             */\n                            idOrCriteria);\n                            if (!condition || !ModelPredicateCreator.isValidPredicate(condition)) {\n                                msg = 'Criteria required. Do you want to delete all? Pass Predicates.ALL';\n                                logger.error(msg, { condition: condition });\n                                throw new Error(msg);\n                            }\n                        }\n                        return [4 /*yield*/, this.storage.delete(modelConstructor, condition)];\n                    case 2:\n                        _a = __read.apply(void 0, [_d.sent(), 1]), deleted = _a[0];\n                        return [2 /*return*/, deleted];\n                    case 3:\n                        model = modelOrConstructor;\n                        modelConstructor = Object.getPrototypeOf(model || {})\n                            .constructor;\n                        if (!isValidModelConstructor(modelConstructor)) {\n                            msg = 'Object is not an instance of a valid model';\n                            logger.error(msg, { model: model });\n                            throw new Error(msg);\n                        }\n                        modelDefinition = getModelDefinition(modelConstructor);\n                        idPredicate = ModelPredicateCreator.createForId(modelDefinition, model.id);\n                        if (idOrCriteria) {\n                            if (typeof idOrCriteria !== 'function') {\n                                msg = 'Invalid criteria';\n                                logger.error(msg, { idOrCriteria: idOrCriteria });\n                                throw new Error(msg);\n                            }\n                            condition = idOrCriteria(idPredicate);\n                        }\n                        else {\n                            condition = idPredicate;\n                        }\n                        return [4 /*yield*/, this.storage.delete(model, condition)];\n                    case 4:\n                        _b = __read.apply(void 0, [_d.sent(), 1]), _c = __read(_b[0], 1), deleted = _c[0];\n                        return [2 /*return*/, deleted];\n                }\n            });\n        }); };\n        this.observe = function (modelOrConstructor, idOrCriteria) {\n            var predicate;\n            var modelConstructor = modelOrConstructor && isValidModelConstructor(modelOrConstructor)\n                ? modelOrConstructor\n                : undefined;\n            if (modelOrConstructor && modelConstructor === undefined) {\n                var model = modelOrConstructor;\n                var modelConstructor_1 = model && Object.getPrototypeOf(model).constructor;\n                if (isValidModelConstructor(modelConstructor_1)) {\n                    if (idOrCriteria) {\n                        logger.warn('idOrCriteria is ignored when using a model instance', {\n                            model: model,\n                            idOrCriteria: idOrCriteria,\n                        });\n                    }\n                    return _this.observe(modelConstructor_1, model.id);\n                }\n                else {\n                    var msg = 'The model is not an instance of a PersistentModelConstructor';\n                    logger.error(msg, { model: model });\n                    throw new Error(msg);\n                }\n            }\n            if (idOrCriteria !== undefined && modelConstructor === undefined) {\n                var msg = 'Cannot provide criteria without a modelConstructor';\n                logger.error(msg, idOrCriteria);\n                throw new Error(msg);\n            }\n            if (modelConstructor && !isValidModelConstructor(modelConstructor)) {\n                var msg = 'Constructor is not for a valid model';\n                logger.error(msg, { modelConstructor: modelConstructor });\n                throw new Error(msg);\n            }\n            if (typeof idOrCriteria === 'string') {\n                predicate = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n            }\n            else {\n                predicate =\n                    modelConstructor &&\n                        ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), idOrCriteria);\n            }\n            return new Observable(function (observer) {\n                var handle;\n                (function () { return __awaiter(_this, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0: return [4 /*yield*/, this.start()];\n                            case 1:\n                                _a.sent();\n                                handle = this.storage\n                                    .observe(modelConstructor, predicate)\n                                    .filter(function (_a) {\n                                    var model = _a.model;\n                                    return namespaceResolver(model) === USER;\n                                })\n                                    .subscribe(observer);\n                                return [2 /*return*/];\n                        }\n                    });\n                }); })();\n                return function () {\n                    if (handle) {\n                        handle.unsubscribe();\n                    }\n                };\n            });\n        };\n        this.configure = function (config) {\n            if (config === void 0) { config = {}; }\n            var configDataStore = config.DataStore, configAuthModeStrategyType = config.authModeStrategyType, configConflictHandler = config.conflictHandler, configErrorHandler = config.errorHandler, configMaxRecordsToSync = config.maxRecordsToSync, configSyncPageSize = config.syncPageSize, configFullSyncInterval = config.fullSyncInterval, configSyncExpressions = config.syncExpressions, configFromAmplify = __rest(config, [\"DataStore\", \"authModeStrategyType\", \"conflictHandler\", \"errorHandler\", \"maxRecordsToSync\", \"syncPageSize\", \"fullSyncInterval\", \"syncExpressions\"]);\n            _this.amplifyConfig = __assign(__assign({}, configFromAmplify), _this.amplifyConfig);\n            _this.conflictHandler = _this.setConflictHandler(config);\n            _this.errorHandler = _this.setErrorHandler(config);\n            var authModeStrategyType = (configDataStore && configDataStore.authModeStrategyType) ||\n                configAuthModeStrategyType ||\n                AuthModeStrategyType.DEFAULT;\n            switch (authModeStrategyType) {\n                case AuthModeStrategyType.MULTI_AUTH:\n                    _this.authModeStrategy = multiAuthStrategy;\n                    break;\n                case AuthModeStrategyType.DEFAULT:\n                    _this.authModeStrategy = defaultAuthStrategy;\n                    break;\n                default:\n                    _this.authModeStrategy = defaultAuthStrategy;\n                    break;\n            }\n            _this.syncExpressions =\n                (configDataStore && configDataStore.syncExpressions) ||\n                    _this.syncExpressions ||\n                    configSyncExpressions;\n            _this.maxRecordsToSync =\n                (configDataStore && configDataStore.maxRecordsToSync) ||\n                    _this.maxRecordsToSync ||\n                    configMaxRecordsToSync;\n            _this.syncPageSize =\n                (configDataStore && configDataStore.syncPageSize) ||\n                    _this.syncPageSize ||\n                    configSyncPageSize;\n            _this.fullSyncInterval =\n                (configDataStore && configDataStore.fullSyncInterval) ||\n                    _this.fullSyncInterval ||\n                    configFullSyncInterval ||\n                    24 * 60; // 1 day\n            _this.sessionId = _this.retrieveSessionId();\n        };\n        this.clear = function clear() {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (this.storage === undefined) {\n                                return [2 /*return*/];\n                            }\n                            if (syncSubscription && !syncSubscription.closed) {\n                                syncSubscription.unsubscribe();\n                            }\n                            return [4 /*yield*/, this.storage.clear()];\n                        case 1:\n                            _a.sent();\n                            if (this.sync) {\n                                this.sync.unsubscribeConnectivity();\n                            }\n                            this.initialized = undefined; // Should re-initialize when start() is called.\n                            this.storage = undefined;\n                            this.sync = undefined;\n                            this.syncPredicates = new WeakMap();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        this.stop = function stop() {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!(this.initialized !== undefined)) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.start()];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2:\n                            if (syncSubscription && !syncSubscription.closed) {\n                                syncSubscription.unsubscribe();\n                            }\n                            if (this.sync) {\n                                this.sync.unsubscribeConnectivity();\n                            }\n                            this.initialized = undefined; // Should re-initialize when start() is called.\n                            this.sync = undefined;\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n    }\n    DataStore.prototype.getModuleName = function () {\n        return 'DataStore';\n    };\n    DataStore.prototype.processPagination = function (modelDefinition, paginationProducer) {\n        var sortPredicate;\n        var _a = paginationProducer || {}, limit = _a.limit, page = _a.page, sort = _a.sort;\n        if (limit === undefined && page === undefined && sort === undefined) {\n            return undefined;\n        }\n        if (page !== undefined && limit === undefined) {\n            throw new Error('Limit is required when requesting a page');\n        }\n        if (page !== undefined) {\n            if (typeof page !== 'number') {\n                throw new Error('Page should be a number');\n            }\n            if (page < 0) {\n                throw new Error(\"Page can't be negative\");\n            }\n        }\n        if (limit !== undefined) {\n            if (typeof limit !== 'number') {\n                throw new Error('Limit should be a number');\n            }\n            if (limit < 0) {\n                throw new Error(\"Limit can't be negative\");\n            }\n        }\n        if (sort) {\n            sortPredicate = ModelSortPredicateCreator.createFromExisting(modelDefinition, paginationProducer.sort);\n        }\n        return {\n            limit: limit,\n            page: page,\n            sort: sortPredicate,\n        };\n    };\n    DataStore.prototype.processSyncExpressions = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var syncPredicates;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.syncExpressions || !this.syncExpressions.length) {\n                            return [2 /*return*/, new WeakMap()];\n                        }\n                        return [4 /*yield*/, Promise.all(this.syncExpressions.map(function (syncExpression) { return __awaiter(_this, void 0, void 0, function () {\n                                var _a, modelConstructor, conditionProducer, modelDefinition, condition, predicate;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0: return [4 /*yield*/, syncExpression];\n                                        case 1:\n                                            _a = _b.sent(), modelConstructor = _a.modelConstructor, conditionProducer = _a.conditionProducer;\n                                            modelDefinition = getModelDefinition(modelConstructor);\n                                            return [4 /*yield*/, this.unwrapPromise(conditionProducer)];\n                                        case 2:\n                                            condition = _b.sent();\n                                            if (isPredicatesAll(condition)) {\n                                                return [2 /*return*/, [modelDefinition, null]];\n                                            }\n                                            predicate = this.createFromCondition(modelDefinition, condition);\n                                            return [2 /*return*/, [modelDefinition, predicate]];\n                                    }\n                                });\n                            }); }))];\n                    case 1:\n                        syncPredicates = _a.sent();\n                        return [2 /*return*/, this.weakMapFromEntries(syncPredicates)];\n                }\n            });\n        });\n    };\n    DataStore.prototype.createFromCondition = function (modelDefinition, condition) {\n        try {\n            return ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n        }\n        catch (error) {\n            logger.error('Error creating Sync Predicate');\n            throw error;\n        }\n    };\n    DataStore.prototype.unwrapPromise = function (conditionProducer) {\n        return __awaiter(this, void 0, void 0, function () {\n            var condition, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, conditionProducer()];\n                    case 1:\n                        condition = _a.sent();\n                        return [2 /*return*/, condition];\n                    case 2:\n                        error_1 = _a.sent();\n                        if (error_1 instanceof TypeError) {\n                            return [2 /*return*/, conditionProducer];\n                        }\n                        throw error_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DataStore.prototype.weakMapFromEntries = function (entries) {\n        return entries.reduce(function (map, _a) {\n            var _b = __read(_a, 2), modelDefinition = _b[0], predicate = _b[1];\n            if (map.has(modelDefinition)) {\n                var name_2 = modelDefinition.name;\n                logger.warn(\"You can only utilize one Sync Expression per model.\\n          Subsequent sync expressions for the \" + name_2 + \" model will be ignored.\");\n                return map;\n            }\n            if (predicate) {\n                map.set(modelDefinition, predicate);\n            }\n            return map;\n        }, new WeakMap());\n    };\n    // database separation for Amplify Console. Not a public API\n    DataStore.prototype.retrieveSessionId = function () {\n        try {\n            var sessionId = sessionStorage.getItem('datastoreSessionId');\n            if (sessionId) {\n                var aws_appsync_graphqlEndpoint = this.amplifyConfig.aws_appsync_graphqlEndpoint;\n                var appSyncUrl = aws_appsync_graphqlEndpoint.split('/')[2];\n                var _a = __read(appSyncUrl.split('.'), 1), appSyncId = _a[0];\n                return sessionId + \"-\" + appSyncId;\n            }\n        }\n        catch (_b) {\n            return undefined;\n        }\n    };\n    return DataStore;\n}());\nvar instance = new DataStore();\nAmplify.register(instance);\nexport { DataStore as DataStoreClass, initSchema, instance as DataStore };\n//# sourceMappingURL=datastore.js.map"]},"metadata":{},"sourceType":"module"}