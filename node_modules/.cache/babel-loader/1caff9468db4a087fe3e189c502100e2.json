{"ast":null,"code":"import Cookies from 'universal-cookie';\nimport { browserOrNode } from '../JS';\nvar isBrowser = browserOrNode().isBrowser;\n\nvar UniversalStorage =\n/** @class */\nfunction () {\n  function UniversalStorage(context) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    this.cookies = new Cookies();\n    this.store = isBrowser ? window.localStorage : Object.create(null);\n    this.cookies = context.req ? new Cookies(context.req.headers.cookie) : new Cookies();\n    Object.assign(this.store, this.cookies.getAll());\n  }\n\n  Object.defineProperty(UniversalStorage.prototype, \"length\", {\n    get: function () {\n      return Object.entries(this.store).length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  UniversalStorage.prototype.clear = function () {\n    var _this = this;\n\n    Array.from(new Array(this.length)).map(function (_, i) {\n      return _this.key(i);\n    }).forEach(function (key) {\n      return _this.removeItem(key);\n    });\n  };\n\n  UniversalStorage.prototype.getItem = function (key) {\n    return this.getLocalItem(key);\n  };\n\n  UniversalStorage.prototype.getLocalItem = function (key) {\n    return Object.prototype.hasOwnProperty.call(this.store, key) ? this.store[key] : null;\n  };\n\n  UniversalStorage.prototype.getUniversalItem = function (key) {\n    return this.cookies.get(key);\n  };\n\n  UniversalStorage.prototype.key = function (index) {\n    return Object.keys(this.store)[index];\n  };\n\n  UniversalStorage.prototype.removeItem = function (key) {\n    this.removeLocalItem(key);\n    this.removeUniversalItem(key);\n  };\n\n  UniversalStorage.prototype.removeLocalItem = function (key) {\n    delete this.store[key];\n  };\n\n  UniversalStorage.prototype.removeUniversalItem = function (key) {\n    this.cookies.remove(key, {\n      path: '/'\n    });\n  };\n\n  UniversalStorage.prototype.setItem = function (key, value) {\n    this.setLocalItem(key, value); // keys take the shape:\n    //  1. `${ProviderPrefix}.${userPoolClientId}.${username}.${tokenType}\n    //  2. `${ProviderPrefix}.${userPoolClientId}.LastAuthUser\n\n    var tokenType = key.split('.').pop();\n\n    switch (tokenType) {\n      // LastAuthUser is needed for computing other key names\n      case 'LastAuthUser': // accessToken is required for CognitoUserSession\n\n      case 'accessToken': // Required for CognitoUserSession\n\n      case 'idToken':\n        this.setUniversalItem(key, value);\n      // userData is used when `Auth.currentAuthenticatedUser({ bypassCache: false })`.\n      // Can be persisted to speed up calls to `Auth.currentAuthenticatedUser()`\n      // case 'userData':\n      // refreshToken isn't shared with the server so that the client handles refreshing\n      // case 'refreshToken':\n      // Ignoring clockDrift on the server for now, but needs testing\n      // case 'clockDrift':\n    }\n  };\n\n  UniversalStorage.prototype.setLocalItem = function (key, value) {\n    this.store[key] = value;\n  };\n\n  UniversalStorage.prototype.setUniversalItem = function (key, value) {\n    this.cookies.set(key, value, {\n      path: '/',\n      // `httpOnly` cannot be set via JavaScript: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#JavaScript_access_using_Document.cookie\n      sameSite: true,\n      // Allow unsecure requests to http://localhost:3000/ when in development.\n      secure: window.location.hostname === 'localhost' ? false : true\n    });\n  };\n\n  return UniversalStorage;\n}();\n\nexport { UniversalStorage };","map":{"version":3,"sources":["../../src/UniversalStorage/index.ts"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,kBAApB;AACA,SAAS,aAAT,QAA8B,OAA9B;AAIQ,IAAA,SAAA,GAAA,aAAA,GAAA,SAAA;;AAKR,IAAA,gBAAA;AAAA;AAAA,YAAA;AAIC,WAAA,gBAAA,CAAY,OAAZ,EAAiC;AAArB,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAAqB;;AAHjC,SAAA,OAAA,GAAU,IAAI,OAAJ,EAAV;AACA,SAAA,KAAA,GAAe,SAAS,GAAG,MAAM,CAAC,YAAV,GAAyB,MAAM,CAAC,MAAP,CAAc,IAAd,CAAjD;AAGC,SAAK,OAAL,GAAe,OAAO,CAAC,GAAR,GACZ,IAAI,OAAJ,CAAY,OAAO,CAAC,GAAR,CAAY,OAAZ,CAAoB,MAAhC,CADY,GAEZ,IAAI,OAAJ,EAFH;AAIA,IAAA,MAAM,CAAC,MAAP,CAAc,KAAK,KAAnB,EAA0B,KAAK,OAAL,CAAa,MAAb,EAA1B;AACA;;AAED,EAAA,MAAA,CAAA,cAAA,CAAI,gBAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;SAAV,YAAA;AACC,aAAO,MAAM,CAAC,OAAP,CAAe,KAAK,KAApB,EAA2B,MAAlC;AACA,KAFS;oBAAA;;AAAA,GAAV;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACC,IAAA,KAAK,CAAC,IAAN,CAAW,IAAI,KAAJ,CAAU,KAAK,MAAf,CAAX,EACE,GADF,CACM,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aAAA,KAAI,CAAC,GAAL,CAAA,CAAA,CAAA;AAAW,KAD3B,EAEE,OAFF,CAEU,UAAA,GAAA,EAAG;AAAI,aAAA,KAAI,CAAC,UAAL,CAAA,GAAA,CAAA;AAAoB,KAFrC;AAGA,GAJD;;AAMA,EAAA,gBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAwB;AACvB,WAAO,KAAK,YAAL,CAAkB,GAAlB,CAAP;AACA,GAFD;;AAIU,EAAA,gBAAA,CAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,GAAvB,EAAuC;AACtC,WAAO,MAAM,CAAC,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,KAAK,KAA1C,EAAiD,GAAjD,IACJ,KAAK,KAAL,CAAW,GAAX,CADI,GAEJ,IAFH;AAGA,GAJS;;AAMA,EAAA,gBAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,UAA2B,GAA3B,EAA2C;AAC1C,WAAO,KAAK,OAAL,CAAa,GAAb,CAAiB,GAAjB,CAAP;AACA,GAFS;;AAIV,EAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,KAAJ,EAAiB;AAChB,WAAO,MAAM,CAAC,IAAP,CAAY,KAAK,KAAjB,EAAwB,KAAxB,CAAP;AACA,GAFD;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,GAAX,EAAsB;AACrB,SAAK,eAAL,CAAqB,GAArB;AACA,SAAK,mBAAL,CAAyB,GAAzB;AACA,GAHD;;AAKU,EAAA,gBAAA,CAAA,SAAA,CAAA,eAAA,GAAV,UAA0B,GAA1B,EAA0C;AACzC,WAAO,KAAK,KAAL,CAAW,GAAX,CAAP;AACA,GAFS;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,mBAAA,GAAV,UAA8B,GAA9B,EAA8C;AAC7C,SAAK,OAAL,CAAa,MAAb,CAAoB,GAApB,EAAyB;AACxB,MAAA,IAAI,EAAE;AADkB,KAAzB;AAGA,GAJS;;AAMV,EAAA,gBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAA0B,KAA1B,EAAuC;AACtC,SAAK,YAAL,CAAkB,GAAlB,EAAuB,KAAvB,EADsC,CAGtC;AACA;AACA;;AACA,QAAM,SAAS,GAAG,GAAG,CAAC,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAlB;;AAEA,YAAQ,SAAR;AACC;AACA,WAAK,cAAL,CAFD,CAIC;;AACA,WAAK,aAAL,CALD,CAOC;;AACA,WAAK,SAAL;AACC,aAAK,gBAAL,CAAsB,GAAtB,EAA2B,KAA3B;AAED;AACA;AACA;AAEA;AACA;AAEA;AACA;AAnBD;AAqBA,GA7BD;;AA+BU,EAAA,gBAAA,CAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,GAAvB,EAAyC,KAAzC,EAAsD;AACrD,SAAK,KAAL,CAAW,GAAX,IAAkB,KAAlB;AACA,GAFS;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,UAA2B,GAA3B,EAA6C,KAA7C,EAA0D;AACzD,SAAK,OAAL,CAAa,GAAb,CAAiB,GAAjB,EAAsB,KAAtB,EAA6B;AAC5B,MAAA,IAAI,EAAE,GADsB;AAE5B;AACA,MAAA,QAAQ,EAAE,IAHkB;AAI5B;AACA,MAAA,MAAM,EAAE,MAAM,CAAC,QAAP,CAAgB,QAAhB,KAA6B,WAA7B,GAA2C,KAA3C,GAAmD;AAL/B,KAA7B;AAOA,GARS;;AASX,SAAA,gBAAA;AAAC,CAnGD,EAAA","sourceRoot":"","sourcesContent":["import Cookies from 'universal-cookie';\nimport { browserOrNode } from '../JS';\nvar isBrowser = browserOrNode().isBrowser;\nvar UniversalStorage = /** @class */ (function () {\n    function UniversalStorage(context) {\n        if (context === void 0) { context = {}; }\n        this.cookies = new Cookies();\n        this.store = isBrowser ? window.localStorage : Object.create(null);\n        this.cookies = context.req\n            ? new Cookies(context.req.headers.cookie)\n            : new Cookies();\n        Object.assign(this.store, this.cookies.getAll());\n    }\n    Object.defineProperty(UniversalStorage.prototype, \"length\", {\n        get: function () {\n            return Object.entries(this.store).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UniversalStorage.prototype.clear = function () {\n        var _this = this;\n        Array.from(new Array(this.length))\n            .map(function (_, i) { return _this.key(i); })\n            .forEach(function (key) { return _this.removeItem(key); });\n    };\n    UniversalStorage.prototype.getItem = function (key) {\n        return this.getLocalItem(key);\n    };\n    UniversalStorage.prototype.getLocalItem = function (key) {\n        return Object.prototype.hasOwnProperty.call(this.store, key)\n            ? this.store[key]\n            : null;\n    };\n    UniversalStorage.prototype.getUniversalItem = function (key) {\n        return this.cookies.get(key);\n    };\n    UniversalStorage.prototype.key = function (index) {\n        return Object.keys(this.store)[index];\n    };\n    UniversalStorage.prototype.removeItem = function (key) {\n        this.removeLocalItem(key);\n        this.removeUniversalItem(key);\n    };\n    UniversalStorage.prototype.removeLocalItem = function (key) {\n        delete this.store[key];\n    };\n    UniversalStorage.prototype.removeUniversalItem = function (key) {\n        this.cookies.remove(key, {\n            path: '/',\n        });\n    };\n    UniversalStorage.prototype.setItem = function (key, value) {\n        this.setLocalItem(key, value);\n        // keys take the shape:\n        //  1. `${ProviderPrefix}.${userPoolClientId}.${username}.${tokenType}\n        //  2. `${ProviderPrefix}.${userPoolClientId}.LastAuthUser\n        var tokenType = key.split('.').pop();\n        switch (tokenType) {\n            // LastAuthUser is needed for computing other key names\n            case 'LastAuthUser':\n            // accessToken is required for CognitoUserSession\n            case 'accessToken':\n            // Required for CognitoUserSession\n            case 'idToken':\n                this.setUniversalItem(key, value);\n            // userData is used when `Auth.currentAuthenticatedUser({ bypassCache: false })`.\n            // Can be persisted to speed up calls to `Auth.currentAuthenticatedUser()`\n            // case 'userData':\n            // refreshToken isn't shared with the server so that the client handles refreshing\n            // case 'refreshToken':\n            // Ignoring clockDrift on the server for now, but needs testing\n            // case 'clockDrift':\n        }\n    };\n    UniversalStorage.prototype.setLocalItem = function (key, value) {\n        this.store[key] = value;\n    };\n    UniversalStorage.prototype.setUniversalItem = function (key, value) {\n        this.cookies.set(key, value, {\n            path: '/',\n            // `httpOnly` cannot be set via JavaScript: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#JavaScript_access_using_Document.cookie\n            sameSite: true,\n            // Allow unsecure requests to http://localhost:3000/ when in development.\n            secure: window.location.hostname === 'localhost' ? false : true,\n        });\n    };\n    return UniversalStorage;\n}());\nexport { UniversalStorage };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}