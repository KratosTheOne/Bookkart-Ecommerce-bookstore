{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport API from '@aws-amplify/api';\nimport Observable from 'zen-observable-ts';\nimport { buildGraphQLOperation, getModelAuthModes, getClientSideAuthError, getForbiddenError, predicateToGraphQLFilter } from '../utils';\nimport { jitteredExponentialRetry, ConsoleLogger as Logger, Hub, NonRetryableError } from '@aws-amplify/core';\nimport { ModelPredicateCreator } from '../../predicates';\nvar DEFAULT_PAGINATION_LIMIT = 1000;\nvar DEFAULT_MAX_RECORDS_TO_SYNC = 10000;\nvar opResultDefaults = {\n  items: [],\n  nextToken: null,\n  startedAt: null\n};\nvar logger = new Logger('DataStore');\n\nvar SyncProcessor =\n/** @class */\nfunction () {\n  function SyncProcessor(schema, maxRecordsToSync, syncPageSize, syncPredicates, amplifyConfig, authModeStrategy) {\n    if (maxRecordsToSync === void 0) {\n      maxRecordsToSync = DEFAULT_MAX_RECORDS_TO_SYNC;\n    }\n\n    if (syncPageSize === void 0) {\n      syncPageSize = DEFAULT_PAGINATION_LIMIT;\n    }\n\n    if (amplifyConfig === void 0) {\n      amplifyConfig = {};\n    }\n\n    this.schema = schema;\n    this.maxRecordsToSync = maxRecordsToSync;\n    this.syncPageSize = syncPageSize;\n    this.syncPredicates = syncPredicates;\n    this.amplifyConfig = amplifyConfig;\n    this.authModeStrategy = authModeStrategy;\n    this.typeQuery = new WeakMap();\n    this.generateQueries();\n  }\n\n  SyncProcessor.prototype.generateQueries = function () {\n    var _this = this;\n\n    Object.values(this.schema.namespaces).forEach(function (namespace) {\n      Object.values(namespace.models).filter(function (_a) {\n        var syncable = _a.syncable;\n        return syncable;\n      }).forEach(function (model) {\n        var _a = __read(buildGraphQLOperation(namespace, model, 'LIST'), 1),\n            _b = __read(_a[0]),\n            opNameQuery = _b.slice(1);\n\n        _this.typeQuery.set(model, opNameQuery);\n      });\n    });\n  };\n\n  SyncProcessor.prototype.graphqlFilterFromPredicate = function (model) {\n    if (!this.syncPredicates) {\n      return null;\n    }\n\n    var predicatesGroup = ModelPredicateCreator.getPredicates(this.syncPredicates.get(model), false);\n\n    if (!predicatesGroup) {\n      return null;\n    }\n\n    return predicateToGraphQLFilter(predicatesGroup);\n  };\n\n  SyncProcessor.prototype.retrievePage = function (modelDefinition, lastSync, nextToken, limit, filter) {\n    if (limit === void 0) {\n      limit = null;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, opName, query, variables, modelAuthModes, readAuthModes, authModeAttempts, _authModeRetry, data, _b, opResult, items, newNextToken, startedAt;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = __read(this.typeQuery.get(modelDefinition), 2), opName = _a[0], query = _a[1];\n            variables = {\n              limit: limit,\n              nextToken: nextToken,\n              lastSync: lastSync,\n              filter: filter\n            };\n            return [4\n            /*yield*/\n            , getModelAuthModes({\n              authModeStrategy: this.authModeStrategy,\n              defaultAuthMode: this.amplifyConfig.aws_appsync_authenticationType,\n              modelName: modelDefinition.name,\n              schema: this.schema\n            })];\n\n          case 1:\n            modelAuthModes = _c.sent();\n            readAuthModes = modelAuthModes.READ;\n            authModeAttempts = 0;\n\n            _authModeRetry = function authModeRetry() {\n              return __awaiter(_this, void 0, void 0, function () {\n                var response, error_1, authMode;\n\n                var _a;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      _b.trys.push([0, 2,, 4]);\n\n                      logger.debug(\"Attempting sync with authMode: \" + readAuthModes[authModeAttempts]);\n                      return [4\n                      /*yield*/\n                      , this.jitteredRetry({\n                        query: query,\n                        variables: variables,\n                        opName: opName,\n                        modelDefinition: modelDefinition,\n                        authMode: readAuthModes[authModeAttempts]\n                      })];\n\n                    case 1:\n                      response = _b.sent();\n                      logger.debug(\"Sync successful with authMode: \" + readAuthModes[authModeAttempts]);\n                      return [2\n                      /*return*/\n                      , response];\n\n                    case 2:\n                      error_1 = _b.sent();\n                      authModeAttempts++;\n\n                      if (authModeAttempts >= readAuthModes.length) {\n                        authMode = readAuthModes[authModeAttempts - 1];\n                        logger.debug(\"Sync failed with authMode: \" + authMode, error_1);\n\n                        if (getClientSideAuthError(error_1) || getForbiddenError(error_1)) {\n                          // return empty list of data so DataStore will continue to sync other models\n                          logger.warn(\"User is unauthorized to query \" + opName + \" with auth mode \" + authMode + \". No data could be returned.\");\n                          return [2\n                          /*return*/\n                          , {\n                            data: (_a = {}, _a[opName] = opResultDefaults, _a)\n                          }];\n                        }\n\n                        throw error_1;\n                      }\n\n                      logger.debug(\"Sync failed with authMode: \" + readAuthModes[authModeAttempts - 1] + \". Retrying with authMode: \" + readAuthModes[authModeAttempts]);\n                      return [4\n                      /*yield*/\n                      , _authModeRetry()];\n\n                    case 3:\n                      return [2\n                      /*return*/\n                      , _b.sent()];\n\n                    case 4:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            };\n\n            return [4\n            /*yield*/\n            , _authModeRetry()];\n\n          case 2:\n            data = _c.sent().data;\n            _b = opName, opResult = data[_b];\n            items = opResult.items, newNextToken = opResult.nextToken, startedAt = opResult.startedAt;\n            return [2\n            /*return*/\n            , {\n              nextToken: newNextToken,\n              startedAt: startedAt,\n              items: items\n            }];\n        }\n      });\n    });\n  }; // Partial data private feature flag. Not a public API. This will be removed in a future release.\n\n\n  SyncProcessor.prototype.partialDataFeatureFlagEnabled = function () {\n    try {\n      var flag = sessionStorage.getItem('datastorePartialData');\n      return Boolean(flag);\n    } catch (e) {\n      return false;\n    }\n  };\n\n  SyncProcessor.prototype.jitteredRetry = function (_a) {\n    var query = _a.query,\n        variables = _a.variables,\n        opName = _a.opName,\n        modelDefinition = _a.modelDefinition,\n        authMode = _a.authMode;\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , jitteredExponentialRetry(function (query, variables) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var error_2, clientOrForbiddenErrorMessage, hasItems, result, unauthorized, result;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      _a.trys.push([0, 2,, 3]);\n\n                      return [4\n                      /*yield*/\n                      , API.graphql({\n                        query: query,\n                        variables: variables,\n                        authMode: authMode\n                      })];\n\n                    case 1:\n                      return [2\n                      /*return*/\n                      , _a.sent()];\n\n                    case 2:\n                      error_2 = _a.sent();\n                      clientOrForbiddenErrorMessage = getClientSideAuthError(error_2) || getForbiddenError(error_2);\n\n                      if (clientOrForbiddenErrorMessage) {\n                        throw new NonRetryableError(clientOrForbiddenErrorMessage);\n                      }\n\n                      hasItems = Boolean(error_2 && error_2.data && error_2.data[opName] && error_2.data[opName].items);\n\n                      if (this.partialDataFeatureFlagEnabled()) {\n                        if (hasItems) {\n                          result = error_2;\n                          result.data[opName].items = result.data[opName].items.filter(function (item) {\n                            return item !== null;\n                          });\n\n                          if (error_2.errors) {\n                            Hub.dispatch('datastore', {\n                              event: 'syncQueriesPartialSyncError',\n                              data: {\n                                errors: error_2.errors,\n                                modelName: modelDefinition.name\n                              }\n                            });\n                          }\n\n                          return [2\n                          /*return*/\n                          , result];\n                        } else {\n                          throw error_2;\n                        }\n                      }\n\n                      unauthorized = error_2 && error_2.errors && error_2.errors.some(function (err) {\n                        return err.errorType === 'Unauthorized';\n                      });\n\n                      if (unauthorized) {\n                        result = error_2;\n\n                        if (hasItems) {\n                          result.data[opName].items = result.data[opName].items.filter(function (item) {\n                            return item !== null;\n                          });\n                        } else {\n                          result.data[opName] = __assign(__assign({}, opResultDefaults), result.data[opName]);\n                        }\n\n                        logger.warn('queryError', \"User is unauthorized to query \" + opName + \", some items could not be returned.\");\n                        return [2\n                        /*return*/\n                        , result];\n                      } else {\n                        throw error_2;\n                      }\n\n                      return [3\n                      /*break*/\n                      , 3];\n\n                    case 3:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            }, [query, variables])];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.sent()];\n        }\n      });\n    });\n  };\n\n  SyncProcessor.prototype.start = function (typesLastSync) {\n    var _this = this;\n\n    var processing = true;\n    var maxRecordsToSync = this.maxRecordsToSync !== undefined ? this.maxRecordsToSync : DEFAULT_MAX_RECORDS_TO_SYNC;\n    var syncPageSize = this.syncPageSize !== undefined ? this.syncPageSize : DEFAULT_PAGINATION_LIMIT;\n    var parentPromises = new Map();\n    var observable = new Observable(function (observer) {\n      var sortedTypesLastSyncs = Object.values(_this.schema.namespaces).reduce(function (map, namespace) {\n        var e_1, _a;\n\n        try {\n          for (var _b = __values(Array.from(namespace.modelTopologicalOrdering.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var modelName = _c.value;\n            var typeLastSync = typesLastSync.get(namespace.models[modelName]);\n            map.set(namespace.models[modelName], typeLastSync);\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n\n        return map;\n      }, new Map());\n      var allModelsReady = Array.from(sortedTypesLastSyncs.entries()).filter(function (_a) {\n        var _b = __read(_a, 1),\n            syncable = _b[0].syncable;\n\n        return syncable;\n      }).map(function (_a) {\n        var _b = __read(_a, 2),\n            modelDefinition = _b[0],\n            _c = __read(_b[1], 2),\n            namespace = _c[0],\n            lastSync = _c[1];\n\n        return __awaiter(_this, void 0, void 0, function () {\n          var done, nextToken, startedAt, items, recordsReceived, filter, parents, promises, promise;\n\n          var _this = this;\n\n          return __generator(this, function (_d) {\n            switch (_d.label) {\n              case 0:\n                done = false;\n                nextToken = null;\n                startedAt = null;\n                items = null;\n                recordsReceived = 0;\n                filter = this.graphqlFilterFromPredicate(modelDefinition);\n                parents = this.schema.namespaces[namespace].modelTopologicalOrdering.get(modelDefinition.name);\n                promises = parents.map(function (parent) {\n                  return parentPromises.get(namespace + \"_\" + parent);\n                });\n                promise = new Promise(function (res) {\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var limit;\n\n                    var _a;\n\n                    return __generator(this, function (_b) {\n                      switch (_b.label) {\n                        case 0:\n                          return [4\n                          /*yield*/\n                          , Promise.all(promises)];\n\n                        case 1:\n                          _b.sent();\n\n                          _b.label = 2;\n\n                        case 2:\n                          if (!processing) {\n                            return [2\n                            /*return*/\n                            ];\n                          }\n\n                          limit = Math.min(maxRecordsToSync - recordsReceived, syncPageSize);\n                          return [4\n                          /*yield*/\n                          , this.retrievePage(modelDefinition, lastSync, nextToken, limit, filter)];\n\n                        case 3:\n                          _a = _b.sent(), items = _a.items, nextToken = _a.nextToken, startedAt = _a.startedAt;\n                          recordsReceived += items.length;\n                          done = nextToken === null || recordsReceived >= maxRecordsToSync;\n                          observer.next({\n                            namespace: namespace,\n                            modelDefinition: modelDefinition,\n                            items: items,\n                            done: done,\n                            startedAt: startedAt,\n                            isFullSync: !lastSync\n                          });\n                          _b.label = 4;\n\n                        case 4:\n                          if (!done) return [3\n                          /*break*/\n                          , 2];\n                          _b.label = 5;\n\n                        case 5:\n                          res();\n                          return [2\n                          /*return*/\n                          ];\n                      }\n                    });\n                  });\n                });\n                parentPromises.set(namespace + \"_\" + modelDefinition.name, promise);\n                return [4\n                /*yield*/\n                , promise];\n\n              case 1:\n                _d.sent();\n\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      });\n      Promise.all(allModelsReady).then(function () {\n        observer.complete();\n      });\n      return function () {\n        processing = false;\n      };\n    });\n    return observable;\n  };\n\n  return SyncProcessor;\n}();\n\nexport { SyncProcessor };","map":{"version":3,"sources":["../../../src/sync/processors/sync.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport API from '@aws-amplify/api';\nimport Observable from 'zen-observable-ts';\nimport { buildGraphQLOperation, getModelAuthModes, getClientSideAuthError, getForbiddenError, predicateToGraphQLFilter, } from '../utils';\nimport { jitteredExponentialRetry, ConsoleLogger as Logger, Hub, NonRetryableError, } from '@aws-amplify/core';\nimport { ModelPredicateCreator } from '../../predicates';\nvar DEFAULT_PAGINATION_LIMIT = 1000;\nvar DEFAULT_MAX_RECORDS_TO_SYNC = 10000;\nvar opResultDefaults = {\n    items: [],\n    nextToken: null,\n    startedAt: null,\n};\nvar logger = new Logger('DataStore');\nvar SyncProcessor = /** @class */ (function () {\n    function SyncProcessor(schema, maxRecordsToSync, syncPageSize, syncPredicates, amplifyConfig, authModeStrategy) {\n        if (maxRecordsToSync === void 0) { maxRecordsToSync = DEFAULT_MAX_RECORDS_TO_SYNC; }\n        if (syncPageSize === void 0) { syncPageSize = DEFAULT_PAGINATION_LIMIT; }\n        if (amplifyConfig === void 0) { amplifyConfig = {}; }\n        this.schema = schema;\n        this.maxRecordsToSync = maxRecordsToSync;\n        this.syncPageSize = syncPageSize;\n        this.syncPredicates = syncPredicates;\n        this.amplifyConfig = amplifyConfig;\n        this.authModeStrategy = authModeStrategy;\n        this.typeQuery = new WeakMap();\n        this.generateQueries();\n    }\n    SyncProcessor.prototype.generateQueries = function () {\n        var _this = this;\n        Object.values(this.schema.namespaces).forEach(function (namespace) {\n            Object.values(namespace.models)\n                .filter(function (_a) {\n                var syncable = _a.syncable;\n                return syncable;\n            })\n                .forEach(function (model) {\n                var _a = __read(buildGraphQLOperation(namespace, model, 'LIST'), 1), _b = __read(_a[0]), opNameQuery = _b.slice(1);\n                _this.typeQuery.set(model, opNameQuery);\n            });\n        });\n    };\n    SyncProcessor.prototype.graphqlFilterFromPredicate = function (model) {\n        if (!this.syncPredicates) {\n            return null;\n        }\n        var predicatesGroup = ModelPredicateCreator.getPredicates(this.syncPredicates.get(model), false);\n        if (!predicatesGroup) {\n            return null;\n        }\n        return predicateToGraphQLFilter(predicatesGroup);\n    };\n    SyncProcessor.prototype.retrievePage = function (modelDefinition, lastSync, nextToken, limit, filter) {\n        if (limit === void 0) { limit = null; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, opName, query, variables, modelAuthModes, readAuthModes, authModeAttempts, authModeRetry, data, _b, opResult, items, newNextToken, startedAt;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = __read(this.typeQuery.get(modelDefinition), 2), opName = _a[0], query = _a[1];\n                        variables = {\n                            limit: limit,\n                            nextToken: nextToken,\n                            lastSync: lastSync,\n                            filter: filter,\n                        };\n                        return [4 /*yield*/, getModelAuthModes({\n                                authModeStrategy: this.authModeStrategy,\n                                defaultAuthMode: this.amplifyConfig.aws_appsync_authenticationType,\n                                modelName: modelDefinition.name,\n                                schema: this.schema,\n                            })];\n                    case 1:\n                        modelAuthModes = _c.sent();\n                        readAuthModes = modelAuthModes.READ;\n                        authModeAttempts = 0;\n                        authModeRetry = function () { return __awaiter(_this, void 0, void 0, function () {\n                            var response, error_1, authMode;\n                            var _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        _b.trys.push([0, 2, , 4]);\n                                        logger.debug(\"Attempting sync with authMode: \" + readAuthModes[authModeAttempts]);\n                                        return [4 /*yield*/, this.jitteredRetry({\n                                                query: query,\n                                                variables: variables,\n                                                opName: opName,\n                                                modelDefinition: modelDefinition,\n                                                authMode: readAuthModes[authModeAttempts],\n                                            })];\n                                    case 1:\n                                        response = _b.sent();\n                                        logger.debug(\"Sync successful with authMode: \" + readAuthModes[authModeAttempts]);\n                                        return [2 /*return*/, response];\n                                    case 2:\n                                        error_1 = _b.sent();\n                                        authModeAttempts++;\n                                        if (authModeAttempts >= readAuthModes.length) {\n                                            authMode = readAuthModes[authModeAttempts - 1];\n                                            logger.debug(\"Sync failed with authMode: \" + authMode, error_1);\n                                            if (getClientSideAuthError(error_1) || getForbiddenError(error_1)) {\n                                                // return empty list of data so DataStore will continue to sync other models\n                                                logger.warn(\"User is unauthorized to query \" + opName + \" with auth mode \" + authMode + \". No data could be returned.\");\n                                                return [2 /*return*/, {\n                                                        data: (_a = {},\n                                                            _a[opName] = opResultDefaults,\n                                                            _a),\n                                                    }];\n                                            }\n                                            throw error_1;\n                                        }\n                                        logger.debug(\"Sync failed with authMode: \" + readAuthModes[authModeAttempts - 1] + \". Retrying with authMode: \" + readAuthModes[authModeAttempts]);\n                                        return [4 /*yield*/, authModeRetry()];\n                                    case 3: return [2 /*return*/, _b.sent()];\n                                    case 4: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        return [4 /*yield*/, authModeRetry()];\n                    case 2:\n                        data = (_c.sent()).data;\n                        _b = opName, opResult = data[_b];\n                        items = opResult.items, newNextToken = opResult.nextToken, startedAt = opResult.startedAt;\n                        return [2 /*return*/, {\n                                nextToken: newNextToken,\n                                startedAt: startedAt,\n                                items: items,\n                            }];\n                }\n            });\n        });\n    };\n    // Partial data private feature flag. Not a public API. This will be removed in a future release.\n    SyncProcessor.prototype.partialDataFeatureFlagEnabled = function () {\n        try {\n            var flag = sessionStorage.getItem('datastorePartialData');\n            return Boolean(flag);\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    SyncProcessor.prototype.jitteredRetry = function (_a) {\n        var query = _a.query, variables = _a.variables, opName = _a.opName, modelDefinition = _a.modelDefinition, authMode = _a.authMode;\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, jitteredExponentialRetry(function (query, variables) { return __awaiter(_this, void 0, void 0, function () {\n                            var error_2, clientOrForbiddenErrorMessage, hasItems, result, unauthorized, result;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        _a.trys.push([0, 2, , 3]);\n                                        return [4 /*yield*/, API.graphql({\n                                                query: query,\n                                                variables: variables,\n                                                authMode: authMode,\n                                            })];\n                                    case 1: return [2 /*return*/, _a.sent()];\n                                    case 2:\n                                        error_2 = _a.sent();\n                                        clientOrForbiddenErrorMessage = getClientSideAuthError(error_2) || getForbiddenError(error_2);\n                                        if (clientOrForbiddenErrorMessage) {\n                                            throw new NonRetryableError(clientOrForbiddenErrorMessage);\n                                        }\n                                        hasItems = Boolean(error_2 &&\n                                            error_2.data &&\n                                            error_2.data[opName] &&\n                                            error_2.data[opName].items);\n                                        if (this.partialDataFeatureFlagEnabled()) {\n                                            if (hasItems) {\n                                                result = error_2;\n                                                result.data[opName].items = result.data[opName].items.filter(function (item) { return item !== null; });\n                                                if (error_2.errors) {\n                                                    Hub.dispatch('datastore', {\n                                                        event: 'syncQueriesPartialSyncError',\n                                                        data: {\n                                                            errors: error_2.errors,\n                                                            modelName: modelDefinition.name,\n                                                        },\n                                                    });\n                                                }\n                                                return [2 /*return*/, result];\n                                            }\n                                            else {\n                                                throw error_2;\n                                            }\n                                        }\n                                        unauthorized = error_2 &&\n                                            error_2.errors &&\n                                            error_2.errors.some(function (err) { return err.errorType === 'Unauthorized'; });\n                                        if (unauthorized) {\n                                            result = error_2;\n                                            if (hasItems) {\n                                                result.data[opName].items = result.data[opName].items.filter(function (item) { return item !== null; });\n                                            }\n                                            else {\n                                                result.data[opName] = __assign(__assign({}, opResultDefaults), result.data[opName]);\n                                            }\n                                            logger.warn('queryError', \"User is unauthorized to query \" + opName + \", some items could not be returned.\");\n                                            return [2 /*return*/, result];\n                                        }\n                                        else {\n                                            throw error_2;\n                                        }\n                                        return [3 /*break*/, 3];\n                                    case 3: return [2 /*return*/];\n                                }\n                            });\n                        }); }, [query, variables])];\n                    case 1: return [2 /*return*/, _b.sent()];\n                }\n            });\n        });\n    };\n    SyncProcessor.prototype.start = function (typesLastSync) {\n        var _this = this;\n        var processing = true;\n        var maxRecordsToSync = this.maxRecordsToSync !== undefined\n            ? this.maxRecordsToSync\n            : DEFAULT_MAX_RECORDS_TO_SYNC;\n        var syncPageSize = this.syncPageSize !== undefined\n            ? this.syncPageSize\n            : DEFAULT_PAGINATION_LIMIT;\n        var parentPromises = new Map();\n        var observable = new Observable(function (observer) {\n            var sortedTypesLastSyncs = Object.values(_this.schema.namespaces).reduce(function (map, namespace) {\n                var e_1, _a;\n                try {\n                    for (var _b = __values(Array.from(namespace.modelTopologicalOrdering.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var modelName = _c.value;\n                        var typeLastSync = typesLastSync.get(namespace.models[modelName]);\n                        map.set(namespace.models[modelName], typeLastSync);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                return map;\n            }, new Map());\n            var allModelsReady = Array.from(sortedTypesLastSyncs.entries())\n                .filter(function (_a) {\n                var _b = __read(_a, 1), syncable = _b[0].syncable;\n                return syncable;\n            })\n                .map(function (_a) {\n                var _b = __read(_a, 2), modelDefinition = _b[0], _c = __read(_b[1], 2), namespace = _c[0], lastSync = _c[1];\n                return __awaiter(_this, void 0, void 0, function () {\n                    var done, nextToken, startedAt, items, recordsReceived, filter, parents, promises, promise;\n                    var _this = this;\n                    return __generator(this, function (_d) {\n                        switch (_d.label) {\n                            case 0:\n                                done = false;\n                                nextToken = null;\n                                startedAt = null;\n                                items = null;\n                                recordsReceived = 0;\n                                filter = this.graphqlFilterFromPredicate(modelDefinition);\n                                parents = this.schema.namespaces[namespace].modelTopologicalOrdering.get(modelDefinition.name);\n                                promises = parents.map(function (parent) {\n                                    return parentPromises.get(namespace + \"_\" + parent);\n                                });\n                                promise = new Promise(function (res) { return __awaiter(_this, void 0, void 0, function () {\n                                    var limit;\n                                    var _a;\n                                    return __generator(this, function (_b) {\n                                        switch (_b.label) {\n                                            case 0: return [4 /*yield*/, Promise.all(promises)];\n                                            case 1:\n                                                _b.sent();\n                                                _b.label = 2;\n                                            case 2:\n                                                if (!processing) {\n                                                    return [2 /*return*/];\n                                                }\n                                                limit = Math.min(maxRecordsToSync - recordsReceived, syncPageSize);\n                                                return [4 /*yield*/, this.retrievePage(modelDefinition, lastSync, nextToken, limit, filter)];\n                                            case 3:\n                                                (_a = _b.sent(), items = _a.items, nextToken = _a.nextToken, startedAt = _a.startedAt);\n                                                recordsReceived += items.length;\n                                                done = nextToken === null || recordsReceived >= maxRecordsToSync;\n                                                observer.next({\n                                                    namespace: namespace,\n                                                    modelDefinition: modelDefinition,\n                                                    items: items,\n                                                    done: done,\n                                                    startedAt: startedAt,\n                                                    isFullSync: !lastSync,\n                                                });\n                                                _b.label = 4;\n                                            case 4:\n                                                if (!done) return [3 /*break*/, 2];\n                                                _b.label = 5;\n                                            case 5:\n                                                res();\n                                                return [2 /*return*/];\n                                        }\n                                    });\n                                }); });\n                                parentPromises.set(namespace + \"_\" + modelDefinition.name, promise);\n                                return [4 /*yield*/, promise];\n                            case 1:\n                                _d.sent();\n                                return [2 /*return*/];\n                        }\n                    });\n                });\n            });\n            Promise.all(allModelsReady).then(function () {\n                observer.complete();\n            });\n            return function () {\n                processing = false;\n            };\n        });\n        return observable;\n    };\n    return SyncProcessor;\n}());\nexport { SyncProcessor };\n//# sourceMappingURL=sync.js.map"]},"metadata":{},"sourceType":"module"}