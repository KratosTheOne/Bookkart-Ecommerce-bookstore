{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"./constants\";\nexport var omitRetryHeadersMiddleware = function () {\n  return function (next) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          request = args.request;\n\n          if (HttpRequest.isInstance(request)) {\n            delete request.headers[INVOCATION_ID_HEADER];\n            delete request.headers[REQUEST_HEADER];\n          }\n\n          return [2\n          /*return*/\n          , next(args)];\n        });\n      });\n    };\n  };\n};\nexport var omitRetryHeadersMiddlewareOptions = {\n  name: \"omitRetryHeadersMiddleware\",\n  tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n  relation: \"before\",\n  toMiddleware: \"awsAuthMiddleware\",\n  override: true\n};\nexport var getOmitRetryHeadersPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"sources":["../../src/omitRetryHeadersMiddleware.ts"],"names":[],"mappings":";AAAA,SAAS,WAAT,QAA4B,wBAA5B;AAUA,SAAS,oBAAT,EAA+B,cAA/B,QAAqD,aAArD;AAEA,OAAO,IAAM,0BAA0B,GAAG,YAAA;AAAM,SAAA,UAC9C,IAD8C,EACZ;AACD,WAAA,UACjC,IADiC,EACE;AAAA,aAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAE3B,UAAA,OAAO,GAAK,IAAI,CAAT,OAAP;;AACR,cAAI,WAAW,CAAC,UAAZ,CAAuB,OAAvB,CAAJ,EAAqC;AACnC,mBAAO,OAAO,CAAC,OAAR,CAAgB,oBAAhB,CAAP;AACA,mBAAO,OAAO,CAAC,OAAR,CAAgB,cAAhB,CAAP;AACD;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAO,IAAI,CAAC,IAAD,CAAX,CAAA;;OAPmC,CAAA;AADF,KAAA;AAFa,GAAA;AAW/C,CAXM;AAaP,OAAO,IAAM,iCAAiC,GAA8B;AAC1E,EAAA,IAAI,EAAE,4BADoE;AAE1E,EAAA,IAAI,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,oBAArB,CAFoE;AAG1E,EAAA,QAAQ,EAAE,QAHgE;AAI1E,EAAA,YAAY,EAAE,mBAJ4D;AAK1E,EAAA,QAAQ,EAAE;AALgE,CAArE;AAQP,OAAO,IAAM,yBAAyB,GAAG,UAAC,OAAD,EAAiB;AAA0B,SAAC;AACnF,IAAA,YAAY,EAAE,UAAC,WAAD,EAAY;AACxB,MAAA,WAAW,CAAC,aAAZ,CAA0B,0BAA0B,EAApD,EAAwD,iCAAxD;AACD;AAHkF,GAAD;AAIlF,CAJK","sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n  RelativeMiddlewareOptions,\n} from \"@aws-sdk/types\";\n\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"./constants\";\n\nexport const omitRetryHeadersMiddleware = () => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  const { request } = args;\n  if (HttpRequest.isInstance(request)) {\n    delete request.headers[INVOCATION_ID_HEADER];\n    delete request.headers[REQUEST_HEADER];\n  }\n  return next(args);\n};\n\nexport const omitRetryHeadersMiddlewareOptions: RelativeMiddlewareOptions = {\n  name: \"omitRetryHeadersMiddleware\",\n  tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n  relation: \"before\",\n  toMiddleware: \"awsAuthMiddleware\",\n  override: true,\n};\n\nexport const getOmitRetryHeadersPlugin = (options: unknown): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}