{"ast":null,"code":"export function requestTimeout(timeoutInMs) {\n  if (timeoutInMs === void 0) {\n    timeoutInMs = 0;\n  }\n\n  return new Promise(function (resolve, reject) {\n    if (timeoutInMs) {\n      setTimeout(function () {\n        var timeoutError = new Error(\"Request did not complete within \" + timeoutInMs + \" ms\");\n        timeoutError.name = \"TimeoutError\";\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}","map":{"version":3,"sources":["../../src/request-timeout.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,cAAV,CAAyB,WAAzB,EAAwC;AAAf,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAe;;AAC5C,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AACjC,QAAI,WAAJ,EAAiB;AACf,MAAA,UAAU,CAAC,YAAA;AACT,YAAM,YAAY,GAAG,IAAI,KAAJ,CAAU,qCAAmC,WAAnC,GAA8C,KAAxD,CAArB;AACA,QAAA,YAAY,CAAC,IAAb,GAAoB,cAApB;AACA,QAAA,MAAM,CAAC,YAAD,CAAN;AACD,OAJS,EAIP,WAJO,CAAV;AAKD;AACF,GARM,CAAP;AASD","sourcesContent":["export function requestTimeout(timeoutInMs = 0): Promise<never> {\n  return new Promise((resolve, reject) => {\n    if (timeoutInMs) {\n      setTimeout(() => {\n        const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n        timeoutError.name = \"TimeoutError\";\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}