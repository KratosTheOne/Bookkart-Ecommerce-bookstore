{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nfunction retryMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n          return [2\n          /*return*/\n          , options.retryStrategy.retry(next, args)];\n        });\n      });\n    };\n  };\n}\n\nexports.retryMiddleware = retryMiddleware;\nexports.retryMiddlewareOptions = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\"\n};\n\nexports.getRetryPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      if (options.maxRetries > 0) {\n        clientStack.add(retryMiddleware(options), exports.retryMiddlewareOptions);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["../src/retryMiddleware.ts"],"names":[],"mappings":";;;;;;;;AAWA,SAAgB,eAAhB,CAAgC,OAAhC,EAA4D;AAA5D,MAAA,KAAA,GAAA,IAAA;;AACE,SAAO,UACL,IADK,EAC6B;AACD,WAAA,UACjC,IADiC,EACE;AAAA,aAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;AAEnC,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,aAAR,CAAsB,KAAtB,CAA4B,IAA5B,EAAkC,IAAlC,CAAP,CAAA;;OAFmC,CAAA;AADF,KAAA;AAIlC,GAND;AAOD;;AARD,OAAA,CAAA,eAAA,GAAA,eAAA;AAUa,OAAA,CAAA,sBAAA,GACQ;AACnB,EAAA,IAAI,EAAE,iBADa;AAEnB,EAAA,IAAI,EAAE,CAAC,OAAD,CAFa;AAGnB,EAAA,IAAI,EAAE,iBAHa;AAInB,EAAA,QAAQ,EAAE;AAJS,CADR;;AAQA,OAAA,CAAA,cAAA,GAAiB,UAC5B,OAD4B,EACA;AACJ,SAAC;AACzB,IAAA,YAAY,EAAE,UAAA,WAAA,EAAW;AACvB,UAAI,OAAO,CAAC,UAAR,GAAqB,CAAzB,EAA4B;AAC1B,QAAA,WAAW,CAAC,GAAZ,CAAgB,eAAe,CAAC,OAAD,CAA/B,EAA0C,OAAA,CAAA,sBAA1C;AACD;AACF;AALwB,GAAD;AAMxB,CARW","sourcesContent":["import {\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  MetadataBearer,\n  FinalizeHandlerOutput,\n  Pluggable,\n  FinalizeRequestHandlerOptions,\n  AbsoluteLocation\n} from \"@aws-sdk/types\";\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport function retryMiddleware(options: RetryResolvedConfig) {\n  return <Output extends MetadataBearer = MetadataBearer>(\n    next: FinalizeHandler<any, Output>\n  ): FinalizeHandler<any, Output> => async (\n    args: FinalizeHandlerArguments<any>\n  ): Promise<FinalizeHandlerOutput<Output>> => {\n    return options.retryStrategy.retry(next, args);\n  };\n}\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions &\n  AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\"\n};\n\nexport const getRetryPlugin = (\n  options: RetryResolvedConfig\n): Pluggable<any, any> => ({\n  applyToStack: clientStack => {\n    if (options.maxRetries > 0) {\n      clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    }\n  }\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}