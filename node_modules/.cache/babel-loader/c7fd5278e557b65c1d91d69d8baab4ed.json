{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { r as registerInstance, h, c as createEvent, H as Host, g as getElement } from './index-3fb5c139.js';\nimport { Logger, browserOrNode, I18n } from '@aws-amplify/core';\nimport '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport { d as NO_INTERACTIONS_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { Interactions } from '@aws-amplify/interactions'; // AudioRecorder settings\n\nvar RECORDER_EXPORT_MIME_TYPE = 'application/octet-stream';\nvar DEFAULT_EXPORT_SAMPLE_RATE = 16000;\nvar FFT_SIZE = 2048; // window size in samples for Fast Fourier Transform (FFT)\n\nvar FFT_MAX_DECIBELS = -10; // maximum power value in the scaling range for the FFT analysis data\n\nvar FFT_MIN_DECIBELS = -90; // minimum power value in the scaling range for the FFT analysis data\n\nvar FFT_SMOOTHING_TIME_CONSTANT = 0.85; // averaging constant with the last analysis frame\n\n/**\n * Merges multiple buffers into one.\n */\n\nvar mergeBuffers = function (bufferArray, recLength) {\n  var result = new Float32Array(recLength);\n  var offset = 0;\n\n  for (var i = 0; i < bufferArray.length; i++) {\n    result.set(bufferArray[i], offset);\n    offset += bufferArray[i].length;\n  }\n\n  return result;\n};\n/**\n * Downsamples audio to desired export sample rate.\n */\n\n\nvar downsampleBuffer = function (buffer, recordSampleRate, exportSampleRate) {\n  if (exportSampleRate === recordSampleRate) {\n    return buffer;\n  }\n\n  var sampleRateRatio = recordSampleRate / exportSampleRate;\n  var newLength = Math.round(buffer.length / sampleRateRatio);\n  var result = new Float32Array(newLength);\n  var offsetResult = 0;\n  var offsetBuffer = 0;\n\n  while (offsetResult < result.length) {\n    var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n    var accum = 0,\n        count = 0;\n\n    for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\n      accum += buffer[i];\n      count++;\n    }\n\n    result[offsetResult] = accum / count;\n    offsetResult++;\n    offsetBuffer = nextOffsetBuffer;\n  }\n\n  return result;\n};\n/**\n * converts raw audio values to 16 bit pcm.\n */\n\n\nvar floatTo16BitPCM = function (output, offset, input) {\n  var byteOffset = offset;\n\n  for (var i = 0; i < input.length; i++, byteOffset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(byteOffset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n  }\n};\n/**\n * Write given strings in big-endian order.\n */\n\n\nvar writeString = function (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n};\n/**\n * Encodes raw pcm audio into a wav file.\n */\n\n\nvar encodeWAV = function (samples, exportSampleRate) {\n  /**\n   * WAV file consists of three parts: RIFF header, WAVE subchunk, and data subchunk. We precompute the size of them.\n   */\n  var audioSize = samples.length * 2; // We use 16-bit samples, so we have (2 * sampleLength) bytes.\n\n  var fmtSize = 24; // Byte size of the fmt subchunk: 24 bytes that the audio information that we'll set below.\n\n  var dataSize = 8 + audioSize; // Byte size of the data subchunk: raw sound data plus 8 bytes for the subchunk descriptions.\n\n  var totalByteSize = 12 + fmtSize + dataSize; // Byte size of the whole file, including the chunk header / descriptor.\n  // create DataView object to write byte values into\n\n  var buffer = new ArrayBuffer(totalByteSize); // buffer to write the chunk values in.\n\n  var view = new DataView(buffer);\n  /**\n   * Start writing the .wav file. We write top to bottom, so byte offset (first numeric argument) increases strictly.\n   */\n  // RIFF header\n\n  writeString(view, 0, 'RIFF'); // At offset 0, write the letters \"RIFF\"\n\n  view.setUint32(4, fmtSize + dataSize, true); // At offset 4, write the size of fmt and data chunk size combined.\n\n  writeString(view, 8, 'WAVE'); // At offset 8, write the format type \"WAVE\"\n  // fmt subchunk\n\n  writeString(view, 12, 'fmt '); //chunkdId 'fmt '\n\n  view.setUint32(16, fmtSize - 8, true); // fmt subchunk size below this value. We set 8 bytes already, so subtract 8 bytes from fmtSize.\n\n  view.setUint16(20, 1, true); // Audio format code, which is 1 for PCM.\n\n  view.setUint16(22, 1, true); // Number of audio channels. We use mono, ie 1.\n\n  view.setUint32(24, exportSampleRate, true); // Sample rate of the audio file.\n\n  view.setUint32(28, exportSampleRate * 2, true); // Data rate, or # of data bytes per second. Since each sample is 2 bytes, this is 2 * sampleRate.\n\n  view.setUint16(32, 2, true); // block align, # of bytes per sample including all channels, ie. 2 bytes.\n\n  view.setUint16(34, 16, true); // bits per sample, ie. 16 bits\n  // data subchunk\n\n  writeString(view, 36, 'data'); // write the chunkId 'data'\n\n  view.setUint32(40, audioSize, true); // Audio byte size\n\n  floatTo16BitPCM(view, 44, samples); // raw pcm values then go here.\n\n  return view;\n};\n/**\n * Given arrays of raw pcm audio, downsamples the audio to desired sample rate and encodes it to a wav audio file.\n *\n * @param recBuffer {Float32Array[]} - 2d float array containing the recorded raw audio\n * @param recLength {number} - total length of recorded audio\n * @param recordSampleRate {number} - sample rate of the recorded audio\n * @param exportSampleRate {number} - desired sample rate of the exported file\n */\n\n\nvar exportBuffer = function (recBuffer, recLength, recordSampleRate, exportSampleRate) {\n  var mergedBuffers = mergeBuffers(recBuffer, recLength);\n  var downsampledBuffer = downsampleBuffer(mergedBuffers, recordSampleRate, exportSampleRate);\n  var encodedWav = encodeWAV(downsampledBuffer, exportSampleRate);\n  var audioBlob = new Blob([encodedWav], {\n    type: RECORDER_EXPORT_MIME_TYPE\n  });\n  return audioBlob;\n};\n\nvar logger = new Logger('AudioRecorder');\n\nvar AudioRecorder =\n/** @class */\nfunction () {\n  function AudioRecorder(options) {\n    // input mic stream is stored in a buffer\n    this.streamBuffer = [];\n    this.streamBufferLength = 0;\n    this.recording = false;\n    this.options = options;\n  }\n  /**\n   * This must be called first to enable audio context and request microphone access.\n   * Once access granted, it connects all the necessary audio nodes to the context so that it can begin recording or playing.\n   */\n\n\n  AudioRecorder.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!browserOrNode().isBrowser) return [3\n            /*break*/\n            , 2];\n            window.AudioContext = window.AudioContext || window.webkitAudioContext;\n            this.audioContext = new AudioContext();\n            return [4\n            /*yield*/\n            , navigator.mediaDevices.getUserMedia({\n              audio: true\n            }).then(function (stream) {\n              _this.audioSupported = true;\n\n              _this.setupAudioNodes(stream);\n            }).catch(function () {\n              _this.audioSupported = false;\n              return Promise.reject('Audio is not supported');\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            this.audioSupported = false;\n            return [2\n            /*return*/\n            , Promise.reject('Audio is not supported')];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Setup audio nodes after successful `init`.\n   */\n\n\n  AudioRecorder.prototype.setupAudioNodes = function (stream) {\n    return __awaiter(this, void 0, void 0, function () {\n      var err_1, sourceNode, processorNode, analyserNode;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.audioContext.resume()];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            err_1 = _a.sent();\n            logger.error(err_1);\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            sourceNode = this.audioContext.createMediaStreamSource(stream);\n            processorNode = this.audioContext.createScriptProcessor(4096, 1, 1);\n\n            processorNode.onaudioprocess = function (audioProcessingEvent) {\n              if (!_this.recording) return;\n              var stream = audioProcessingEvent.inputBuffer.getChannelData(0);\n\n              _this.streamBuffer.push(new Float32Array(stream)); // set to a copy of the stream\n\n\n              _this.streamBufferLength += stream.length;\n\n              _this.analyse();\n            };\n\n            analyserNode = this.audioContext.createAnalyser();\n            analyserNode.minDecibels = FFT_MIN_DECIBELS;\n            analyserNode.maxDecibels = FFT_MAX_DECIBELS;\n            analyserNode.smoothingTimeConstant = FFT_SMOOTHING_TIME_CONSTANT;\n            sourceNode.connect(analyserNode);\n            analyserNode.connect(processorNode);\n            processorNode.connect(sourceNode.context.destination);\n            this.analyserNode = analyserNode;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Start recording audio and listen for silence.\n   *\n   * @param onSilence {SilenceHandler} - called whenever silence is detected\n   * @param visualizer {Visualizer} - called with audio data on each audio process to be used for visualization.\n   */\n\n\n  AudioRecorder.prototype.startRecording = function (onSilence, visualizer) {\n    return __awaiter(this, void 0, void 0, function () {\n      var context, err_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.recording || !this.audioSupported) return [2\n            /*return*/\n            ];\n\n            this.onSilence = onSilence || function () {};\n\n            this.visualizer = visualizer || function () {};\n\n            context = this.audioContext;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , context.resume()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_2 = _a.sent();\n            logger.error(err_2);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            this.start = Date.now();\n            this.recording = true;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Pause recording\n   */\n\n\n  AudioRecorder.prototype.stopRecording = function () {\n    if (!this.audioSupported) return;\n    this.recording = false;\n  };\n  /**\n   * Pause recording and clear audio buffer\n   */\n\n\n  AudioRecorder.prototype.clear = function () {\n    this.stopRecording();\n    this.streamBufferLength = 0;\n    this.streamBuffer = [];\n  };\n  /**\n   * Plays given audioStream with audioContext\n   *\n   * @param buffer {Uint8Array} - audioStream to be played\n   */\n\n\n  AudioRecorder.prototype.play = function (buffer) {\n    var _this = this;\n\n    if (!buffer || !this.audioSupported) return;\n    var myBlob = new Blob([buffer]);\n    return new Promise(function (res, rej) {\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        if (_this.playbackSource) _this.playbackSource.disconnect(); // disconnect previous playback source\n\n        _this.playbackSource = _this.audioContext.createBufferSource();\n\n        var successCallback = function (buf) {\n          _this.playbackSource.buffer = buf;\n\n          _this.playbackSource.connect(_this.audioContext.destination);\n\n          _this.playbackSource.onended = function () {\n            return res();\n          };\n\n          _this.playbackSource.start(0);\n        };\n\n        var errorCallback = function (err) {\n          return rej(err);\n        };\n\n        _this.audioContext.decodeAudioData(fileReader.result, successCallback, errorCallback);\n      };\n\n      fileReader.onerror = function () {\n        return rej();\n      };\n\n      fileReader.readAsArrayBuffer(myBlob);\n    });\n  };\n  /**\n   * Stops playing audio if there's a playback source connected.\n   */\n\n\n  AudioRecorder.prototype.stop = function () {\n    if (this.playbackSource) {\n      this.playbackSource.stop();\n    }\n  };\n  /**\n   * Called after each audioProcess. Check for silence and give fft time domain data to visualizer.\n   */\n\n\n  AudioRecorder.prototype.analyse = function () {\n    if (!this.audioSupported) return;\n    var analyser = this.analyserNode;\n    analyser.fftSize = FFT_SIZE;\n    var bufferLength = analyser.fftSize;\n    var dataArray = new Uint8Array(bufferLength);\n    var amplitude = this.options.amplitude;\n    var time = this.options.time;\n    analyser.getByteTimeDomainData(dataArray);\n    this.visualizer(dataArray, bufferLength);\n\n    for (var i = 0; i < bufferLength; i++) {\n      // Normalize between -1 and 1.\n      var curr_value_time = dataArray[i] / 128 - 1.0;\n\n      if (curr_value_time > amplitude || curr_value_time < -1 * amplitude) {\n        this.start = Date.now();\n      }\n    }\n\n    var newtime = Date.now();\n    var elapsedTime = newtime - this.start;\n\n    if (elapsedTime > time) {\n      this.onSilence();\n    }\n  };\n  /**\n   * Encodes recorded buffer to a wav file and exports it to a blob.\n   *\n   * @param exportSampleRate {number} - desired sample rate of the exported buffer\n   */\n\n\n  AudioRecorder.prototype.exportWAV = function (exportSampleRate) {\n    if (exportSampleRate === void 0) {\n      exportSampleRate = DEFAULT_EXPORT_SAMPLE_RATE;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var recordSampleRate, blob;\n      return __generator(this, function (_a) {\n        if (!this.audioSupported) return [2\n        /*return*/\n        ];\n        recordSampleRate = this.audioContext.sampleRate;\n        blob = exportBuffer(this.streamBuffer, this.streamBufferLength, recordSampleRate, exportSampleRate);\n        this.clear();\n        return [2\n        /*return*/\n        , blob];\n      });\n    });\n  };\n\n  return AudioRecorder;\n}();\n\nvar visualize = function (dataArray, bufferLength, canvas) {\n  if (!canvas) return;\n  if (!browserOrNode().isBrowser) throw new Error('Visualization is not supported on non-browsers.');\n\n  var _a = canvas.getBoundingClientRect(),\n      width = _a.width,\n      height = _a.height; // need to update the default canvas width and height\n\n\n  canvas.width = width;\n  canvas.height = height;\n  var canvasCtx = canvas.getContext('2d');\n  canvasCtx.fillStyle = 'white';\n  canvasCtx.clearRect(0, 0, width, height);\n\n  var draw = function () {\n    canvasCtx.fillRect(0, 0, width, height);\n    canvasCtx.lineWidth = 1;\n    var color = getComputedStyle(document.documentElement).getPropertyValue('--amplify-primary-color');\n    canvasCtx.strokeStyle = !color || color === '' ? '#ff9900' : color; // TODO: try separate css variable\n\n    canvasCtx.beginPath();\n    var sliceWidth = width * 1.0 / bufferLength;\n    var x = 0;\n\n    for (var i = 0; i < bufferLength || i % 3 === 0; i++) {\n      var value = dataArray[i] / 128.0;\n      var y = value * height / 2;\n\n      if (i === 0) {\n        canvasCtx.moveTo(x, y);\n      } else {\n        canvasCtx.lineTo(x, y);\n      }\n\n      x += sliceWidth;\n    }\n\n    canvasCtx.lineTo(canvas.width, canvas.height / 2);\n    canvasCtx.stroke();\n  }; // Register our draw function with requestAnimationFrame.\n\n\n  requestAnimationFrame(draw);\n};\n\nvar amplifyChatbotCss = \".bot .dot{background-color:var(--bot-dot-color)}.user .dot{background-color:var(--user-dot-color)}.dot-flashing{width:2.625rem}.dot-flashing .dot{display:inline-block;width:0.625rem;height:0.625rem;border-radius:10rem;opacity:0.65}.dot-flashing .left{-webkit-animation:dot-flashing 1s infinite alternate;animation:dot-flashing 1s infinite alternate;-webkit-animation-delay:0s;animation-delay:0s}.dot-flashing .middle{margin-left:0.375rem;margin-right:0.375rem;-webkit-animation:dot-flashing 1s infinite linear alternate;animation:dot-flashing 1s infinite linear alternate;-webkit-animation-delay:0.5s;animation-delay:0.5s}.dot-flashing .right{-webkit-animation:dot-flashing 1s infinite alternate;animation:dot-flashing 1s infinite alternate;-webkit-animation-delay:1s;animation-delay:1s}@-webkit-keyframes dot-flashing{0%{opacity:0.65}50%,100%{opacity:0.1}}@keyframes dot-flashing{0%{opacity:0.65}50%,100%{opacity:0.1}}:host{--width:28.75rem;--height:37.5rem;--header-color:var(--amplify-secondary-color);--header-size:var(--amplify-text-lg);--bot-background-color:rgb(230, 230, 230);--bot-text-color:black;--bot-dot-color:var(--bot-text-color);--user-background-color:var(--amplify-blue);--user-text-color:var(--amplify-white);--user-dot-color:var(--user-text-color)}.amplify-chatbot{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;background-color:var(--background-color);border-radius:0.375rem;-webkit-box-shadow:0.0625rem 0rem 0.25rem 0 rgba(0, 0, 0, 0.15);box-shadow:0.0625rem 0rem 0.25rem 0 rgba(0, 0, 0, 0.15);-webkit-box-sizing:border-box;box-sizing:border-box;font-family:var(--amplify-font-family);margin-bottom:1rem;width:100%;height:var(--height);max-width:var(--width)}@media (min-width: 672px){.amplify-chatbot{width:var(--width)}}.header{padding:1.25rem 0.375rem 1.25rem 0.375rem;color:var(--header-color);font-size:var(--header-size);font-weight:bold;text-align:center;word-wrap:break-word}.body{border-top:0.0625rem solid rgba(0, 0, 0, 0.05);padding:1.5rem 1rem 0 1rem;display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-direction:column;flex-direction:column;overflow:auto}.bubble{max-width:100%;padding:0.8em 1.4em;text-align:left;word-wrap:break-word;margin-bottom:0.625rem}.bot{margin-right:auto;background-color:var(--bot-background-color);color:var(--bot-text-color);border-radius:1.5rem 1.5rem 1.5rem 0}.user{margin-left:auto;background-color:var(--user-background-color);color:var(--user-text-color);border-radius:1.5rem 1.5rem 0 1.5rem}.footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;border-top:0.062rem solid rgba(0, 0, 0, 0.05);padding-right:0.625rem;min-height:3.125rem}.footer amplify-input{--border:none;--margin:0;-ms-flex-positive:1;flex-grow:1}canvas{margin-left:0.625rem;margin-right:0.625rem;-ms-flex-positive:1;flex-grow:1;height:3.125rem}.icon-button{--icon-height:1.25rem;--icon-fill:var(--amplify-primary-color);--padding:0.625rem;--width:auto}\"; // enum for possible bot states\n\nvar ChatState;\n\n(function (ChatState) {\n  ChatState[ChatState[\"Initial\"] = 0] = \"Initial\";\n  ChatState[ChatState[\"Listening\"] = 1] = \"Listening\";\n  ChatState[ChatState[\"SendingText\"] = 2] = \"SendingText\";\n  ChatState[ChatState[\"SendingVoice\"] = 3] = \"SendingVoice\";\n  ChatState[ChatState[\"Error\"] = 4] = \"Error\";\n})(ChatState || (ChatState = {})); // Message types\n\n\nvar MessageFrom;\n\n(function (MessageFrom) {\n  MessageFrom[\"Bot\"] = \"bot\";\n  MessageFrom[\"User\"] = \"user\";\n})(MessageFrom || (MessageFrom = {})); // Error types\n\n\nvar ChatErrorType;\n\n(function (ChatErrorType) {\n  ChatErrorType[ChatErrorType[\"Recoverable\"] = 0] = \"Recoverable\";\n  ChatErrorType[ChatErrorType[\"Unrecoverable\"] = 1] = \"Unrecoverable\";\n})(ChatErrorType || (ChatErrorType = {}));\n\nvar AmplifyChatbot =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Clear messages when conversation finishes */\n\n    this.clearOnComplete = false;\n    /** Continue listening to users after they send the message */\n\n    this.conversationModeOn = false;\n    /** Text placed in the top header */\n\n    this.botTitle = Translations.CHATBOT_TITLE;\n    /** Whether voice chat is enabled */\n\n    this.voiceEnabled = false;\n    /** Whether text chat is enabled */\n\n    this.textEnabled = true;\n    /** Amount of silence (in ms) to wait for */\n\n    this.silenceTime = 1500;\n    /** Noise threshold between -1 and 1. Anything below is considered a silence. */\n\n    this.silenceThreshold = 0.2;\n    /** Messages in current session */\n\n    this.messages = [];\n    /** Text input box value  */\n\n    this.text = '';\n    /** Current app state */\n\n    this.chatState = ChatState.Initial;\n    /**\n     * Rendering methods\n     */\n\n    this.messageJSX = function (messages) {\n      var messageList = messages.map(function (message) {\n        return h(\"div\", {\n          class: \"bubble \" + message.from\n        }, message.content);\n      });\n\n      if (_this.chatState === ChatState.SendingText || _this.chatState === ChatState.SendingVoice) {\n        // if waiting for voice message, show animation on user side because app is waiting for transcript. Else put it on bot side.\n        var client = _this.chatState === ChatState.SendingText ? MessageFrom.Bot : MessageFrom.User;\n        messageList.push(h(\"div\", {\n          class: \"bubble \" + client\n        }, h(\"div\", {\n          class: \"dot-flashing \" + client\n        }, h(\"span\", {\n          class: \"dot left\"\n        }), h(\"span\", {\n          class: \"dot middle\"\n        }), h(\"span\", {\n          class: \"dot right\"\n        }))));\n      }\n\n      return messageList;\n    };\n\n    this.chatCompleted = createEvent(this, \"chatCompleted\", 7);\n  } // Occurs when user presses enter in input box\n\n\n  class_1.prototype.submitHandler = function (_event) {\n    this.sendTextMessage();\n  };\n  /**\n   * Lifecycle functions\n   */\n\n\n  class_1.prototype.componentWillLoad = function () {\n    if (!Interactions || typeof Interactions.onComplete !== 'function') {\n      throw new Error(NO_INTERACTIONS_MODULE_FOUND);\n    }\n\n    this.validateProps();\n  };\n\n  class_1.prototype.componentDidRender = function () {\n    // scroll to the bottom if necessary\n    var body = this.element.shadowRoot.querySelector('.body');\n    body.scrollTop = body.scrollHeight;\n  };\n\n  class_1.prototype.validateProps = function () {\n    var _this = this;\n\n    if (!this.voiceEnabled && !this.textEnabled) {\n      this.setError(Translations.CHAT_DISABLED_ERROR, ChatErrorType.Unrecoverable);\n      return;\n    } else if (!this.botName) {\n      this.setError(Translations.NO_BOT_NAME_ERROR, ChatErrorType.Unrecoverable);\n      return;\n    }\n\n    if (this.welcomeMessage) this.appendToChat(this.welcomeMessage, MessageFrom.Bot); // Initialize AudioRecorder if voice is enabled\n\n    if (this.voiceEnabled) {\n      this.audioRecorder = new AudioRecorder({\n        time: this.silenceTime,\n        amplitude: this.silenceThreshold\n      });\n      this.audioRecorder.init().catch(function (err) {\n        _this.setError(err, ChatErrorType.Recoverable);\n      });\n    } // Callback function to be called after chat is completed\n\n\n    var onComplete = function (err, data) {\n      _this.chatCompleted.emit({\n        data: data,\n        err: err\n      });\n\n      if (_this.clearOnComplete) {\n        _this.reset();\n      } else {\n        _this.chatState = ChatState.Initial;\n      }\n    };\n\n    try {\n      Interactions.onComplete(this.botName, onComplete);\n    } catch (err) {\n      this.setError(err, ChatErrorType.Unrecoverable);\n    }\n  };\n  /**\n   * Handlers\n   */\n\n\n  class_1.prototype.handleMicButton = function () {\n    var _this = this;\n\n    if (this.chatState !== ChatState.Initial) return;\n    this.audioRecorder.stop();\n    this.chatState = ChatState.Listening;\n    this.audioRecorder.startRecording(function () {\n      return _this.handleSilence();\n    }, function (data, length) {\n      return _this.visualizer(data, length);\n    });\n  };\n\n  class_1.prototype.handleSilence = function () {\n    var _this = this;\n\n    this.chatState = ChatState.SendingVoice;\n    this.audioRecorder.stopRecording();\n    this.audioRecorder.exportWAV().then(function (blob) {\n      _this.sendVoiceMessage(blob);\n    });\n  };\n\n  class_1.prototype.handleTextChange = function (event) {\n    var target = event.target;\n    this.text = target.value;\n  };\n\n  class_1.prototype.handleCancelButton = function () {\n    this.audioRecorder.clear();\n    this.chatState = ChatState.Initial;\n  };\n\n  class_1.prototype.handleToastClose = function (errorType) {\n    this.error = undefined; // clear error\n    // if error is recoverable, reset the app state to initial\n\n    if (errorType === ChatErrorType.Recoverable) {\n      this.chatState = ChatState.Initial;\n    }\n  };\n  /**\n   * Visualization\n   */\n\n\n  class_1.prototype.visualizer = function (dataArray, bufferLength) {\n    var canvas = this.element.shadowRoot.querySelector('canvas');\n    visualize(dataArray, bufferLength, canvas);\n  };\n  /**\n   * Interactions helpers\n   */\n\n\n  class_1.prototype.sendTextMessage = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var text, response, err_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.text.length === 0 || this.chatState !== ChatState.Initial) return [2\n            /*return*/\n            ];\n            text = this.text;\n            this.text = '';\n            this.appendToChat(text, MessageFrom.User);\n            this.chatState = ChatState.SendingText;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Interactions.send(this.botName, text)];\n\n          case 2:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_3 = _a.sent();\n            this.setError(err_3, ChatErrorType.Recoverable);\n            return [2\n            /*return*/\n            ];\n\n          case 4:\n            if (response.message) {\n              this.appendToChat(response.message, MessageFrom.Bot);\n            }\n\n            this.chatState = ChatState.Initial;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.sendVoiceMessage = function (audioInput) {\n    return __awaiter(this, void 0, void 0, function () {\n      var interactionsMessage, response, err_4, dialogState;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            interactionsMessage = {\n              content: audioInput,\n              options: {\n                messageType: 'voice'\n              }\n            };\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Interactions.send(this.botName, interactionsMessage)];\n\n          case 2:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_4 = _a.sent();\n            this.setError(err_4, ChatErrorType.Recoverable);\n            return [2\n            /*return*/\n            ];\n\n          case 4:\n            this.chatState = ChatState.Initial;\n            dialogState = response.dialogState;\n            if (response.inputTranscript) this.appendToChat(response.inputTranscript, MessageFrom.User);\n            this.appendToChat(response.message, MessageFrom.Bot);\n            return [4\n            /*yield*/\n            , this.audioRecorder.play(response.audioStream).then(function () {\n              // if conversationMode is on, chat is incomplete, and mic button isn't pressed yet, resume listening.\n              if (_this.conversationModeOn && dialogState !== 'Fulfilled' && dialogState !== 'Failed' && _this.chatState === ChatState.Initial) {\n                _this.handleMicButton();\n              }\n            }).catch(function (err) {\n              return _this.setError(err, ChatErrorType.Recoverable);\n            })];\n\n          case 5:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.appendToChat = function (content, from) {\n    this.messages = __spreadArrays(this.messages, [{\n      content: content,\n      from: from\n    }]);\n  };\n  /**\n   * State control methods\n   */\n\n\n  class_1.prototype.setError = function (error, errorType) {\n    var message = typeof error === 'string' ? error : error.message;\n    this.chatState = ChatState.Error;\n    this.error = {\n      message: message,\n      errorType: errorType\n    };\n  };\n\n  class_1.prototype.reset = function () {\n    this.chatState = ChatState.Initial;\n    this.text = '';\n    this.error = undefined;\n    this.messages = [];\n    if (this.welcomeMessage) this.appendToChat(this.welcomeMessage, MessageFrom.Bot);\n    this.audioRecorder && this.audioRecorder.clear();\n  };\n\n  class_1.prototype.listeningFooterJSX = function () {\n    var _this = this;\n\n    var visualization = h(\"canvas\", {\n      height: \"50\"\n    });\n    var cancelButton = h(\"amplify-button\", {\n      \"data-test\": \"chatbot-cancel-button\",\n      handleButtonClick: function () {\n        return _this.handleCancelButton();\n      },\n      class: \"icon-button\",\n      variant: \"icon\",\n      icon: \"ban\"\n    });\n    return [visualization, cancelButton];\n  };\n\n  class_1.prototype.footerJSX = function () {\n    var _this = this;\n\n    if (this.chatState === ChatState.Listening) return this.listeningFooterJSX();\n    var inputPlaceholder = this.textEnabled ? Translations.TEXT_INPUT_PLACEHOLDER : Translations.VOICE_INPUT_PLACEHOLDER;\n    var textInput = h(\"amplify-input\", {\n      placeholder: I18n.get(inputPlaceholder),\n      description: \"text\",\n      handleInputChange: function (evt) {\n        return _this.handleTextChange(evt);\n      },\n      value: this.text,\n      disabled: this.chatState === ChatState.Error || !this.textEnabled\n    });\n    var micButton = this.voiceEnabled && h(\"amplify-button\", {\n      \"data-test\": \"chatbot-mic-button\",\n      handleButtonClick: function () {\n        return _this.handleMicButton();\n      },\n      class: \"icon-button\",\n      variant: \"icon\",\n      icon: \"microphone\",\n      disabled: this.chatState === ChatState.Error || this.chatState !== ChatState.Initial\n    });\n    var sendButton = this.textEnabled && h(\"amplify-button\", {\n      \"data-test\": \"chatbot-send-button\",\n      class: \"icon-button\",\n      variant: \"icon\",\n      icon: \"send\",\n      handleButtonClick: function () {\n        return _this.sendTextMessage();\n      },\n      disabled: this.chatState === ChatState.Error || this.chatState !== ChatState.Initial\n    });\n    return [textInput, micButton, sendButton];\n  };\n\n  class_1.prototype.errorToast = function () {\n    var _this = this;\n\n    if (!this.error) return;\n    var _a = this.error,\n        message = _a.message,\n        errorType = _a.errorType;\n    return h(\"amplify-toast\", {\n      message: I18n.get(message),\n      handleClose: function () {\n        return _this.handleToastClose(errorType);\n      }\n    });\n  };\n\n  class_1.prototype.render = function () {\n    return h(Host, null, h(\"div\", {\n      class: \"amplify-chatbot\"\n    }, h(\"slot\", {\n      name: \"header\"\n    }, h(\"div\", {\n      class: \"header\",\n      \"data-test\": \"chatbot-header\"\n    }, I18n.get(this.botTitle))), h(\"div\", {\n      class: \"body\",\n      \"data-test\": \"chatbot-body\"\n    }, this.messageJSX(this.messages)), h(\"div\", {\n      class: \"footer\",\n      \"data-test\": \"chatbot-footer\"\n    }, this.footerJSX()), this.errorToast()));\n  };\n\n  Object.defineProperty(class_1.prototype, \"element\", {\n    get: function () {\n      return getElement(this);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return class_1;\n}();\n\nAmplifyChatbot.style = amplifyChatbotCss;\nexport { AmplifyChatbot as amplify_chatbot };","map":{"version":3,"sources":["C:/Users/Kaustubh Sinha/Desktop/bookkart/node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-chatbot.entry.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__spreadArrays","s","i","il","arguments","r","Array","k","a","j","jl","registerInstance","h","c","createEvent","H","Host","getElement","Logger","browserOrNode","I18n","T","Translations","d","NO_INTERACTIONS_MODULE_FOUND","Interactions","RECORDER_EXPORT_MIME_TYPE","DEFAULT_EXPORT_SAMPLE_RATE","FFT_SIZE","FFT_MAX_DECIBELS","FFT_MIN_DECIBELS","FFT_SMOOTHING_TIME_CONSTANT","mergeBuffers","bufferArray","recLength","Float32Array","offset","set","downsampleBuffer","buffer","recordSampleRate","exportSampleRate","sampleRateRatio","newLength","Math","round","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","floatTo16BitPCM","output","input","byteOffset","max","min","setInt16","writeString","view","string","setUint8","charCodeAt","encodeWAV","samples","audioSize","fmtSize","dataSize","totalByteSize","ArrayBuffer","DataView","setUint32","setUint16","exportBuffer","recBuffer","mergedBuffers","downsampledBuffer","encodedWav","audioBlob","Blob","type","logger","AudioRecorder","options","streamBuffer","streamBufferLength","recording","prototype","init","_this","_a","isBrowser","window","AudioContext","webkitAudioContext","audioContext","navigator","mediaDevices","getUserMedia","audio","stream","audioSupported","setupAudioNodes","catch","err_1","sourceNode","processorNode","analyserNode","resume","error","createMediaStreamSource","createScriptProcessor","onaudioprocess","audioProcessingEvent","inputBuffer","getChannelData","analyse","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","connect","context","destination","startRecording","onSilence","visualizer","err_2","start","Date","now","stopRecording","clear","play","myBlob","res","rej","fileReader","FileReader","onload","playbackSource","disconnect","createBufferSource","successCallback","buf","onended","errorCallback","err","decodeAudioData","onerror","readAsArrayBuffer","stop","analyser","fftSize","bufferLength","dataArray","Uint8Array","amplitude","time","getByteTimeDomainData","curr_value_time","newtime","elapsedTime","exportWAV","blob","sampleRate","visualize","canvas","Error","getBoundingClientRect","width","height","canvasCtx","getContext","fillStyle","clearRect","draw","fillRect","lineWidth","color","getComputedStyle","document","documentElement","getPropertyValue","strokeStyle","beginPath","sliceWidth","x","moveTo","lineTo","stroke","requestAnimationFrame","amplifyChatbotCss","ChatState","MessageFrom","ChatErrorType","AmplifyChatbot","class_1","hostRef","clearOnComplete","conversationModeOn","botTitle","CHATBOT_TITLE","voiceEnabled","textEnabled","silenceTime","silenceThreshold","messages","text","chatState","Initial","messageJSX","messageList","map","message","class","from","content","SendingText","SendingVoice","client","Bot","User","chatCompleted","submitHandler","_event","sendTextMessage","componentWillLoad","onComplete","validateProps","componentDidRender","element","shadowRoot","querySelector","scrollTop","scrollHeight","setError","CHAT_DISABLED_ERROR","Unrecoverable","botName","NO_BOT_NAME_ERROR","welcomeMessage","appendToChat","audioRecorder","Recoverable","data","emit","reset","handleMicButton","Listening","handleSilence","sendVoiceMessage","handleTextChange","event","target","handleCancelButton","handleToastClose","errorType","undefined","response","err_3","send","audioInput","interactionsMessage","err_4","dialogState","messageType","inputTranscript","audioStream","listeningFooterJSX","visualization","cancelButton","handleButtonClick","variant","icon","footerJSX","inputPlaceholder","TEXT_INPUT_PLACEHOLDER","VOICE_INPUT_PLACEHOLDER","textInput","placeholder","get","description","handleInputChange","evt","disabled","micButton","sendButton","errorToast","handleClose","render","name","Object","defineProperty","enumerable","configurable","style","amplify_chatbot"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { r as registerInstance, h, c as createEvent, H as Host, g as getElement } from './index-3fb5c139.js';\nimport { Logger, browserOrNode, I18n } from '@aws-amplify/core';\nimport '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport { d as NO_INTERACTIONS_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { Interactions } from '@aws-amplify/interactions';\n// AudioRecorder settings\nvar RECORDER_EXPORT_MIME_TYPE = 'application/octet-stream';\nvar DEFAULT_EXPORT_SAMPLE_RATE = 16000;\nvar FFT_SIZE = 2048; // window size in samples for Fast Fourier Transform (FFT)\nvar FFT_MAX_DECIBELS = -10; // maximum power value in the scaling range for the FFT analysis data\nvar FFT_MIN_DECIBELS = -90; // minimum power value in the scaling range for the FFT analysis data\nvar FFT_SMOOTHING_TIME_CONSTANT = 0.85; // averaging constant with the last analysis frame\n/**\n * Merges multiple buffers into one.\n */\nvar mergeBuffers = function (bufferArray, recLength) {\n    var result = new Float32Array(recLength);\n    var offset = 0;\n    for (var i = 0; i < bufferArray.length; i++) {\n        result.set(bufferArray[i], offset);\n        offset += bufferArray[i].length;\n    }\n    return result;\n};\n/**\n * Downsamples audio to desired export sample rate.\n */\nvar downsampleBuffer = function (buffer, recordSampleRate, exportSampleRate) {\n    if (exportSampleRate === recordSampleRate) {\n        return buffer;\n    }\n    var sampleRateRatio = recordSampleRate / exportSampleRate;\n    var newLength = Math.round(buffer.length / sampleRateRatio);\n    var result = new Float32Array(newLength);\n    var offsetResult = 0;\n    var offsetBuffer = 0;\n    while (offsetResult < result.length) {\n        var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n        var accum = 0, count = 0;\n        for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\n            accum += buffer[i];\n            count++;\n        }\n        result[offsetResult] = accum / count;\n        offsetResult++;\n        offsetBuffer = nextOffsetBuffer;\n    }\n    return result;\n};\n/**\n * converts raw audio values to 16 bit pcm.\n */\nvar floatTo16BitPCM = function (output, offset, input) {\n    var byteOffset = offset;\n    for (var i = 0; i < input.length; i++, byteOffset += 2) {\n        var s = Math.max(-1, Math.min(1, input[i]));\n        output.setInt16(byteOffset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n    }\n};\n/**\n * Write given strings in big-endian order.\n */\nvar writeString = function (view, offset, string) {\n    for (var i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n    }\n};\n/**\n * Encodes raw pcm audio into a wav file.\n */\nvar encodeWAV = function (samples, exportSampleRate) {\n    /**\n     * WAV file consists of three parts: RIFF header, WAVE subchunk, and data subchunk. We precompute the size of them.\n     */\n    var audioSize = samples.length * 2; // We use 16-bit samples, so we have (2 * sampleLength) bytes.\n    var fmtSize = 24; // Byte size of the fmt subchunk: 24 bytes that the audio information that we'll set below.\n    var dataSize = 8 + audioSize; // Byte size of the data subchunk: raw sound data plus 8 bytes for the subchunk descriptions.\n    var totalByteSize = 12 + fmtSize + dataSize; // Byte size of the whole file, including the chunk header / descriptor.\n    // create DataView object to write byte values into\n    var buffer = new ArrayBuffer(totalByteSize); // buffer to write the chunk values in.\n    var view = new DataView(buffer);\n    /**\n     * Start writing the .wav file. We write top to bottom, so byte offset (first numeric argument) increases strictly.\n     */\n    // RIFF header\n    writeString(view, 0, 'RIFF'); // At offset 0, write the letters \"RIFF\"\n    view.setUint32(4, fmtSize + dataSize, true); // At offset 4, write the size of fmt and data chunk size combined.\n    writeString(view, 8, 'WAVE'); // At offset 8, write the format type \"WAVE\"\n    // fmt subchunk\n    writeString(view, 12, 'fmt '); //chunkdId 'fmt '\n    view.setUint32(16, fmtSize - 8, true); // fmt subchunk size below this value. We set 8 bytes already, so subtract 8 bytes from fmtSize.\n    view.setUint16(20, 1, true); // Audio format code, which is 1 for PCM.\n    view.setUint16(22, 1, true); // Number of audio channels. We use mono, ie 1.\n    view.setUint32(24, exportSampleRate, true); // Sample rate of the audio file.\n    view.setUint32(28, exportSampleRate * 2, true); // Data rate, or # of data bytes per second. Since each sample is 2 bytes, this is 2 * sampleRate.\n    view.setUint16(32, 2, true); // block align, # of bytes per sample including all channels, ie. 2 bytes.\n    view.setUint16(34, 16, true); // bits per sample, ie. 16 bits\n    // data subchunk\n    writeString(view, 36, 'data'); // write the chunkId 'data'\n    view.setUint32(40, audioSize, true); // Audio byte size\n    floatTo16BitPCM(view, 44, samples); // raw pcm values then go here.\n    return view;\n};\n/**\n * Given arrays of raw pcm audio, downsamples the audio to desired sample rate and encodes it to a wav audio file.\n *\n * @param recBuffer {Float32Array[]} - 2d float array containing the recorded raw audio\n * @param recLength {number} - total length of recorded audio\n * @param recordSampleRate {number} - sample rate of the recorded audio\n * @param exportSampleRate {number} - desired sample rate of the exported file\n */\nvar exportBuffer = function (recBuffer, recLength, recordSampleRate, exportSampleRate) {\n    var mergedBuffers = mergeBuffers(recBuffer, recLength);\n    var downsampledBuffer = downsampleBuffer(mergedBuffers, recordSampleRate, exportSampleRate);\n    var encodedWav = encodeWAV(downsampledBuffer, exportSampleRate);\n    var audioBlob = new Blob([encodedWav], {\n        type: RECORDER_EXPORT_MIME_TYPE,\n    });\n    return audioBlob;\n};\nvar logger = new Logger('AudioRecorder');\nvar AudioRecorder = /** @class */ (function () {\n    function AudioRecorder(options) {\n        // input mic stream is stored in a buffer\n        this.streamBuffer = [];\n        this.streamBufferLength = 0;\n        this.recording = false;\n        this.options = options;\n    }\n    /**\n     * This must be called first to enable audio context and request microphone access.\n     * Once access granted, it connects all the necessary audio nodes to the context so that it can begin recording or playing.\n     */\n    AudioRecorder.prototype.init = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!browserOrNode().isBrowser) return [3 /*break*/, 2];\n                        window.AudioContext = window.AudioContext || window.webkitAudioContext;\n                        this.audioContext = new AudioContext();\n                        return [4 /*yield*/, navigator.mediaDevices\n                                .getUserMedia({ audio: true })\n                                .then(function (stream) {\n                                _this.audioSupported = true;\n                                _this.setupAudioNodes(stream);\n                            })\n                                .catch(function () {\n                                _this.audioSupported = false;\n                                return Promise.reject('Audio is not supported');\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.audioSupported = false;\n                        return [2 /*return*/, Promise.reject('Audio is not supported')];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Setup audio nodes after successful `init`.\n     */\n    AudioRecorder.prototype.setupAudioNodes = function (stream) {\n        return __awaiter(this, void 0, void 0, function () {\n            var err_1, sourceNode, processorNode, analyserNode;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.audioContext.resume()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_1 = _a.sent();\n                        logger.error(err_1);\n                        return [3 /*break*/, 3];\n                    case 3:\n                        sourceNode = this.audioContext.createMediaStreamSource(stream);\n                        processorNode = this.audioContext.createScriptProcessor(4096, 1, 1);\n                        processorNode.onaudioprocess = function (audioProcessingEvent) {\n                            if (!_this.recording)\n                                return;\n                            var stream = audioProcessingEvent.inputBuffer.getChannelData(0);\n                            _this.streamBuffer.push(new Float32Array(stream)); // set to a copy of the stream\n                            _this.streamBufferLength += stream.length;\n                            _this.analyse();\n                        };\n                        analyserNode = this.audioContext.createAnalyser();\n                        analyserNode.minDecibels = FFT_MIN_DECIBELS;\n                        analyserNode.maxDecibels = FFT_MAX_DECIBELS;\n                        analyserNode.smoothingTimeConstant = FFT_SMOOTHING_TIME_CONSTANT;\n                        sourceNode.connect(analyserNode);\n                        analyserNode.connect(processorNode);\n                        processorNode.connect(sourceNode.context.destination);\n                        this.analyserNode = analyserNode;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Start recording audio and listen for silence.\n     *\n     * @param onSilence {SilenceHandler} - called whenever silence is detected\n     * @param visualizer {Visualizer} - called with audio data on each audio process to be used for visualization.\n     */\n    AudioRecorder.prototype.startRecording = function (onSilence, visualizer) {\n        return __awaiter(this, void 0, void 0, function () {\n            var context, err_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.recording || !this.audioSupported)\n                            return [2 /*return*/];\n                        this.onSilence = onSilence || function () { };\n                        this.visualizer = visualizer || function () { };\n                        context = this.audioContext;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, context.resume()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_2 = _a.sent();\n                        logger.error(err_2);\n                        return [3 /*break*/, 4];\n                    case 4:\n                        this.start = Date.now();\n                        this.recording = true;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Pause recording\n     */\n    AudioRecorder.prototype.stopRecording = function () {\n        if (!this.audioSupported)\n            return;\n        this.recording = false;\n    };\n    /**\n     * Pause recording and clear audio buffer\n     */\n    AudioRecorder.prototype.clear = function () {\n        this.stopRecording();\n        this.streamBufferLength = 0;\n        this.streamBuffer = [];\n    };\n    /**\n     * Plays given audioStream with audioContext\n     *\n     * @param buffer {Uint8Array} - audioStream to be played\n     */\n    AudioRecorder.prototype.play = function (buffer) {\n        var _this = this;\n        if (!buffer || !this.audioSupported)\n            return;\n        var myBlob = new Blob([buffer]);\n        return new Promise(function (res, rej) {\n            var fileReader = new FileReader();\n            fileReader.onload = function () {\n                if (_this.playbackSource)\n                    _this.playbackSource.disconnect(); // disconnect previous playback source\n                _this.playbackSource = _this.audioContext.createBufferSource();\n                var successCallback = function (buf) {\n                    _this.playbackSource.buffer = buf;\n                    _this.playbackSource.connect(_this.audioContext.destination);\n                    _this.playbackSource.onended = function () {\n                        return res();\n                    };\n                    _this.playbackSource.start(0);\n                };\n                var errorCallback = function (err) {\n                    return rej(err);\n                };\n                _this.audioContext.decodeAudioData(fileReader.result, successCallback, errorCallback);\n            };\n            fileReader.onerror = function () { return rej(); };\n            fileReader.readAsArrayBuffer(myBlob);\n        });\n    };\n    /**\n     * Stops playing audio if there's a playback source connected.\n     */\n    AudioRecorder.prototype.stop = function () {\n        if (this.playbackSource) {\n            this.playbackSource.stop();\n        }\n    };\n    /**\n     * Called after each audioProcess. Check for silence and give fft time domain data to visualizer.\n     */\n    AudioRecorder.prototype.analyse = function () {\n        if (!this.audioSupported)\n            return;\n        var analyser = this.analyserNode;\n        analyser.fftSize = FFT_SIZE;\n        var bufferLength = analyser.fftSize;\n        var dataArray = new Uint8Array(bufferLength);\n        var amplitude = this.options.amplitude;\n        var time = this.options.time;\n        analyser.getByteTimeDomainData(dataArray);\n        this.visualizer(dataArray, bufferLength);\n        for (var i = 0; i < bufferLength; i++) {\n            // Normalize between -1 and 1.\n            var curr_value_time = dataArray[i] / 128 - 1.0;\n            if (curr_value_time > amplitude || curr_value_time < -1 * amplitude) {\n                this.start = Date.now();\n            }\n        }\n        var newtime = Date.now();\n        var elapsedTime = newtime - this.start;\n        if (elapsedTime > time) {\n            this.onSilence();\n        }\n    };\n    /**\n     * Encodes recorded buffer to a wav file and exports it to a blob.\n     *\n     * @param exportSampleRate {number} - desired sample rate of the exported buffer\n     */\n    AudioRecorder.prototype.exportWAV = function (exportSampleRate) {\n        if (exportSampleRate === void 0) { exportSampleRate = DEFAULT_EXPORT_SAMPLE_RATE; }\n        return __awaiter(this, void 0, void 0, function () {\n            var recordSampleRate, blob;\n            return __generator(this, function (_a) {\n                if (!this.audioSupported)\n                    return [2 /*return*/];\n                recordSampleRate = this.audioContext.sampleRate;\n                blob = exportBuffer(this.streamBuffer, this.streamBufferLength, recordSampleRate, exportSampleRate);\n                this.clear();\n                return [2 /*return*/, blob];\n            });\n        });\n    };\n    return AudioRecorder;\n}());\nvar visualize = function (dataArray, bufferLength, canvas) {\n    if (!canvas)\n        return;\n    if (!browserOrNode().isBrowser)\n        throw new Error('Visualization is not supported on non-browsers.');\n    var _a = canvas.getBoundingClientRect(), width = _a.width, height = _a.height;\n    // need to update the default canvas width and height\n    canvas.width = width;\n    canvas.height = height;\n    var canvasCtx = canvas.getContext('2d');\n    canvasCtx.fillStyle = 'white';\n    canvasCtx.clearRect(0, 0, width, height);\n    var draw = function () {\n        canvasCtx.fillRect(0, 0, width, height);\n        canvasCtx.lineWidth = 1;\n        var color = getComputedStyle(document.documentElement).getPropertyValue('--amplify-primary-color');\n        canvasCtx.strokeStyle = !color || color === '' ? '#ff9900' : color; // TODO: try separate css variable\n        canvasCtx.beginPath();\n        var sliceWidth = (width * 1.0) / bufferLength;\n        var x = 0;\n        for (var i = 0; i < bufferLength || i % 3 === 0; i++) {\n            var value = dataArray[i] / 128.0;\n            var y = (value * height) / 2;\n            if (i === 0) {\n                canvasCtx.moveTo(x, y);\n            }\n            else {\n                canvasCtx.lineTo(x, y);\n            }\n            x += sliceWidth;\n        }\n        canvasCtx.lineTo(canvas.width, canvas.height / 2);\n        canvasCtx.stroke();\n    };\n    // Register our draw function with requestAnimationFrame.\n    requestAnimationFrame(draw);\n};\nvar amplifyChatbotCss = \".bot .dot{background-color:var(--bot-dot-color)}.user .dot{background-color:var(--user-dot-color)}.dot-flashing{width:2.625rem}.dot-flashing .dot{display:inline-block;width:0.625rem;height:0.625rem;border-radius:10rem;opacity:0.65}.dot-flashing .left{-webkit-animation:dot-flashing 1s infinite alternate;animation:dot-flashing 1s infinite alternate;-webkit-animation-delay:0s;animation-delay:0s}.dot-flashing .middle{margin-left:0.375rem;margin-right:0.375rem;-webkit-animation:dot-flashing 1s infinite linear alternate;animation:dot-flashing 1s infinite linear alternate;-webkit-animation-delay:0.5s;animation-delay:0.5s}.dot-flashing .right{-webkit-animation:dot-flashing 1s infinite alternate;animation:dot-flashing 1s infinite alternate;-webkit-animation-delay:1s;animation-delay:1s}@-webkit-keyframes dot-flashing{0%{opacity:0.65}50%,100%{opacity:0.1}}@keyframes dot-flashing{0%{opacity:0.65}50%,100%{opacity:0.1}}:host{--width:28.75rem;--height:37.5rem;--header-color:var(--amplify-secondary-color);--header-size:var(--amplify-text-lg);--bot-background-color:rgb(230, 230, 230);--bot-text-color:black;--bot-dot-color:var(--bot-text-color);--user-background-color:var(--amplify-blue);--user-text-color:var(--amplify-white);--user-dot-color:var(--user-text-color)}.amplify-chatbot{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;background-color:var(--background-color);border-radius:0.375rem;-webkit-box-shadow:0.0625rem 0rem 0.25rem 0 rgba(0, 0, 0, 0.15);box-shadow:0.0625rem 0rem 0.25rem 0 rgba(0, 0, 0, 0.15);-webkit-box-sizing:border-box;box-sizing:border-box;font-family:var(--amplify-font-family);margin-bottom:1rem;width:100%;height:var(--height);max-width:var(--width)}@media (min-width: 672px){.amplify-chatbot{width:var(--width)}}.header{padding:1.25rem 0.375rem 1.25rem 0.375rem;color:var(--header-color);font-size:var(--header-size);font-weight:bold;text-align:center;word-wrap:break-word}.body{border-top:0.0625rem solid rgba(0, 0, 0, 0.05);padding:1.5rem 1rem 0 1rem;display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-direction:column;flex-direction:column;overflow:auto}.bubble{max-width:100%;padding:0.8em 1.4em;text-align:left;word-wrap:break-word;margin-bottom:0.625rem}.bot{margin-right:auto;background-color:var(--bot-background-color);color:var(--bot-text-color);border-radius:1.5rem 1.5rem 1.5rem 0}.user{margin-left:auto;background-color:var(--user-background-color);color:var(--user-text-color);border-radius:1.5rem 1.5rem 0 1.5rem}.footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;border-top:0.062rem solid rgba(0, 0, 0, 0.05);padding-right:0.625rem;min-height:3.125rem}.footer amplify-input{--border:none;--margin:0;-ms-flex-positive:1;flex-grow:1}canvas{margin-left:0.625rem;margin-right:0.625rem;-ms-flex-positive:1;flex-grow:1;height:3.125rem}.icon-button{--icon-height:1.25rem;--icon-fill:var(--amplify-primary-color);--padding:0.625rem;--width:auto}\";\n// enum for possible bot states\nvar ChatState;\n(function (ChatState) {\n    ChatState[ChatState[\"Initial\"] = 0] = \"Initial\";\n    ChatState[ChatState[\"Listening\"] = 1] = \"Listening\";\n    ChatState[ChatState[\"SendingText\"] = 2] = \"SendingText\";\n    ChatState[ChatState[\"SendingVoice\"] = 3] = \"SendingVoice\";\n    ChatState[ChatState[\"Error\"] = 4] = \"Error\";\n})(ChatState || (ChatState = {}));\n// Message types\nvar MessageFrom;\n(function (MessageFrom) {\n    MessageFrom[\"Bot\"] = \"bot\";\n    MessageFrom[\"User\"] = \"user\";\n})(MessageFrom || (MessageFrom = {}));\n// Error types\nvar ChatErrorType;\n(function (ChatErrorType) {\n    ChatErrorType[ChatErrorType[\"Recoverable\"] = 0] = \"Recoverable\";\n    ChatErrorType[ChatErrorType[\"Unrecoverable\"] = 1] = \"Unrecoverable\";\n})(ChatErrorType || (ChatErrorType = {}));\nvar AmplifyChatbot = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /** Clear messages when conversation finishes */\n        this.clearOnComplete = false;\n        /** Continue listening to users after they send the message */\n        this.conversationModeOn = false;\n        /** Text placed in the top header */\n        this.botTitle = Translations.CHATBOT_TITLE;\n        /** Whether voice chat is enabled */\n        this.voiceEnabled = false;\n        /** Whether text chat is enabled */\n        this.textEnabled = true;\n        /** Amount of silence (in ms) to wait for */\n        this.silenceTime = 1500;\n        /** Noise threshold between -1 and 1. Anything below is considered a silence. */\n        this.silenceThreshold = 0.2;\n        /** Messages in current session */\n        this.messages = [];\n        /** Text input box value  */\n        this.text = '';\n        /** Current app state */\n        this.chatState = ChatState.Initial;\n        /**\n         * Rendering methods\n         */\n        this.messageJSX = function (messages) {\n            var messageList = messages.map(function (message) { return h(\"div\", { class: \"bubble \" + message.from }, message.content); });\n            if (_this.chatState === ChatState.SendingText || _this.chatState === ChatState.SendingVoice) {\n                // if waiting for voice message, show animation on user side because app is waiting for transcript. Else put it on bot side.\n                var client = _this.chatState === ChatState.SendingText ? MessageFrom.Bot : MessageFrom.User;\n                messageList.push(h(\"div\", { class: \"bubble \" + client }, h(\"div\", { class: \"dot-flashing \" + client }, h(\"span\", { class: \"dot left\" }), h(\"span\", { class: \"dot middle\" }), h(\"span\", { class: \"dot right\" }))));\n            }\n            return messageList;\n        };\n        this.chatCompleted = createEvent(this, \"chatCompleted\", 7);\n    }\n    // Occurs when user presses enter in input box\n    class_1.prototype.submitHandler = function (_event) {\n        this.sendTextMessage();\n    };\n    /**\n     * Lifecycle functions\n     */\n    class_1.prototype.componentWillLoad = function () {\n        if (!Interactions || typeof Interactions.onComplete !== 'function') {\n            throw new Error(NO_INTERACTIONS_MODULE_FOUND);\n        }\n        this.validateProps();\n    };\n    class_1.prototype.componentDidRender = function () {\n        // scroll to the bottom if necessary\n        var body = this.element.shadowRoot.querySelector('.body');\n        body.scrollTop = body.scrollHeight;\n    };\n    class_1.prototype.validateProps = function () {\n        var _this = this;\n        if (!this.voiceEnabled && !this.textEnabled) {\n            this.setError(Translations.CHAT_DISABLED_ERROR, ChatErrorType.Unrecoverable);\n            return;\n        }\n        else if (!this.botName) {\n            this.setError(Translations.NO_BOT_NAME_ERROR, ChatErrorType.Unrecoverable);\n            return;\n        }\n        if (this.welcomeMessage)\n            this.appendToChat(this.welcomeMessage, MessageFrom.Bot);\n        // Initialize AudioRecorder if voice is enabled\n        if (this.voiceEnabled) {\n            this.audioRecorder = new AudioRecorder({\n                time: this.silenceTime,\n                amplitude: this.silenceThreshold,\n            });\n            this.audioRecorder.init().catch(function (err) {\n                _this.setError(err, ChatErrorType.Recoverable);\n            });\n        }\n        // Callback function to be called after chat is completed\n        var onComplete = function (err, data) {\n            _this.chatCompleted.emit({\n                data: data,\n                err: err,\n            });\n            if (_this.clearOnComplete) {\n                _this.reset();\n            }\n            else {\n                _this.chatState = ChatState.Initial;\n            }\n        };\n        try {\n            Interactions.onComplete(this.botName, onComplete);\n        }\n        catch (err) {\n            this.setError(err, ChatErrorType.Unrecoverable);\n        }\n    };\n    /**\n     * Handlers\n     */\n    class_1.prototype.handleMicButton = function () {\n        var _this = this;\n        if (this.chatState !== ChatState.Initial)\n            return;\n        this.audioRecorder.stop();\n        this.chatState = ChatState.Listening;\n        this.audioRecorder.startRecording(function () { return _this.handleSilence(); }, function (data, length) { return _this.visualizer(data, length); });\n    };\n    class_1.prototype.handleSilence = function () {\n        var _this = this;\n        this.chatState = ChatState.SendingVoice;\n        this.audioRecorder.stopRecording();\n        this.audioRecorder.exportWAV().then(function (blob) {\n            _this.sendVoiceMessage(blob);\n        });\n    };\n    class_1.prototype.handleTextChange = function (event) {\n        var target = event.target;\n        this.text = target.value;\n    };\n    class_1.prototype.handleCancelButton = function () {\n        this.audioRecorder.clear();\n        this.chatState = ChatState.Initial;\n    };\n    class_1.prototype.handleToastClose = function (errorType) {\n        this.error = undefined; // clear error\n        // if error is recoverable, reset the app state to initial\n        if (errorType === ChatErrorType.Recoverable) {\n            this.chatState = ChatState.Initial;\n        }\n    };\n    /**\n     * Visualization\n     */\n    class_1.prototype.visualizer = function (dataArray, bufferLength) {\n        var canvas = this.element.shadowRoot.querySelector('canvas');\n        visualize(dataArray, bufferLength, canvas);\n    };\n    /**\n     * Interactions helpers\n     */\n    class_1.prototype.sendTextMessage = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var text, response, err_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.text.length === 0 || this.chatState !== ChatState.Initial)\n                            return [2 /*return*/];\n                        text = this.text;\n                        this.text = '';\n                        this.appendToChat(text, MessageFrom.User);\n                        this.chatState = ChatState.SendingText;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Interactions.send(this.botName, text)];\n                    case 2:\n                        response = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_3 = _a.sent();\n                        this.setError(err_3, ChatErrorType.Recoverable);\n                        return [2 /*return*/];\n                    case 4:\n                        if (response.message) {\n                            this.appendToChat(response.message, MessageFrom.Bot);\n                        }\n                        this.chatState = ChatState.Initial;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.sendVoiceMessage = function (audioInput) {\n        return __awaiter(this, void 0, void 0, function () {\n            var interactionsMessage, response, err_4, dialogState;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        interactionsMessage = {\n                            content: audioInput,\n                            options: {\n                                messageType: 'voice',\n                            },\n                        };\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Interactions.send(this.botName, interactionsMessage)];\n                    case 2:\n                        response = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_4 = _a.sent();\n                        this.setError(err_4, ChatErrorType.Recoverable);\n                        return [2 /*return*/];\n                    case 4:\n                        this.chatState = ChatState.Initial;\n                        dialogState = response.dialogState;\n                        if (response.inputTranscript)\n                            this.appendToChat(response.inputTranscript, MessageFrom.User);\n                        this.appendToChat(response.message, MessageFrom.Bot);\n                        return [4 /*yield*/, this.audioRecorder\n                                .play(response.audioStream)\n                                .then(function () {\n                                // if conversationMode is on, chat is incomplete, and mic button isn't pressed yet, resume listening.\n                                if (_this.conversationModeOn &&\n                                    dialogState !== 'Fulfilled' &&\n                                    dialogState !== 'Failed' &&\n                                    _this.chatState === ChatState.Initial) {\n                                    _this.handleMicButton();\n                                }\n                            })\n                                .catch(function (err) { return _this.setError(err, ChatErrorType.Recoverable); })];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.appendToChat = function (content, from) {\n        this.messages = __spreadArrays(this.messages, [\n            {\n                content: content,\n                from: from,\n            },\n        ]);\n    };\n    /**\n     * State control methods\n     */\n    class_1.prototype.setError = function (error, errorType) {\n        var message = typeof error === 'string' ? error : error.message;\n        this.chatState = ChatState.Error;\n        this.error = { message: message, errorType: errorType };\n    };\n    class_1.prototype.reset = function () {\n        this.chatState = ChatState.Initial;\n        this.text = '';\n        this.error = undefined;\n        this.messages = [];\n        if (this.welcomeMessage)\n            this.appendToChat(this.welcomeMessage, MessageFrom.Bot);\n        this.audioRecorder && this.audioRecorder.clear();\n    };\n    class_1.prototype.listeningFooterJSX = function () {\n        var _this = this;\n        var visualization = h(\"canvas\", { height: \"50\" });\n        var cancelButton = (h(\"amplify-button\", { \"data-test\": \"chatbot-cancel-button\", handleButtonClick: function () { return _this.handleCancelButton(); }, class: \"icon-button\", variant: \"icon\", icon: \"ban\" }));\n        return [visualization, cancelButton];\n    };\n    class_1.prototype.footerJSX = function () {\n        var _this = this;\n        if (this.chatState === ChatState.Listening)\n            return this.listeningFooterJSX();\n        var inputPlaceholder = this.textEnabled\n            ? Translations.TEXT_INPUT_PLACEHOLDER\n            : Translations.VOICE_INPUT_PLACEHOLDER;\n        var textInput = (h(\"amplify-input\", { placeholder: I18n.get(inputPlaceholder), description: \"text\", handleInputChange: function (evt) { return _this.handleTextChange(evt); }, value: this.text, disabled: this.chatState === ChatState.Error || !this.textEnabled }));\n        var micButton = this.voiceEnabled && (h(\"amplify-button\", { \"data-test\": \"chatbot-mic-button\", handleButtonClick: function () { return _this.handleMicButton(); }, class: \"icon-button\", variant: \"icon\", icon: \"microphone\", disabled: this.chatState === ChatState.Error || this.chatState !== ChatState.Initial }));\n        var sendButton = this.textEnabled && (h(\"amplify-button\", { \"data-test\": \"chatbot-send-button\", class: \"icon-button\", variant: \"icon\", icon: \"send\", handleButtonClick: function () { return _this.sendTextMessage(); }, disabled: this.chatState === ChatState.Error || this.chatState !== ChatState.Initial }));\n        return [textInput, micButton, sendButton];\n    };\n    class_1.prototype.errorToast = function () {\n        var _this = this;\n        if (!this.error)\n            return;\n        var _a = this.error, message = _a.message, errorType = _a.errorType;\n        return h(\"amplify-toast\", { message: I18n.get(message), handleClose: function () { return _this.handleToastClose(errorType); } });\n    };\n    class_1.prototype.render = function () {\n        return (h(Host, null, h(\"div\", { class: \"amplify-chatbot\" }, h(\"slot\", { name: \"header\" }, h(\"div\", { class: \"header\", \"data-test\": \"chatbot-header\" }, I18n.get(this.botTitle))), h(\"div\", { class: \"body\", \"data-test\": \"chatbot-body\" }, this.messageJSX(this.messages)), h(\"div\", { class: \"footer\", \"data-test\": \"chatbot-footer\" }, this.footerJSX()), this.errorToast())));\n    };\n    Object.defineProperty(class_1.prototype, \"element\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    return class_1;\n}());\nAmplifyChatbot.style = amplifyChatbotCss;\nexport { AmplifyChatbot as amplify_chatbot };\n"]},"metadata":{},"sourceType":"module"}