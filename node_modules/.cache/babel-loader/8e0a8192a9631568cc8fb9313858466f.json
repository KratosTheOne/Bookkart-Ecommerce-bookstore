{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@aws-amplify/core\");\n\nvar zen_observable_ts_1 = __importDefault(require(\"zen-observable-ts\"));\n\nvar ReachabilityNavigator =\n/** @class */\nfunction () {\n  function ReachabilityNavigator() {}\n\n  ReachabilityNavigator.prototype.networkMonitor = function (netInfo) {\n    if (core_1.browserOrNode().isNode) {\n      return zen_observable_ts_1.default.from([{\n        online: true\n      }]);\n    }\n\n    var globalObj = core_1.isWebWorker() ? self : window;\n    return new zen_observable_ts_1.default(function (observer) {\n      observer.next({\n        online: globalObj.navigator.onLine\n      });\n\n      var notifyOnline = function () {\n        return observer.next({\n          online: true\n        });\n      };\n\n      var notifyOffline = function () {\n        return observer.next({\n          online: false\n        });\n      };\n\n      globalObj.addEventListener('online', notifyOnline);\n      globalObj.addEventListener('offline', notifyOffline);\n\n      ReachabilityNavigator._observers.push(observer);\n\n      return function () {\n        globalObj.removeEventListener('online', notifyOnline);\n        globalObj.removeEventListener('offline', notifyOffline);\n        ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) {\n          return _observer !== observer;\n        });\n      };\n    });\n  }; // expose observers to simulate offline mode for integration testing\n\n\n  ReachabilityNavigator._observerOverride = function (status) {\n    var e_1, _a;\n\n    var _loop_1 = function (observer) {\n      if (observer.closed) {\n        ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) {\n          return _observer !== observer;\n        });\n        return \"continue\";\n      }\n\n      observer.next(status);\n    };\n\n    try {\n      for (var _b = __values(ReachabilityNavigator._observers), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var observer = _c.value;\n\n        _loop_1(observer);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  ReachabilityNavigator._observers = [];\n  return ReachabilityNavigator;\n}();\n\nexports.default = ReachabilityNavigator;","map":{"version":3,"sources":["../../src/Util/Reachability.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AAMA,IAAA,qBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,qBAAA,GAAA,CA8CC;;AAzCA,EAAA,qBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,OAAf,EAA4B;AAC3B,QAAI,MAAA,CAAA,aAAA,GAAgB,MAApB,EAA4B;AAC3B,aAAO,mBAAA,CAAA,OAAA,CAAW,IAAX,CAAgB,CAAC;AAAE,QAAA,MAAM,EAAE;AAAV,OAAD,CAAhB,CAAP;AACA;;AAED,QAAM,SAAS,GAAG,MAAA,CAAA,WAAA,KAAgB,IAAhB,GAAuB,MAAzC;AAEA,WAAO,IAAI,mBAAA,CAAA,OAAJ,CAAe,UAAA,QAAA,EAAQ;AAC7B,MAAA,QAAQ,CAAC,IAAT,CAAc;AAAE,QAAA,MAAM,EAAE,SAAS,CAAC,SAAV,CAAoB;AAA9B,OAAd;;AAEA,UAAM,YAAY,GAAG,YAAA;AAAM,eAAA,QAAQ,CAAC,IAAT,CAAc;AAAE,UAAA,MAAM,EAAtB;AAAc,SAAd,CAAA;AAA+B,OAA1D;;AACA,UAAM,aAAa,GAAG,YAAA;AAAM,eAAA,QAAQ,CAAC,IAAT,CAAc;AAAE,UAAA,MAAM,EAAtB;AAAc,SAAd,CAAA;AAAgC,OAA5D;;AAEA,MAAA,SAAS,CAAC,gBAAV,CAA2B,QAA3B,EAAqC,YAArC;AACA,MAAA,SAAS,CAAC,gBAAV,CAA2B,SAA3B,EAAsC,aAAtC;;AAEA,MAAA,qBAAqB,CAAC,UAAtB,CAAiC,IAAjC,CAAsC,QAAtC;;AAEA,aAAO,YAAA;AACN,QAAA,SAAS,CAAC,mBAAV,CAA8B,QAA9B,EAAwC,YAAxC;AACA,QAAA,SAAS,CAAC,mBAAV,CAA8B,SAA9B,EAAyC,aAAzC;AAEA,QAAA,qBAAqB,CAAC,UAAtB,GAAmC,qBAAqB,CAAC,UAAtB,CAAiC,MAAjC,CAClC,UAAA,SAAA,EAAS;AAAI,iBAAA,SAAS,KAAT,QAAA;AAAsB,SADD,CAAnC;AAGA,OAPD;AAQA,KAnBM,CAAP;AAoBA,GA3BD,CALD,CAkCC;;;AACe,EAAA,qBAAA,CAAA,iBAAA,GAAf,UAAiC,MAAjC,EAAsD;;;4BAC1C,Q,EAAQ;AAClB,UAAI,QAAQ,CAAC,MAAb,EAAqB;AACpB,QAAA,qBAAqB,CAAC,UAAtB,GAAmC,qBAAqB,CAAC,UAAtB,CAAiC,MAAjC,CAClC,UAAA,SAAA,EAAS;AAAI,iBAAA,SAAS,KAAT,QAAA;AAAsB,SADD,CAAnC;;AAIA;;AACD,MAAA,QAAQ,CAAC,IAAT,CAAc,MAAd;;;;AAPD,WAAuB,IAAA,EAAA,GAAA,QAAA,CAAA,qBAAqB,CAAC,UAAtB,CAAA,EAAgC,EAAA,GAAA,EAAA,CAAA,IAAA,EAAvD,EAAuD,CAAA,EAAA,CAAA,IAAvD,EAAuD,EAAA,GAAA,EAAA,CAAA,IAAA,EAAvD,EAAuD;AAAlD,YAAM,QAAQ,GAAA,EAAA,CAAA,KAAd;;gBAAM,Q;AAQV;;;;;;;;;;;;AACD,GAVc;;AAlCA,EAAA,qBAAA,CAAA,UAAA,GAEX,EAFW;AA6ChB,SAAA,qBAAA;AAAC,CA9CD,EAAA;;kBAAqB,qB","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@aws-amplify/core\");\nvar zen_observable_ts_1 = __importDefault(require(\"zen-observable-ts\"));\nvar ReachabilityNavigator = /** @class */ (function () {\n    function ReachabilityNavigator() {\n    }\n    ReachabilityNavigator.prototype.networkMonitor = function (netInfo) {\n        if (core_1.browserOrNode().isNode) {\n            return zen_observable_ts_1.default.from([{ online: true }]);\n        }\n        var globalObj = core_1.isWebWorker() ? self : window;\n        return new zen_observable_ts_1.default(function (observer) {\n            observer.next({ online: globalObj.navigator.onLine });\n            var notifyOnline = function () { return observer.next({ online: true }); };\n            var notifyOffline = function () { return observer.next({ online: false }); };\n            globalObj.addEventListener('online', notifyOnline);\n            globalObj.addEventListener('offline', notifyOffline);\n            ReachabilityNavigator._observers.push(observer);\n            return function () {\n                globalObj.removeEventListener('online', notifyOnline);\n                globalObj.removeEventListener('offline', notifyOffline);\n                ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) { return _observer !== observer; });\n            };\n        });\n    };\n    // expose observers to simulate offline mode for integration testing\n    ReachabilityNavigator._observerOverride = function (status) {\n        var e_1, _a;\n        var _loop_1 = function (observer) {\n            if (observer.closed) {\n                ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) { return _observer !== observer; });\n                return \"continue\";\n            }\n            observer.next(status);\n        };\n        try {\n            for (var _b = __values(ReachabilityNavigator._observers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var observer = _c.value;\n                _loop_1(observer);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    ReachabilityNavigator._observers = [];\n    return ReachabilityNavigator;\n}());\nexports.default = ReachabilityNavigator;\n//# sourceMappingURL=Reachability.js.map"]},"metadata":{},"sourceType":"script"}