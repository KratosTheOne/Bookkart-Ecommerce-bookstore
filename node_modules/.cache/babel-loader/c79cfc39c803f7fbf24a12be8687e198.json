{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nexport var serializerMiddleware = function (options, serializer) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var logger, inputFilterSensitiveLog, request;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              logger = context.logger, inputFilterSensitiveLog = context.inputFilterSensitiveLog;\n\n              if (typeof (logger === null || logger === void 0 ? void 0 : logger.info) === \"function\") {\n                logger.info({\n                  input: inputFilterSensitiveLog(args.input)\n                });\n              }\n\n              return [4\n              /*yield*/\n              , serializer(args.input, options)];\n\n            case 1:\n              request = _a.sent();\n\n              if (typeof (logger === null || logger === void 0 ? void 0 : logger.debug) === \"function\") {\n                logger.debug({\n                  httpRequest: request\n                });\n              }\n\n              return [2\n              /*return*/\n              , next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};","map":{"version":3,"sources":["../../src/serializerMiddleware.ts"],"names":[],"mappings":";AAUA,OAAO,IAAM,oBAAoB,GAAG,UAClC,OADkC,EAElC,UAFkC,EAEc;AACT,SAAA,UACvC,IADuC,EAEvC,OAFuC,EAEP;AACI,WAAA,UACpC,IADoC,EACE;AAAA,aAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AAE9B,cAAA,MAAM,GAA8B,OAAO,CAArC,MAAN,EAAQ,uBAAuB,GAAK,OAAO,CAAZ,uBAA/B;;AAER,kBAAI,QAAO,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,IAAf,MAAwB,UAA5B,EAAwC;AACtC,gBAAA,MAAM,CAAC,IAAP,CAAY;AACV,kBAAA,KAAK,EAAE,uBAAuB,CAAC,IAAI,CAAC,KAAN;AADpB,iBAAZ;AAGD;;AAEe,qBAAA,CAAA;AAAA;AAAA,gBAAM,UAAU,CAAC,IAAI,CAAC,KAAN,EAAa,OAAb,CAAhB,CAAA;;;AAAV,cAAA,OAAO,GAAG,EAAA,CAAA,IAAA,EAAV;;AAEN,kBAAI,QAAO,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,KAAf,MAAyB,UAA7B,EAAyC;AACvC,gBAAA,MAAM,CAAC,KAAP,CAAa;AACX,kBAAA,WAAW,EAAE;AADF,iBAAb;AAGD;;AAED,qBAAA,CAAA;AAAA;AAAA,gBAAO,IAAI,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,IADM,CAAA,EACF;AACP,gBAAA,OAAO,EAAA;AADA,eADE,CAAA,CAAX,CAAA;;;OAlBsC,CAAA;AADF,KAAA;AAHG,GAAA;AA0BxC,CA7BM","sourcesContent":["import {\n  EndpointBearer,\n  HandlerExecutionContext,\n  RequestSerializer,\n  SerializeHandler,\n  SerializeHandlerArguments,\n  SerializeHandlerOutput,\n  SerializeMiddleware,\n} from \"@aws-sdk/types\";\n\nexport const serializerMiddleware = <Input extends object, Output extends object, RuntimeUtils extends EndpointBearer>(\n  options: RuntimeUtils,\n  serializer: RequestSerializer<any, RuntimeUtils>\n): SerializeMiddleware<Input, Output> => (\n  next: SerializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): SerializeHandler<Input, Output> => async (\n  args: SerializeHandlerArguments<Input>\n): Promise<SerializeHandlerOutput<Output>> => {\n  const { logger, inputFilterSensitiveLog } = context;\n\n  if (typeof logger?.info === \"function\") {\n    logger.info({\n      input: inputFilterSensitiveLog(args.input),\n    });\n  }\n\n  const request = await serializer(args.input, options);\n\n  if (typeof logger?.debug === \"function\") {\n    logger.debug({\n      httpRequest: request,\n    });\n  }\n\n  return next({\n    ...args,\n    request,\n  });\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}