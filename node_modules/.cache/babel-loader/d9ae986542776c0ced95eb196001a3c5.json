{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutObjectAclOutput, PutObjectAclRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutObjectAclCommand, serializeAws_restXmlPutObjectAclCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Uses the <code>acl</code> subresource to set the access control list (ACL) permissions\n *          for a new or existing object in an S3 bucket. You must have <code>WRITE_ACP</code>\n *          permission to set the ACL of an object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#permissions\">What\n *             permissions can I grant?</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n *          <p>Depending on your application needs, you can choose to set\n *          the ACL on an object using either the request body or the headers. For example, if you have\n *          an existing application that updates a bucket ACL using the request body, you can continue\n *          to use that approach. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access Control List (ACL) Overview</a> in the <i>Amazon S3 Developer\n *             Guide</i>.</p>\n *\n *\n *\n *          <p>\n *             <b>Access Permissions</b>\n *          </p>\n *          <p>You can set access permissions using one of the following methods:</p>\n *          <ul>\n *             <li>\n *                <p>Specify a canned ACL with the <code>x-amz-acl</code> request header. Amazon S3 supports\n *                a set of predefined ACLs, known as canned ACLs. Each canned ACL has a predefined set\n *                of grantees and permissions. Specify the canned ACL name as the value of\n *                   <code>x-amz-ac</code>l. If you use this header, you cannot use other access\n *                control-specific headers in your request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned ACL</a>.</p>\n *             </li>\n *             <li>\n *                <p>Specify access permissions explicitly with the <code>x-amz-grant-read</code>,\n *                   <code>x-amz-grant-read-acp</code>, <code>x-amz-grant-write-acp</code>, and\n *                   <code>x-amz-grant-full-control</code> headers. When using these headers, you\n *                specify explicit access permissions and grantees (AWS accounts or Amazon S3 groups) who\n *                will receive the permission. If you use these ACL-specific headers, you cannot use\n *                   <code>x-amz-acl</code> header to set a canned ACL. These parameters map to the set\n *                of permissions that Amazon S3 supports in an ACL. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access Control List (ACL)\n *                Overview</a>.</p>\n *\n *                <p>You specify each grantee as a type=value pair, where the type is one of the\n *                following:</p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>id</code> – if the value specified is the canonical user ID of an AWS\n *                      account</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>uri</code> – if you are granting permissions to a predefined\n *                      group</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>emailAddress</code> – if the value specified is the email address of\n *                      an AWS account</p>\n *                      <note>\n *                         <p>Using email addresses to specify a grantee is only supported in the following AWS Regions: </p>\n *                         <ul>\n *                            <li>\n *                               <p>US East (N. Virginia)</p>\n *                            </li>\n *                            <li>\n *                               <p>US West (N. California)</p>\n *                            </li>\n *                            <li>\n *                               <p> US West (Oregon)</p>\n *                            </li>\n *                            <li>\n *                               <p> Asia Pacific (Singapore)</p>\n *                            </li>\n *                            <li>\n *                               <p>Asia Pacific (Sydney)</p>\n *                            </li>\n *                            <li>\n *                               <p>Asia Pacific (Tokyo)</p>\n *                            </li>\n *                            <li>\n *                               <p>Europe (Ireland)</p>\n *                            </li>\n *                            <li>\n *                               <p>South America (São Paulo)</p>\n *                            </li>\n *                         </ul>\n *                         <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> in the AWS General Reference.</p>\n *                      </note>\n *                   </li>\n *                </ul>\n *                <p>For example, the following <code>x-amz-grant-read</code> header grants list\n *                objects permission to the two AWS accounts identified by their email\n *                addresses.</p>\n *                <p>\n *                   <code>x-amz-grant-read: emailAddress=\"xyz@amazon.com\",\n *                   emailAddress=\"abc@amazon.com\" </code>\n *                </p>\n *\n *             </li>\n *          </ul>\n *          <p>You can use either a canned ACL or specify access permissions explicitly. You cannot do\n *          both.</p>\n *          <p>\n *             <b>Grantee Values</b>\n *          </p>\n *          <p>You can specify the person (grantee) to whom you're assigning access rights (using\n *          request elements) in the following ways:</p>\n *          <ul>\n *             <li>\n *                <p>By the person's ID:</p>\n *                <p>\n *                   <code><Grantee xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n *                   xsi:type=\"CanonicalUser\"><ID><>ID<></ID><DisplayName><>GranteesEmail<></DisplayName>\n *                   </Grantee></code>\n *                </p>\n *                <p>DisplayName is optional and ignored in the request.</p>\n *             </li>\n *             <li>\n *                <p>By URI:</p>\n *                <p>\n *                   <code><Grantee xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n *                   xsi:type=\"Group\"><URI><>http://acs.amazonaws.com/groups/global/AuthenticatedUsers<></URI></Grantee></code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>By Email address:</p>\n *                <p>\n *                   <code><Grantee xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n *                   xsi:type=\"AmazonCustomerByEmail\"><EmailAddress><>Grantees@email.com<></EmailAddress>lt;/Grantee></code>\n *                </p>\n *                <p>The grantee is resolved to the CanonicalUser and, in a response to a GET Object\n *                acl request, appears as the CanonicalUser.</p>\n *                <note>\n *                   <p>Using email addresses to specify a grantee is only supported in the following AWS Regions: </p>\n *                   <ul>\n *                      <li>\n *                         <p>US East (N. Virginia)</p>\n *                      </li>\n *                      <li>\n *                         <p>US West (N. California)</p>\n *                      </li>\n *                      <li>\n *                         <p> US West (Oregon)</p>\n *                      </li>\n *                      <li>\n *                         <p> Asia Pacific (Singapore)</p>\n *                      </li>\n *                      <li>\n *                         <p>Asia Pacific (Sydney)</p>\n *                      </li>\n *                      <li>\n *                         <p>Asia Pacific (Tokyo)</p>\n *                      </li>\n *                      <li>\n *                         <p>Europe (Ireland)</p>\n *                      </li>\n *                      <li>\n *                         <p>South America (São Paulo)</p>\n *                      </li>\n *                   </ul>\n *                   <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> in the AWS General Reference.</p>\n *                </note>\n *             </li>\n *          </ul>\n *          <p>\n *             <b>Versioning</b>\n *          </p>\n *          <p>The ACL of an object is set at the object version level. By default, PUT sets the ACL of\n *          the current version of an object. To set the ACL of a different version, use the\n *             <code>versionId</code> subresource.</p>\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html\">CopyObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutObjectAclCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutObjectAclCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutObjectAclCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutObjectAclCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutObjectAclCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutObjectAclRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutObjectAclOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutObjectAclCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutObjectAclCommand(input, context);\n  };\n\n  PutObjectAclCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutObjectAclCommand(output, context);\n  };\n\n  return PutObjectAclCommand;\n}($Command);\n\nexport { PutObjectAclCommand };","map":{"version":3,"sources":["../../../commands/PutObjectAclCommand.ts"],"names":[],"mappings":";AACA,SAAS,kBAAT,EAA6B,mBAA7B,QAAwD,oBAAxD;AACA,SACE,yCADF,EAEE,uCAFF,QAGO,0BAHP;AAIA,SAAS,uBAAT,QAAwC,qCAAxC;AACA,SAAS,cAAT,QAA+B,2BAA/B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoLG;;AACH,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAzC,CAKE;AACA;;;AAEA,WAAA,mBAAA,CAAqB,KAArB,EAAoD;AAApD,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAA+B,CAGlD;AACD;AAED;;AAEG;;;AACH,EAAA,mBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AACA,SAAK,eAAL,CAAqB,GAArB,CAAyB,uBAAuB,CAAC,aAAD,CAAhD;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,UAAnB;AACA,QAAM,WAAW,GAAG,qBAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,mBAAmB,CAAC,kBAJU;AAKvD,MAAA,wBAAwB,EAAE,kBAAkB,CAAC;AALU,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GA1BD;;AA4BQ,EAAA,mBAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,KAAlB,EAAmD,OAAnD,EAA0E;AACxE,WAAO,uCAAuC,CAAC,KAAD,EAAQ,OAAR,CAA9C;AACD,GAFO;;AAIA,EAAA,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAA4C,OAA5C,EAAmE;AACjE,WAAO,yCAAyC,CAAC,MAAD,EAAS,OAAT,CAAhD;AACD,GAFO;;AAMV,SAAA,mBAAA;AAAC,CAvDD,CAAyC,QAAzC,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { PutObjectAclOutput, PutObjectAclRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutObjectAclCommand, serializeAws_restXmlPutObjectAclCommand, } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Uses the <code>acl</code> subresource to set the access control list (ACL) permissions\n *          for a new or existing object in an S3 bucket. You must have <code>WRITE_ACP</code>\n *          permission to set the ACL of an object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#permissions\">What\n *             permissions can I grant?</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n *          <p>Depending on your application needs, you can choose to set\n *          the ACL on an object using either the request body or the headers. For example, if you have\n *          an existing application that updates a bucket ACL using the request body, you can continue\n *          to use that approach. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access Control List (ACL) Overview</a> in the <i>Amazon S3 Developer\n *             Guide</i>.</p>\n *\n *\n *\n *          <p>\n *             <b>Access Permissions</b>\n *          </p>\n *          <p>You can set access permissions using one of the following methods:</p>\n *          <ul>\n *             <li>\n *                <p>Specify a canned ACL with the <code>x-amz-acl</code> request header. Amazon S3 supports\n *                a set of predefined ACLs, known as canned ACLs. Each canned ACL has a predefined set\n *                of grantees and permissions. Specify the canned ACL name as the value of\n *                   <code>x-amz-ac</code>l. If you use this header, you cannot use other access\n *                control-specific headers in your request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned ACL</a>.</p>\n *             </li>\n *             <li>\n *                <p>Specify access permissions explicitly with the <code>x-amz-grant-read</code>,\n *                   <code>x-amz-grant-read-acp</code>, <code>x-amz-grant-write-acp</code>, and\n *                   <code>x-amz-grant-full-control</code> headers. When using these headers, you\n *                specify explicit access permissions and grantees (AWS accounts or Amazon S3 groups) who\n *                will receive the permission. If you use these ACL-specific headers, you cannot use\n *                   <code>x-amz-acl</code> header to set a canned ACL. These parameters map to the set\n *                of permissions that Amazon S3 supports in an ACL. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access Control List (ACL)\n *                Overview</a>.</p>\n *\n *                <p>You specify each grantee as a type=value pair, where the type is one of the\n *                following:</p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>id</code> – if the value specified is the canonical user ID of an AWS\n *                      account</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>uri</code> – if you are granting permissions to a predefined\n *                      group</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>emailAddress</code> – if the value specified is the email address of\n *                      an AWS account</p>\n *                      <note>\n *                         <p>Using email addresses to specify a grantee is only supported in the following AWS Regions: </p>\n *                         <ul>\n *                            <li>\n *                               <p>US East (N. Virginia)</p>\n *                            </li>\n *                            <li>\n *                               <p>US West (N. California)</p>\n *                            </li>\n *                            <li>\n *                               <p> US West (Oregon)</p>\n *                            </li>\n *                            <li>\n *                               <p> Asia Pacific (Singapore)</p>\n *                            </li>\n *                            <li>\n *                               <p>Asia Pacific (Sydney)</p>\n *                            </li>\n *                            <li>\n *                               <p>Asia Pacific (Tokyo)</p>\n *                            </li>\n *                            <li>\n *                               <p>Europe (Ireland)</p>\n *                            </li>\n *                            <li>\n *                               <p>South America (São Paulo)</p>\n *                            </li>\n *                         </ul>\n *                         <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> in the AWS General Reference.</p>\n *                      </note>\n *                   </li>\n *                </ul>\n *                <p>For example, the following <code>x-amz-grant-read</code> header grants list\n *                objects permission to the two AWS accounts identified by their email\n *                addresses.</p>\n *                <p>\n *                   <code>x-amz-grant-read: emailAddress=\"xyz@amazon.com\",\n *                   emailAddress=\"abc@amazon.com\" </code>\n *                </p>\n *\n *             </li>\n *          </ul>\n *          <p>You can use either a canned ACL or specify access permissions explicitly. You cannot do\n *          both.</p>\n *          <p>\n *             <b>Grantee Values</b>\n *          </p>\n *          <p>You can specify the person (grantee) to whom you're assigning access rights (using\n *          request elements) in the following ways:</p>\n *          <ul>\n *             <li>\n *                <p>By the person's ID:</p>\n *                <p>\n *                   <code><Grantee xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n *                   xsi:type=\"CanonicalUser\"><ID><>ID<></ID><DisplayName><>GranteesEmail<></DisplayName>\n *                   </Grantee></code>\n *                </p>\n *                <p>DisplayName is optional and ignored in the request.</p>\n *             </li>\n *             <li>\n *                <p>By URI:</p>\n *                <p>\n *                   <code><Grantee xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n *                   xsi:type=\"Group\"><URI><>http://acs.amazonaws.com/groups/global/AuthenticatedUsers<></URI></Grantee></code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>By Email address:</p>\n *                <p>\n *                   <code><Grantee xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n *                   xsi:type=\"AmazonCustomerByEmail\"><EmailAddress><>Grantees@email.com<></EmailAddress>lt;/Grantee></code>\n *                </p>\n *                <p>The grantee is resolved to the CanonicalUser and, in a response to a GET Object\n *                acl request, appears as the CanonicalUser.</p>\n *                <note>\n *                   <p>Using email addresses to specify a grantee is only supported in the following AWS Regions: </p>\n *                   <ul>\n *                      <li>\n *                         <p>US East (N. Virginia)</p>\n *                      </li>\n *                      <li>\n *                         <p>US West (N. California)</p>\n *                      </li>\n *                      <li>\n *                         <p> US West (Oregon)</p>\n *                      </li>\n *                      <li>\n *                         <p> Asia Pacific (Singapore)</p>\n *                      </li>\n *                      <li>\n *                         <p>Asia Pacific (Sydney)</p>\n *                      </li>\n *                      <li>\n *                         <p>Asia Pacific (Tokyo)</p>\n *                      </li>\n *                      <li>\n *                         <p>Europe (Ireland)</p>\n *                      </li>\n *                      <li>\n *                         <p>South America (São Paulo)</p>\n *                      </li>\n *                   </ul>\n *                   <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> in the AWS General Reference.</p>\n *                </note>\n *             </li>\n *          </ul>\n *          <p>\n *             <b>Versioning</b>\n *          </p>\n *          <p>The ACL of an object is set at the object version level. By default, PUT sets the ACL of\n *          the current version of an object. To set the ACL of a different version, use the\n *             <code>versionId</code> subresource.</p>\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html\">CopyObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutObjectAclCommand = /** @class */ (function (_super) {\n    __extends(PutObjectAclCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function PutObjectAclCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    PutObjectAclCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"PutObjectAclCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: PutObjectAclRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: PutObjectAclOutput.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    PutObjectAclCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlPutObjectAclCommand(input, context);\n    };\n    PutObjectAclCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlPutObjectAclCommand(output, context);\n    };\n    return PutObjectAclCommand;\n}($Command));\nexport { PutObjectAclCommand };\n//# sourceMappingURL=PutObjectAclCommand.js.map"]},"metadata":{},"sourceType":"module"}