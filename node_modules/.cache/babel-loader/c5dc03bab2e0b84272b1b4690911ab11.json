{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { GraphQLError } from 'graphql/error/GraphQLError';\nimport { print } from 'graphql/language/printer';\nimport { parse } from 'graphql/language/parser';\nimport Amplify, { ConsoleLogger as Logger, Credentials, Constants, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport PubSub from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { RestClient } from '@aws-amplify/api-rest';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('GraphQLAPI');\nexport var graphqlOperation = function (query, variables) {\n  if (variables === void 0) {\n    variables = {};\n  }\n\n  return {\n    query: query,\n    variables: variables\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\n\nvar GraphQLAPIClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize GraphQL API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function GraphQLAPIClass(options) {\n    this._api = null;\n    this._options = options;\n    Amplify.register(this);\n    logger.debug('API Options', this._options);\n  }\n\n  GraphQLAPIClass.prototype.getModuleName = function () {\n    return 'GraphQLAPI';\n  };\n  /**\n   * Configure API\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n\n\n  GraphQLAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n        _b = _a.API,\n        API = _b === void 0 ? {} : _b,\n        otherOptions = __rest(_a, [\"API\"]);\n\n    var opt = __assign(__assign({}, otherOptions), API);\n\n    logger.debug('configure GraphQL API', {\n      opt: opt\n    });\n\n    if (opt['aws_project_region']) {\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n\n    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n      logger.warn('graphql_headers should be a function');\n      opt.graphql_headers = undefined;\n    }\n\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n\n\n  GraphQLAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest instance');\n\n    if (this._options) {\n      this._api = new RestClient(this._options);\n      return true;\n    } else {\n      return Promise.reject('API not configured');\n    }\n  };\n\n  GraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, federatedInfo, session;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n            headers = {};\n            _b = authenticationType;\n\n            switch (_b) {\n              case 'API_KEY':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'AWS_IAM':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'OPENID_CONNECT':\n                return [3\n                /*break*/\n                , 4];\n\n              case 'AMAZON_COGNITO_USER_POOLS':\n                return [3\n                /*break*/\n                , 6];\n            }\n\n            return [3\n            /*break*/\n            , 8];\n\n          case 1:\n            if (!apiKey) {\n              throw new Error('No api-key configured');\n            }\n\n            headers = {\n              Authorization: null,\n              'X-Api-Key': apiKey\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 3:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK) {\n              throw new Error('No credentials');\n            }\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 4:\n            return [4\n            /*yield*/\n            , Cache.getItem('federatedInfo')];\n\n          case 5:\n            federatedInfo = _c.sent();\n\n            if (!federatedInfo || !federatedInfo.token) {\n              throw new Error('No federated jwt');\n            }\n\n            headers = {\n              Authorization: federatedInfo.token\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 6:\n            return [4\n            /*yield*/\n            , Auth.currentSession()];\n\n          case 7:\n            session = _c.sent();\n            headers = {\n              Authorization: session.getAccessToken().getJwtToken()\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            headers = {\n              Authorization: null\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 9:\n            return [2\n            /*return*/\n            , headers];\n        }\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n\n\n  GraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {\n    var doc = parse(operation);\n\n    var _a = __read(doc.definitions, 1),\n        operationType = _a[0].operation;\n\n    return operationType;\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param {GraphQLOptions} GraphQL Options\n   * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n   * @returns {Promise<GraphQLResult> | Observable<object>}\n   */\n\n\n  GraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders) {\n    var paramQuery = _a.query,\n        _b = _a.variables,\n        variables = _b === void 0 ? {} : _b,\n        authMode = _a.authMode;\n    var query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n\n    var _c = __read(query.definitions.filter(function (def) {\n      return def.kind === 'OperationDefinition';\n    }), 1),\n        _d = _c[0],\n        operationDef = _d === void 0 ? {} : _d;\n\n    var operationType = operationDef.operation;\n\n    switch (operationType) {\n      case 'query':\n      case 'mutation':\n        var cancellableToken = this._api.getCancellableToken();\n\n        var initParams = {\n          cancellableToken: cancellableToken\n        };\n\n        var responsePromise = this._graphql({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, additionalHeaders, initParams);\n\n        this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n        return responsePromise;\n\n      case 'subscription':\n        return this._graphqlSubscribe({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, additionalHeaders);\n    }\n\n    throw new Error(\"invalid operation type: \" + operationType);\n  };\n\n  GraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams) {\n    var query = _a.query,\n        variables = _a.variables,\n        authMode = _a.authMode;\n\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    if (initParams === void 0) {\n      initParams = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n\n      var _k;\n\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 1:\n            _l.sent();\n\n            _l.label = 2;\n\n          case 2:\n            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {\n              return {};\n            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n            _d = [{}];\n            _e = !customGraphqlEndpoint;\n            if (!_e) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode)];\n\n          case 3:\n            _e = _l.sent();\n            _l.label = 4;\n\n          case 4:\n            _f = [__assign.apply(void 0, _d.concat([_e]))];\n            _g = customGraphqlEndpoint;\n            if (!_g) return [3\n            /*break*/\n            , 8];\n            if (!customEndpointRegion) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode)];\n\n          case 5:\n            _h = _l.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            _h = {\n              Authorization: null\n            };\n            _l.label = 7;\n\n          case 7:\n            _g = _h;\n            _l.label = 8;\n\n          case 8:\n            _j = [__assign.apply(void 0, _f.concat([_g]))];\n            return [4\n            /*yield*/\n            , graphql_headers({\n              query: query,\n              variables: variables\n            })];\n\n          case 9:\n            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = Constants.userAgent, _k)]);\n            body = {\n              query: print(query),\n              variables: variables\n            };\n            init = Object.assign({\n              headers: headers,\n              body: body,\n              signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n              }\n            }, initParams);\n            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n            if (!endpoint) {\n              error = new GraphQLError('No graphql endpoint provided.');\n              throw {\n                data: {},\n                errors: [error]\n              };\n            }\n\n            _l.label = 10;\n\n          case 10:\n            _l.trys.push([10, 12,, 13]);\n\n            return [4\n            /*yield*/\n            , this._api.post(endpoint, init)];\n\n          case 11:\n            response = _l.sent();\n            return [3\n            /*break*/\n            , 13];\n\n          case 12:\n            err_1 = _l.sent(); // If the exception is because user intentionally\n            // cancelled the request, do not modify the exception\n            // so that clients can identify the exception correctly.\n\n            if (this._api.isCancel(err_1)) {\n              throw err_1;\n            }\n\n            response = {\n              data: {},\n              errors: [new GraphQLError(err_1.message)]\n            };\n            return [3\n            /*break*/\n            , 13];\n\n          case 13:\n            errors = response.errors;\n\n            if (errors && errors.length) {\n              throw response;\n            }\n\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n\n\n  GraphQLAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request. Only applicable for graphql queries and mutations\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n\n\n  GraphQLAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n\n  GraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders) {\n    var query = _a.query,\n        variables = _a.variables,\n        defaultAuthenticationType = _a.authMode;\n\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    var _b = this._options,\n        region = _b.aws_appsync_region,\n        appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint,\n        aws_appsync_authenticationType = _b.aws_appsync_authenticationType,\n        apiKey = _b.aws_appsync_apiKey,\n        _c = _b.graphql_headers,\n        graphql_headers = _c === void 0 ? function () {\n      return {};\n    } : _c;\n    var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\n    if (PubSub && typeof PubSub.subscribe === 'function') {\n      return PubSub.subscribe('', {\n        provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n        appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n        authenticationType: authenticationType,\n        apiKey: apiKey,\n        query: print(query),\n        region: region,\n        variables: variables,\n        graphql_headers: graphql_headers,\n        additionalHeaders: additionalHeaders\n      });\n    } else {\n      logger.debug('No pubsub module applied for subscription');\n      throw new Error('No pubsub module applied for subscription');\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  GraphQLAPIClass.prototype._ensureCredentials = function () {\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = Credentials.shear(credentials);\n      logger.debug('set credentials for api', cred);\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n\n  return GraphQLAPIClass;\n}();\n\nexport { GraphQLAPIClass };\nexport var GraphQLAPI = new GraphQLAPIClass(null);","map":{"version":3,"sources":["../src/GraphQLAPI.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { GraphQLError } from 'graphql/error/GraphQLError';\nimport { print } from 'graphql/language/printer';\nimport { parse } from 'graphql/language/parser';\nimport Amplify, { ConsoleLogger as Logger, Credentials, Constants, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER, } from '@aws-amplify/core';\nimport PubSub from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { RestClient } from '@aws-amplify/api-rest';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('GraphQLAPI');\nexport var graphqlOperation = function (query, variables) {\n    if (variables === void 0) { variables = {}; }\n    return ({\n        query: query,\n        variables: variables,\n    });\n};\n/**\n * Export Cloud Logic APIs\n */\nvar GraphQLAPIClass = /** @class */ (function () {\n    /**\n     * Initialize GraphQL API with AWS configuration\n     * @param {Object} options - Configuration object for API\n     */\n    function GraphQLAPIClass(options) {\n        this._api = null;\n        this._options = options;\n        Amplify.register(this);\n        logger.debug('API Options', this._options);\n    }\n    GraphQLAPIClass.prototype.getModuleName = function () {\n        return 'GraphQLAPI';\n    };\n    /**\n     * Configure API\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    GraphQLAPIClass.prototype.configure = function (options) {\n        var _a = options || {}, _b = _a.API, API = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"API\"]);\n        var opt = __assign(__assign({}, otherOptions), API);\n        logger.debug('configure GraphQL API', { opt: opt });\n        if (opt['aws_project_region']) {\n            opt = Object.assign({}, opt, {\n                region: opt['aws_project_region'],\n                header: {},\n            });\n        }\n        if (typeof opt.graphql_headers !== 'undefined' &&\n            typeof opt.graphql_headers !== 'function') {\n            logger.warn('graphql_headers should be a function');\n            opt.graphql_headers = undefined;\n        }\n        this._options = Object.assign({}, this._options, opt);\n        this.createInstance();\n        return this._options;\n    };\n    /**\n     * Create an instance of API for the library\n     * @return - A promise of true if Success\n     */\n    GraphQLAPIClass.prototype.createInstance = function () {\n        logger.debug('create Rest instance');\n        if (this._options) {\n            this._api = new RestClient(this._options);\n            return true;\n        }\n        else {\n            return Promise.reject('API not configured');\n        }\n    };\n    GraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, federatedInfo, session;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n                        authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n                        headers = {};\n                        _b = authenticationType;\n                        switch (_b) {\n                            case 'API_KEY': return [3 /*break*/, 1];\n                            case 'AWS_IAM': return [3 /*break*/, 2];\n                            case 'OPENID_CONNECT': return [3 /*break*/, 4];\n                            case 'AMAZON_COGNITO_USER_POOLS': return [3 /*break*/, 6];\n                        }\n                        return [3 /*break*/, 8];\n                    case 1:\n                        if (!apiKey) {\n                            throw new Error('No api-key configured');\n                        }\n                        headers = {\n                            Authorization: null,\n                            'X-Api-Key': apiKey,\n                        };\n                        return [3 /*break*/, 9];\n                    case 2: return [4 /*yield*/, this._ensureCredentials()];\n                    case 3:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK) {\n                            throw new Error('No credentials');\n                        }\n                        return [3 /*break*/, 9];\n                    case 4: return [4 /*yield*/, Cache.getItem('federatedInfo')];\n                    case 5:\n                        federatedInfo = _c.sent();\n                        if (!federatedInfo || !federatedInfo.token) {\n                            throw new Error('No federated jwt');\n                        }\n                        headers = {\n                            Authorization: federatedInfo.token,\n                        };\n                        return [3 /*break*/, 9];\n                    case 6: return [4 /*yield*/, Auth.currentSession()];\n                    case 7:\n                        session = _c.sent();\n                        headers = {\n                            Authorization: session.getAccessToken().getJwtToken(),\n                        };\n                        return [3 /*break*/, 9];\n                    case 8:\n                        headers = {\n                            Authorization: null,\n                        };\n                        return [3 /*break*/, 9];\n                    case 9: return [2 /*return*/, headers];\n                }\n            });\n        });\n    };\n    /**\n     * to get the operation type\n     * @param operation\n     */\n    GraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {\n        var doc = parse(operation);\n        var _a = __read(doc.definitions, 1), operationType = _a[0].operation;\n        return operationType;\n    };\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param {GraphQLOptions} GraphQL Options\n     * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n     * @returns {Promise<GraphQLResult> | Observable<object>}\n     */\n    GraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders) {\n        var paramQuery = _a.query, _b = _a.variables, variables = _b === void 0 ? {} : _b, authMode = _a.authMode;\n        var query = typeof paramQuery === 'string'\n            ? parse(paramQuery)\n            : parse(print(paramQuery));\n        var _c = __read(query.definitions.filter(function (def) { return def.kind === 'OperationDefinition'; }), 1), _d = _c[0], operationDef = _d === void 0 ? {} : _d;\n        var operationType = operationDef.operation;\n        switch (operationType) {\n            case 'query':\n            case 'mutation':\n                var cancellableToken = this._api.getCancellableToken();\n                var initParams = { cancellableToken: cancellableToken };\n                var responsePromise = this._graphql({ query: query, variables: variables, authMode: authMode }, additionalHeaders, initParams);\n                this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n                return responsePromise;\n            case 'subscription':\n                return this._graphqlSubscribe({ query: query, variables: variables, authMode: authMode }, additionalHeaders);\n        }\n        throw new Error(\"invalid operation type: \" + operationType);\n    };\n    GraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams) {\n        var query = _a.query, variables = _a.variables, authMode = _a.authMode;\n        if (additionalHeaders === void 0) { additionalHeaders = {}; }\n        if (initParams === void 0) { initParams = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n            var _k;\n            return __generator(this, function (_l) {\n                switch (_l.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.createInstance()];\n                    case 1:\n                        _l.sent();\n                        _l.label = 2;\n                    case 2:\n                        _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () { return ({}); } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n                        _d = [{}];\n                        _e = !customGraphqlEndpoint;\n                        if (!_e) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this._headerBasedAuth(authMode)];\n                    case 3:\n                        _e = (_l.sent());\n                        _l.label = 4;\n                    case 4:\n                        _f = [__assign.apply(void 0, _d.concat([(_e)]))];\n                        _g = customGraphqlEndpoint;\n                        if (!_g) return [3 /*break*/, 8];\n                        if (!customEndpointRegion) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this._headerBasedAuth(authMode)];\n                    case 5:\n                        _h = _l.sent();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        _h = { Authorization: null };\n                        _l.label = 7;\n                    case 7:\n                        _g = (_h);\n                        _l.label = 8;\n                    case 8:\n                        _j = [__assign.apply(void 0, _f.concat([(_g)]))];\n                        return [4 /*yield*/, graphql_headers({ query: query, variables: variables })];\n                    case 9:\n                        headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_l.sent())])), additionalHeaders]), (!customGraphqlEndpoint && (_k = {},\n                                _k[USER_AGENT_HEADER] = Constants.userAgent,\n                                _k))]);\n                        body = {\n                            query: print(query),\n                            variables: variables,\n                        };\n                        init = Object.assign({\n                            headers: headers,\n                            body: body,\n                            signerServiceInfo: {\n                                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                                region: !customGraphqlEndpoint ? region : customEndpointRegion,\n                            },\n                        }, initParams);\n                        endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n                        if (!endpoint) {\n                            error = new GraphQLError('No graphql endpoint provided.');\n                            throw {\n                                data: {},\n                                errors: [error],\n                            };\n                        }\n                        _l.label = 10;\n                    case 10:\n                        _l.trys.push([10, 12, , 13]);\n                        return [4 /*yield*/, this._api.post(endpoint, init)];\n                    case 11:\n                        response = _l.sent();\n                        return [3 /*break*/, 13];\n                    case 12:\n                        err_1 = _l.sent();\n                        // If the exception is because user intentionally\n                        // cancelled the request, do not modify the exception\n                        // so that clients can identify the exception correctly.\n                        if (this._api.isCancel(err_1)) {\n                            throw err_1;\n                        }\n                        response = {\n                            data: {},\n                            errors: [new GraphQLError(err_1.message)],\n                        };\n                        return [3 /*break*/, 13];\n                    case 13:\n                        errors = response.errors;\n                        if (errors && errors.length) {\n                            throw response;\n                        }\n                        return [2 /*return*/, response];\n                }\n            });\n        });\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    GraphQLAPIClass.prototype.isCancel = function (error) {\n        return this._api.isCancel(error);\n    };\n    /**\n     * Cancels an inflight request. Only applicable for graphql queries and mutations\n     * @param {any} request - request to cancel\n     * @return {boolean} - A boolean indicating if the request was cancelled\n     */\n    GraphQLAPIClass.prototype.cancel = function (request, message) {\n        return this._api.cancel(request, message);\n    };\n    GraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders) {\n        var query = _a.query, variables = _a.variables, defaultAuthenticationType = _a.authMode;\n        if (additionalHeaders === void 0) { additionalHeaders = {}; }\n        var _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, aws_appsync_authenticationType = _b.aws_appsync_authenticationType, apiKey = _b.aws_appsync_apiKey, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () { return ({}); } : _c;\n        var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n        if (PubSub && typeof PubSub.subscribe === 'function') {\n            return PubSub.subscribe('', {\n                provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n                appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n                authenticationType: authenticationType,\n                apiKey: apiKey,\n                query: print(query),\n                region: region,\n                variables: variables,\n                graphql_headers: graphql_headers,\n                additionalHeaders: additionalHeaders,\n            });\n        }\n        else {\n            logger.debug('No pubsub module applied for subscription');\n            throw new Error('No pubsub module applied for subscription');\n        }\n    };\n    /**\n     * @private\n     */\n    GraphQLAPIClass.prototype._ensureCredentials = function () {\n        return Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return false;\n            var cred = Credentials.shear(credentials);\n            logger.debug('set credentials for api', cred);\n            return true;\n        })\n            .catch(function (err) {\n            logger.warn('ensure credentials error', err);\n            return false;\n        });\n    };\n    return GraphQLAPIClass;\n}());\nexport { GraphQLAPIClass };\nexport var GraphQLAPI = new GraphQLAPIClass(null);\n//# sourceMappingURL=GraphQLAPI.js.map"]},"metadata":{},"sourceType":"module"}