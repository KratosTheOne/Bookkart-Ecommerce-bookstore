{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { StopDominantLanguageDetectionJobRequest, StopDominantLanguageDetectionJobResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1StopDominantLanguageDetectionJobCommand, serializeAws_json1_1StopDominantLanguageDetectionJobCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Stops a dominant language detection job in progress.</p>\n *          <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put\n *       into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it\n *       is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the\n *         <code>STOPPED</code> state.</p>\n *          <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the\n *         <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400\n *       Internal Request Exception. </p>\n *          <p>When a job is stopped, any documents already processed are written to the output\n *       location.</p>\n */\n\nvar StopDominantLanguageDetectionJobCommand =\n/** @class */\nfunction (_super) {\n  __extends(StopDominantLanguageDetectionJobCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function StopDominantLanguageDetectionJobCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  StopDominantLanguageDetectionJobCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"ComprehendClient\";\n    var commandName = \"StopDominantLanguageDetectionJobCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: StopDominantLanguageDetectionJobRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: StopDominantLanguageDetectionJobResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  StopDominantLanguageDetectionJobCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1StopDominantLanguageDetectionJobCommand(input, context);\n  };\n\n  StopDominantLanguageDetectionJobCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1StopDominantLanguageDetectionJobCommand(output, context);\n  };\n\n  return StopDominantLanguageDetectionJobCommand;\n}($Command);\n\nexport { StopDominantLanguageDetectionJobCommand };","map":{"version":3,"sources":["../../../commands/StopDominantLanguageDetectionJobCommand.ts"],"names":[],"mappings":";AACA,SAAS,uCAAT,EAAkD,wCAAlD,QAAkG,oBAAlG;AACA,SACE,6DADF,EAEE,2DAFF,QAGO,0BAHP;AAIA,SAAS,cAAT,QAA+B,2BAA/B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;AAWG;;AACH,IAAA,uCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6D,EAAA,SAAA,CAAA,uCAAA,EAAA,MAAA,CAAA,CAA7D,CAKE;AACA;;;AAEA,WAAA,uCAAA,CAAqB,KAArB,EAAwE;AAAxE,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAAmD,CAGtE;AACD;AAED;;AAEG;;;AACH,EAAA,uCAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,kBAAnB;AACA,QAAM,WAAW,GAAG,yCAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,uCAAuC,CAAC,kBAJV;AAKvD,MAAA,wBAAwB,EAAE,wCAAwC,CAAC;AALZ,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GAzBD;;AA2BQ,EAAA,uCAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UACE,KADF,EAEE,OAFF,EAEyB;AAEvB,WAAO,2DAA2D,CAAC,KAAD,EAAQ,OAAR,CAAlE;AACD,GALO;;AAOA,EAAA,uCAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UACE,MADF,EAEE,OAFF,EAEyB;AAEvB,WAAO,6DAA6D,CAAC,MAAD,EAAS,OAAT,CAApE;AACD,GALO;;AASV,SAAA,uCAAA;AAAC,CA5DD,CAA6D,QAA7D,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { StopDominantLanguageDetectionJobRequest, StopDominantLanguageDetectionJobResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1StopDominantLanguageDetectionJobCommand, serializeAws_json1_1StopDominantLanguageDetectionJobCommand, } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Stops a dominant language detection job in progress.</p>\n *          <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put\n *       into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it\n *       is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the\n *         <code>STOPPED</code> state.</p>\n *          <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the\n *         <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400\n *       Internal Request Exception. </p>\n *          <p>When a job is stopped, any documents already processed are written to the output\n *       location.</p>\n */\nvar StopDominantLanguageDetectionJobCommand = /** @class */ (function (_super) {\n    __extends(StopDominantLanguageDetectionJobCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function StopDominantLanguageDetectionJobCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    StopDominantLanguageDetectionJobCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"ComprehendClient\";\n        var commandName = \"StopDominantLanguageDetectionJobCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: StopDominantLanguageDetectionJobRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: StopDominantLanguageDetectionJobResponse.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    StopDominantLanguageDetectionJobCommand.prototype.serialize = function (input, context) {\n        return serializeAws_json1_1StopDominantLanguageDetectionJobCommand(input, context);\n    };\n    StopDominantLanguageDetectionJobCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_json1_1StopDominantLanguageDetectionJobCommand(output, context);\n    };\n    return StopDominantLanguageDetectionJobCommand;\n}($Command));\nexport { StopDominantLanguageDetectionJobCommand };\n//# sourceMappingURL=StopDominantLanguageDetectionJobCommand.js.map"]},"metadata":{},"sourceType":"module"}