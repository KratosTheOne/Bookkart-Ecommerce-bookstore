{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { StartEntitiesDetectionJobRequest, StartEntitiesDetectionJobResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1StartEntitiesDetectionJobCommand, serializeAws_json1_1StartEntitiesDetectionJobCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Starts an asynchronous entity detection job for a collection of documents. Use the  operation to track the status of a job.</p>\n *          <p>This API can be used for either standard entity detection or custom entity recognition. In\n *       order to be used for custom entity recognition, the optional <code>EntityRecognizerArn</code>\n *       must be used in order to provide access to the recognizer being used to detect the custom\n *       entity.</p>\n */\n\nvar StartEntitiesDetectionJobCommand =\n/** @class */\nfunction (_super) {\n  __extends(StartEntitiesDetectionJobCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function StartEntitiesDetectionJobCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  StartEntitiesDetectionJobCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"ComprehendClient\";\n    var commandName = \"StartEntitiesDetectionJobCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: StartEntitiesDetectionJobRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: StartEntitiesDetectionJobResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  StartEntitiesDetectionJobCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1StartEntitiesDetectionJobCommand(input, context);\n  };\n\n  StartEntitiesDetectionJobCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1StartEntitiesDetectionJobCommand(output, context);\n  };\n\n  return StartEntitiesDetectionJobCommand;\n}($Command);\n\nexport { StartEntitiesDetectionJobCommand };","map":{"version":3,"sources":["../../../commands/StartEntitiesDetectionJobCommand.ts"],"names":[],"mappings":";AACA,SAAS,gCAAT,EAA2C,iCAA3C,QAAoF,oBAApF;AACA,SACE,sDADF,EAEE,oDAFF,QAGO,0BAHP;AAIA,SAAS,cAAT,QAA+B,2BAA/B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;AAMG;;AACH,IAAA,gCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,SAAA,CAAA,gCAAA,EAAA,MAAA,CAAA,CAAtD,CAKE;AACA;;;AAEA,WAAA,gCAAA,CAAqB,KAArB,EAAiE;AAAjE,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAA4C,CAG/D;AACD;AAED;;AAEG;;;AACH,EAAA,gCAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,kBAAnB;AACA,QAAM,WAAW,GAAG,kCAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,gCAAgC,CAAC,kBAJH;AAKvD,MAAA,wBAAwB,EAAE,iCAAiC,CAAC;AALL,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GAzBD;;AA2BQ,EAAA,gCAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,KAAlB,EAAgE,OAAhE,EAAuF;AACrF,WAAO,oDAAoD,CAAC,KAAD,EAAQ,OAAR,CAA3D;AACD,GAFO;;AAIA,EAAA,gCAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UACE,MADF,EAEE,OAFF,EAEyB;AAEvB,WAAO,sDAAsD,CAAC,MAAD,EAAS,OAAT,CAA7D;AACD,GALO;;AASV,SAAA,gCAAA;AAAC,CAzDD,CAAsD,QAAtD,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { StartEntitiesDetectionJobRequest, StartEntitiesDetectionJobResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1StartEntitiesDetectionJobCommand, serializeAws_json1_1StartEntitiesDetectionJobCommand, } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Starts an asynchronous entity detection job for a collection of documents. Use the  operation to track the status of a job.</p>\n *          <p>This API can be used for either standard entity detection or custom entity recognition. In\n *       order to be used for custom entity recognition, the optional <code>EntityRecognizerArn</code>\n *       must be used in order to provide access to the recognizer being used to detect the custom\n *       entity.</p>\n */\nvar StartEntitiesDetectionJobCommand = /** @class */ (function (_super) {\n    __extends(StartEntitiesDetectionJobCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function StartEntitiesDetectionJobCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    StartEntitiesDetectionJobCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"ComprehendClient\";\n        var commandName = \"StartEntitiesDetectionJobCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: StartEntitiesDetectionJobRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: StartEntitiesDetectionJobResponse.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    StartEntitiesDetectionJobCommand.prototype.serialize = function (input, context) {\n        return serializeAws_json1_1StartEntitiesDetectionJobCommand(input, context);\n    };\n    StartEntitiesDetectionJobCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_json1_1StartEntitiesDetectionJobCommand(output, context);\n    };\n    return StartEntitiesDetectionJobCommand;\n}($Command));\nexport { StartEntitiesDetectionJobCommand };\n//# sourceMappingURL=StartEntitiesDetectionJobCommand.js.map"]},"metadata":{},"sourceType":"module"}