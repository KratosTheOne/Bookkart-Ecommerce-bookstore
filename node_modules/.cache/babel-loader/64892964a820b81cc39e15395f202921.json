{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { Amplify, ConsoleLogger as Logger, Hub, Parser } from '@aws-amplify/core';\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchAnalyticsEvent = function (event, data, message) {\n  Hub.dispatch('analytics', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Analytics', AMPLIFY_SYMBOL);\n};\n\nvar trackers = {\n  pageView: PageViewTracker,\n  event: EventTracker,\n  session: SessionTracker\n};\nvar _instance = null;\n/**\n * Provide mobile analytics client functions\n */\n\nvar AnalyticsClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Analtyics\n   * @param config - Configuration of the Analytics\n   */\n  function AnalyticsClass() {\n    this._config = {};\n    this._pluggables = [];\n    this._disabled = false;\n    this._trackers = {};\n    _instance = this;\n    this.record = this.record.bind(this);\n    Hub.listen('auth', listener);\n    Hub.listen('storage', listener);\n    Hub.listen('analytics', listener);\n    Amplify.register(this);\n  }\n\n  AnalyticsClass.prototype.getModuleName = function () {\n    return 'Analytics';\n  };\n  /**\n   * configure Analytics\n   * @param {Object} config - Configuration of the Analytics\n   */\n\n\n  AnalyticsClass.prototype.configure = function (config) {\n    var _this = this;\n\n    if (!config) return this._config;\n    logger.debug('configure Analytics', config);\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n\n    if (this._config['disabled']) {\n      this._disabled = true;\n    }\n\n    this._pluggables.forEach(function (pluggable) {\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !_this._config['AWSPinpoint'] ? _this._config : _this._config[pluggable.getProviderName()];\n      pluggable.configure(__assign({\n        disabled: _this._config['disabled']\n      }, providerConfig));\n    });\n\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSPinpointProvider());\n    } // turn on the autoSessionRecord if not specified\n\n\n    if (this._config['autoSessionRecord'] === undefined) {\n      this._config['autoSessionRecord'] = true;\n    }\n\n    dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n    logger.debug('current configuration', this._config);\n    return this._config;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n\n\n  AnalyticsClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Analytics') {\n      this._pluggables.push(pluggable); // for backward compatibility\n\n\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !this._config['AWSPinpoint'] ? this._config : this._config[pluggable.getProviderName()];\n\n      var config = __assign({\n        disabled: this._config['disabled']\n      }, providerConfig);\n\n      pluggable.configure(config);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  AnalyticsClass.prototype.getPluggable = function (providerName) {\n    for (var i = 0; i < this._pluggables.length; i += 1) {\n      var pluggable = this._pluggables[i];\n\n      if (pluggable.getProviderName() === providerName) {\n        return pluggable;\n      }\n    }\n\n    logger.debug('No plugin found with providerName', providerName);\n    return null;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  AnalyticsClass.prototype.removePluggable = function (providerName) {\n    var idx = 0;\n\n    while (idx < this._pluggables.length) {\n      if (this._pluggables[idx].getProviderName() === providerName) {\n        break;\n      }\n\n      idx += 1;\n    }\n\n    if (idx === this._pluggables.length) {\n      logger.debug('No plugin found with providerName', providerName);\n      return;\n    } else {\n      this._pluggables.splice(idx, idx + 1);\n\n      return;\n    }\n  };\n  /**\n   * stop sending events\n   */\n\n\n  AnalyticsClass.prototype.disable = function () {\n    this._disabled = true;\n  };\n  /**\n   * start sending events\n   */\n\n\n  AnalyticsClass.prototype.enable = function () {\n    this._disabled = false;\n  };\n  /**\n   * Record Session start\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n\n\n  AnalyticsClass.prototype.startSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: {\n            name: '_session.start'\n          },\n          provider: provider\n        };\n        return [2\n        /*return*/\n        , this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record Session stop\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n\n\n  AnalyticsClass.prototype.stopSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: {\n            name: '_session.stop'\n          },\n          provider: provider\n        };\n        return [2\n        /*return*/\n        , this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record one analytic event and send it to Pinpoint\n   * @param {String} name - The name of the event\n   * @param {Object} [attributes] - Attributes of the event\n   * @param {Object} [metrics] - Event metrics\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n\n\n  AnalyticsClass.prototype.record = function (event, provider, metrics) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = null; // this is just for compatibility, going to be deprecated\n\n        if (typeof event === 'string') {\n          params = {\n            event: {\n              name: event,\n              attributes: provider,\n              metrics: metrics\n            },\n            provider: 'AWSPinpoint'\n          };\n        } else {\n          params = {\n            event: event,\n            provider: provider\n          };\n        }\n\n        return [2\n        /*return*/\n        , this._sendEvent(params)];\n      });\n    });\n  };\n\n  AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event;\n      return __generator(this, function (_a) {\n        event = __assign(__assign({}, attrs), {\n          name: '_update_endpoint'\n        });\n        return [2\n        /*return*/\n        , this.record(event, provider)];\n      });\n    });\n  };\n\n  AnalyticsClass.prototype._sendEvent = function (params) {\n    var _this = this;\n\n    if (this._disabled) {\n      logger.debug('Analytics has been disabled');\n      return Promise.resolve();\n    }\n\n    var provider = params.provider ? params.provider : 'AWSPinpoint';\n    return new Promise(function (resolve, reject) {\n      _this._pluggables.forEach(function (pluggable) {\n        if (pluggable.getProviderName() === provider) {\n          pluggable.record(params, {\n            resolve: resolve,\n            reject: reject\n          });\n        }\n      });\n    });\n  };\n\n  AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n    if (!trackers[trackerType]) {\n      logger.debug('invalid tracker type');\n      return;\n    } // to sync up two different configuration ways of auto session tracking\n\n\n    if (trackerType === 'session') {\n      this._config['autoSessionRecord'] = opts['enable'];\n    }\n\n    var tracker = this._trackers[trackerType];\n\n    if (!tracker) {\n      this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n    } else {\n      tracker.configure(opts);\n    }\n  };\n\n  return AnalyticsClass;\n}();\n\nexport { AnalyticsClass };\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\n\nvar listener = function (capsule) {\n  var channel = capsule.channel,\n      payload = capsule.payload;\n  logger.debug('on hub capsule ' + channel, payload);\n\n  switch (channel) {\n    case 'auth':\n      authEvent(payload);\n      break;\n\n    case 'storage':\n      storageEvent(payload);\n      break;\n\n    case 'analytics':\n      analyticsEvent(payload);\n      break;\n\n    default:\n      break;\n  }\n};\n\nvar storageEvent = function (payload) {\n  var _a = payload.data,\n      attrs = _a.attrs,\n      metrics = _a.metrics;\n  if (!attrs) return;\n\n  if (analyticsConfigured) {\n    _instance.record({\n      name: 'Storage',\n      attributes: attrs,\n      metrics: metrics\n    }).catch(function (e) {\n      logger.debug('Failed to send the storage event automatically', e);\n    });\n  }\n};\n\nvar authEvent = function (payload) {\n  var event = payload.event;\n\n  if (!event) {\n    return;\n  }\n\n  var recordAuthEvent = function (eventName) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(authConfigured && analyticsConfigured)) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , _instance.record({\n              name: \"_userauth.\" + eventName\n            })];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 3:\n            err_1 = _a.sent();\n            logger.debug(\"Failed to send the \" + eventName + \" event automatically\", err_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  switch (event) {\n    case 'signIn':\n      return recordAuthEvent('sign_in');\n\n    case 'signUp':\n      return recordAuthEvent('sign_up');\n\n    case 'signOut':\n      return recordAuthEvent('sign_out');\n\n    case 'signIn_failure':\n      return recordAuthEvent('auth_fail');\n\n    case 'configured':\n      authConfigured = true;\n\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n\n      break;\n  }\n};\n\nvar analyticsEvent = function (payload) {\n  var event = payload.event;\n  if (!event) return;\n\n  switch (event) {\n    case 'pinpointProvider_configured':\n      analyticsConfigured = true;\n\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n\n      break;\n  }\n};\n\nvar sendEvents = function () {\n  var config = _instance.configure();\n\n  if (!endpointUpdated && config['autoSessionRecord']) {\n    _instance.updateEndpoint({\n      immediate: true\n    }).catch(function (e) {\n      logger.debug('Failed to update the endpoint', e);\n    });\n\n    endpointUpdated = true;\n  }\n\n  _instance.autoTrack('session', {\n    enable: config['autoSessionRecord']\n  });\n};\n\nexport var Analytics = new AnalyticsClass();","map":{"version":3,"sources":["../src/Analytics.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Amplify, ConsoleLogger as Logger, Hub, Parser, } from '@aws-amplify/core';\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\n    typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchAnalyticsEvent = function (event, data, message) {\n    Hub.dispatch('analytics', { event: event, data: data, message: message }, 'Analytics', AMPLIFY_SYMBOL);\n};\nvar trackers = {\n    pageView: PageViewTracker,\n    event: EventTracker,\n    session: SessionTracker,\n};\nvar _instance = null;\n/**\n * Provide mobile analytics client functions\n */\nvar AnalyticsClass = /** @class */ (function () {\n    /**\n     * Initialize Analtyics\n     * @param config - Configuration of the Analytics\n     */\n    function AnalyticsClass() {\n        this._config = {};\n        this._pluggables = [];\n        this._disabled = false;\n        this._trackers = {};\n        _instance = this;\n        this.record = this.record.bind(this);\n        Hub.listen('auth', listener);\n        Hub.listen('storage', listener);\n        Hub.listen('analytics', listener);\n        Amplify.register(this);\n    }\n    AnalyticsClass.prototype.getModuleName = function () {\n        return 'Analytics';\n    };\n    /**\n     * configure Analytics\n     * @param {Object} config - Configuration of the Analytics\n     */\n    AnalyticsClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config;\n        logger.debug('configure Analytics', config);\n        var amplifyConfig = Parser.parseMobilehubConfig(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n        if (this._config['disabled']) {\n            this._disabled = true;\n        }\n        this._pluggables.forEach(function (pluggable) {\n            // for backward compatibility\n            var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' &&\n                !_this._config['AWSPinpoint']\n                ? _this._config\n                : _this._config[pluggable.getProviderName()];\n            pluggable.configure(__assign({ disabled: _this._config['disabled'] }, providerConfig));\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AWSPinpointProvider());\n        }\n        // turn on the autoSessionRecord if not specified\n        if (this._config['autoSessionRecord'] === undefined) {\n            this._config['autoSessionRecord'] = true;\n        }\n        dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n        logger.debug('current configuration', this._config);\n        return this._config;\n    };\n    /**\n     * add plugin into Analytics category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    AnalyticsClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Analytics') {\n            this._pluggables.push(pluggable);\n            // for backward compatibility\n            var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' &&\n                !this._config['AWSPinpoint']\n                ? this._config\n                : this._config[pluggable.getProviderName()];\n            var config = __assign({ disabled: this._config['disabled'] }, providerConfig);\n            pluggable.configure(config);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the plugin\n     */\n    AnalyticsClass.prototype.getPluggable = function (providerName) {\n        for (var i = 0; i < this._pluggables.length; i += 1) {\n            var pluggable = this._pluggables[i];\n            if (pluggable.getProviderName() === providerName) {\n                return pluggable;\n            }\n        }\n        logger.debug('No plugin found with providerName', providerName);\n        return null;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the plugin\n     */\n    AnalyticsClass.prototype.removePluggable = function (providerName) {\n        var idx = 0;\n        while (idx < this._pluggables.length) {\n            if (this._pluggables[idx].getProviderName() === providerName) {\n                break;\n            }\n            idx += 1;\n        }\n        if (idx === this._pluggables.length) {\n            logger.debug('No plugin found with providerName', providerName);\n            return;\n        }\n        else {\n            this._pluggables.splice(idx, idx + 1);\n            return;\n        }\n    };\n    /**\n     * stop sending events\n     */\n    AnalyticsClass.prototype.disable = function () {\n        this._disabled = true;\n    };\n    /**\n     * start sending events\n     */\n    AnalyticsClass.prototype.enable = function () {\n        this._disabled = false;\n    };\n    /**\n     * Record Session start\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.startSession = function (provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = { event: { name: '_session.start' }, provider: provider };\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    /**\n     * Record Session stop\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.stopSession = function (provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = { event: { name: '_session.stop' }, provider: provider };\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    /**\n     * Record one analytic event and send it to Pinpoint\n     * @param {String} name - The name of the event\n     * @param {Object} [attributes] - Attributes of the event\n     * @param {Object} [metrics] - Event metrics\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.record = function (event, provider, metrics) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = null;\n                // this is just for compatibility, going to be deprecated\n                if (typeof event === 'string') {\n                    params = {\n                        event: {\n                            name: event,\n                            attributes: provider,\n                            metrics: metrics,\n                        },\n                        provider: 'AWSPinpoint',\n                    };\n                }\n                else {\n                    params = { event: event, provider: provider };\n                }\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var event;\n            return __generator(this, function (_a) {\n                event = __assign(__assign({}, attrs), { name: '_update_endpoint' });\n                return [2 /*return*/, this.record(event, provider)];\n            });\n        });\n    };\n    AnalyticsClass.prototype._sendEvent = function (params) {\n        var _this = this;\n        if (this._disabled) {\n            logger.debug('Analytics has been disabled');\n            return Promise.resolve();\n        }\n        var provider = params.provider ? params.provider : 'AWSPinpoint';\n        return new Promise(function (resolve, reject) {\n            _this._pluggables.forEach(function (pluggable) {\n                if (pluggable.getProviderName() === provider) {\n                    pluggable.record(params, { resolve: resolve, reject: reject });\n                }\n            });\n        });\n    };\n    AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n        if (!trackers[trackerType]) {\n            logger.debug('invalid tracker type');\n            return;\n        }\n        // to sync up two different configuration ways of auto session tracking\n        if (trackerType === 'session') {\n            this._config['autoSessionRecord'] = opts['enable'];\n        }\n        var tracker = this._trackers[trackerType];\n        if (!tracker) {\n            this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n        }\n        else {\n            tracker.configure(opts);\n        }\n    };\n    return AnalyticsClass;\n}());\nexport { AnalyticsClass };\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar listener = function (capsule) {\n    var channel = capsule.channel, payload = capsule.payload;\n    logger.debug('on hub capsule ' + channel, payload);\n    switch (channel) {\n        case 'auth':\n            authEvent(payload);\n            break;\n        case 'storage':\n            storageEvent(payload);\n            break;\n        case 'analytics':\n            analyticsEvent(payload);\n            break;\n        default:\n            break;\n    }\n};\nvar storageEvent = function (payload) {\n    var _a = payload.data, attrs = _a.attrs, metrics = _a.metrics;\n    if (!attrs)\n        return;\n    if (analyticsConfigured) {\n        _instance\n            .record({\n            name: 'Storage',\n            attributes: attrs,\n            metrics: metrics,\n        })\n            .catch(function (e) {\n            logger.debug('Failed to send the storage event automatically', e);\n        });\n    }\n};\nvar authEvent = function (payload) {\n    var event = payload.event;\n    if (!event) {\n        return;\n    }\n    var recordAuthEvent = function (eventName) { return __awaiter(void 0, void 0, void 0, function () {\n        var err_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(authConfigured && analyticsConfigured)) return [3 /*break*/, 4];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, _instance.record({ name: \"_userauth.\" + eventName })];\n                case 2: return [2 /*return*/, _a.sent()];\n                case 3:\n                    err_1 = _a.sent();\n                    logger.debug(\"Failed to send the \" + eventName + \" event automatically\", err_1);\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    }); };\n    switch (event) {\n        case 'signIn':\n            return recordAuthEvent('sign_in');\n        case 'signUp':\n            return recordAuthEvent('sign_up');\n        case 'signOut':\n            return recordAuthEvent('sign_out');\n        case 'signIn_failure':\n            return recordAuthEvent('auth_fail');\n        case 'configured':\n            authConfigured = true;\n            if (authConfigured && analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar analyticsEvent = function (payload) {\n    var event = payload.event;\n    if (!event)\n        return;\n    switch (event) {\n        case 'pinpointProvider_configured':\n            analyticsConfigured = true;\n            if (authConfigured && analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar sendEvents = function () {\n    var config = _instance.configure();\n    if (!endpointUpdated && config['autoSessionRecord']) {\n        _instance.updateEndpoint({ immediate: true }).catch(function (e) {\n            logger.debug('Failed to update the endpoint', e);\n        });\n        endpointUpdated = true;\n    }\n    _instance.autoTrack('session', {\n        enable: config['autoSessionRecord'],\n    });\n};\nexport var Analytics = new AnalyticsClass();\n//# sourceMappingURL=Analytics.js.map"]},"metadata":{},"sourceType":"module"}