{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { RestClient } from './RestClient';\nimport { Amplify, ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nvar logger = new Logger('RestAPI');\n/**\n * Export Cloud Logic APIs\n */\n\nvar RestAPIClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Rest API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function RestAPIClass(options) {\n    this._api = null;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n\n  RestAPIClass.prototype.getModuleName = function () {\n    return 'RestAPI';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n\n\n  RestAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n        _b = _a.API,\n        API = _b === void 0 ? {} : _b,\n        otherOptions = __rest(_a, [\"API\"]);\n\n    var opt = __assign(__assign({}, otherOptions), API);\n\n    logger.debug('configure Rest API', {\n      opt: opt\n    });\n\n    if (opt['aws_project_region']) {\n      if (opt['aws_cloud_logic_custom']) {\n        var custom = opt['aws_cloud_logic_custom'];\n        opt.endpoints = typeof custom === 'string' ? JSON.parse(custom) : custom;\n      }\n\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n\n    if (Array.isArray(opt.endpoints)) {\n      // Check if endpoints has custom_headers and validate if is a function\n      opt.endpoints.forEach(function (endpoint) {\n        if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n          logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');\n          endpoint.custom_header = undefined;\n        }\n      });\n    } else if (this._options && Array.isArray(this._options.endpoints)) {\n      opt.endpoints = this._options.endpoints;\n    } else {\n      opt.endpoints = [];\n    }\n\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n\n\n  RestAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest API instance');\n    this._api = new RestClient(this._options); // Share Amplify instance with client for SSR\n\n    this._api.Credentials = this.Credentials;\n    return true;\n  };\n  /**\n   * Make a GET request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.get = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.get(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a POST request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.post = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.post(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PUT request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.put = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.put(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PATCH request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.patch = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.patch(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a DEL request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.del = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.del(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a HEAD request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.head = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.head(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n\n\n  RestAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n\n\n  RestAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n\n\n  RestAPIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this._api.endpoint(apiName)];\n      });\n    });\n  };\n  /**\n   * Getting endpoint info for API\n   * @param {string} apiName - The name of the api\n   * @param {string} path - The path of the api that is going to accessed\n   * @return {ApiInfo} - The endpoint information for that api-name\n   */\n\n\n  RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {\n    var cloud_logic_array = this._options.endpoints;\n\n    if (!Array.isArray(cloud_logic_array)) {\n      throw new Error(\"API category not configured\");\n    }\n\n    var apiConfig = cloud_logic_array.find(function (api) {\n      return api.name === apiName;\n    });\n\n    if (!apiConfig) {\n      throw new Error(\"API \" + apiName + \" does not exist\");\n    }\n\n    var response = {\n      endpoint: apiConfig.endpoint + path\n    };\n\n    if (typeof apiConfig.region === 'string') {\n      response.region = apiConfig.region;\n    } else if (typeof this._options.region === 'string') {\n      response.region = this._options.region;\n    }\n\n    if (typeof apiConfig.service === 'string') {\n      response.service = apiConfig.service || 'execute-api';\n    } else {\n      response.service = 'execute-api';\n    }\n\n    if (typeof apiConfig.custom_header === 'function') {\n      response.custom_header = apiConfig.custom_header;\n    } else {\n      response.custom_header = undefined;\n    }\n\n    return response;\n  };\n\n  return RestAPIClass;\n}();\n\nexport { RestAPIClass };\nexport var RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);","map":{"version":3,"sources":["../src/RestAPI.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { RestClient } from './RestClient';\nimport { Amplify, ConsoleLogger as Logger, Credentials, } from '@aws-amplify/core';\nvar logger = new Logger('RestAPI');\n/**\n * Export Cloud Logic APIs\n */\nvar RestAPIClass = /** @class */ (function () {\n    /**\n     * Initialize Rest API with AWS configuration\n     * @param {Object} options - Configuration object for API\n     */\n    function RestAPIClass(options) {\n        this._api = null;\n        this.Credentials = Credentials;\n        this._options = options;\n        logger.debug('API Options', this._options);\n    }\n    RestAPIClass.prototype.getModuleName = function () {\n        return 'RestAPI';\n    };\n    /**\n     * Configure API part with aws configurations\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    RestAPIClass.prototype.configure = function (options) {\n        var _a = options || {}, _b = _a.API, API = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"API\"]);\n        var opt = __assign(__assign({}, otherOptions), API);\n        logger.debug('configure Rest API', { opt: opt });\n        if (opt['aws_project_region']) {\n            if (opt['aws_cloud_logic_custom']) {\n                var custom = opt['aws_cloud_logic_custom'];\n                opt.endpoints =\n                    typeof custom === 'string' ? JSON.parse(custom) : custom;\n            }\n            opt = Object.assign({}, opt, {\n                region: opt['aws_project_region'],\n                header: {},\n            });\n        }\n        if (Array.isArray(opt.endpoints)) {\n            // Check if endpoints has custom_headers and validate if is a function\n            opt.endpoints.forEach(function (endpoint) {\n                if (typeof endpoint.custom_header !== 'undefined' &&\n                    typeof endpoint.custom_header !== 'function') {\n                    logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');\n                    endpoint.custom_header = undefined;\n                }\n            });\n        }\n        else if (this._options && Array.isArray(this._options.endpoints)) {\n            opt.endpoints = this._options.endpoints;\n        }\n        else {\n            opt.endpoints = [];\n        }\n        this._options = Object.assign({}, this._options, opt);\n        this.createInstance();\n        return this._options;\n    };\n    /**\n     * Create an instance of API for the library\n     * @return - A promise of true if Success\n     */\n    RestAPIClass.prototype.createInstance = function () {\n        logger.debug('create Rest API instance');\n        this._api = new RestClient(this._options);\n        // Share Amplify instance with client for SSR\n        this._api.Credentials = this.Credentials;\n        return true;\n    };\n    /**\n     * Make a GET request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.get = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.get(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a POST request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.post = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.post(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a PUT request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.put = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.put(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a PATCH request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.patch = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.patch(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a DEL request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.del = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.del(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a HEAD request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.head = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.head(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    RestAPIClass.prototype.isCancel = function (error) {\n        return this._api.isCancel(error);\n    };\n    /**\n     * Cancels an inflight request\n     * @param {any} request - request to cancel\n     * @return {boolean} - A boolean indicating if the request was cancelled\n     */\n    RestAPIClass.prototype.cancel = function (request, message) {\n        return this._api.cancel(request, message);\n    };\n    /**\n     * Getting endpoint for API\n     * @param {string} apiName - The name of the api\n     * @return {string} - The endpoint of the api\n     */\n    RestAPIClass.prototype.endpoint = function (apiName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._api.endpoint(apiName)];\n            });\n        });\n    };\n    /**\n     * Getting endpoint info for API\n     * @param {string} apiName - The name of the api\n     * @param {string} path - The path of the api that is going to accessed\n     * @return {ApiInfo} - The endpoint information for that api-name\n     */\n    RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {\n        var cloud_logic_array = this._options.endpoints;\n        if (!Array.isArray(cloud_logic_array)) {\n            throw new Error(\"API category not configured\");\n        }\n        var apiConfig = cloud_logic_array.find(function (api) { return api.name === apiName; });\n        if (!apiConfig) {\n            throw new Error(\"API \" + apiName + \" does not exist\");\n        }\n        var response = {\n            endpoint: apiConfig.endpoint + path,\n        };\n        if (typeof apiConfig.region === 'string') {\n            response.region = apiConfig.region;\n        }\n        else if (typeof this._options.region === 'string') {\n            response.region = this._options.region;\n        }\n        if (typeof apiConfig.service === 'string') {\n            response.service = apiConfig.service || 'execute-api';\n        }\n        else {\n            response.service = 'execute-api';\n        }\n        if (typeof apiConfig.custom_header === 'function') {\n            response.custom_header = apiConfig.custom_header;\n        }\n        else {\n            response.custom_header = undefined;\n        }\n        return response;\n    };\n    return RestAPIClass;\n}());\nexport { RestAPIClass };\nexport var RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);\n//# sourceMappingURL=RestAPI.js.map"]},"metadata":{},"sourceType":"module"}