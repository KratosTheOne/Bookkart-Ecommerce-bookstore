{"ast":null,"code":"import { SIGNATURE_HEADER } from \"./constants\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\n/**\n * @internal\n */\n\nexport function getCanonicalQuery(_a) {\n  var _b = _a.query,\n      query = _b === void 0 ? {} : _b;\n  var keys = [];\n  var serialized = {};\n\n  var _loop_1 = function (key) {\n    if (key.toLowerCase() === SIGNATURE_HEADER) {\n      return \"continue\";\n    }\n\n    keys.push(key);\n    var value = query[key];\n\n    if (typeof value === \"string\") {\n      serialized[key] = escapeUri(key) + \"=\" + escapeUri(value);\n    } else if (Array.isArray(value)) {\n      serialized[key] = value.slice(0).sort().reduce(function (encoded, value) {\n        return encoded.concat([escapeUri(key) + \"=\" + escapeUri(value)]);\n      }, []).join(\"&\");\n    }\n  };\n\n  for (var _i = 0, _c = Object.keys(query).sort(); _i < _c.length; _i++) {\n    var key = _c[_i];\n\n    _loop_1(key);\n  }\n\n  return keys.map(function (key) {\n    return serialized[key];\n  }).filter(function (serialized) {\n    return serialized;\n  }) // omit any falsy values\n  .join(\"&\");\n}","map":{"version":3,"sources":["../../src/getCanonicalQuery.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,QAAiC,aAAjC;AAEA,SAAS,SAAT,QAA0B,0BAA1B;AAEA;;;;AAGA,OAAM,SAAU,iBAAV,CAA4B,EAA5B,EAAuD;MAAzB,EAAA,GAAA,EAAA,CAAA,K;MAAA,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,E;AAClC,MAAM,IAAI,GAAkB,EAA5B;AACA,MAAM,UAAU,GAA8B,EAA9C;;0BACS,G,EAAG;AACV,QAAI,GAAG,CAAC,WAAJ,OAAsB,gBAA1B,EAA4C;;AAE3C;;AAED,IAAA,IAAI,CAAC,IAAL,CAAU,GAAV;AACA,QAAM,KAAK,GAAG,KAAK,CAAC,GAAD,CAAnB;;AACA,QAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,MAAA,UAAU,CAAC,GAAD,CAAV,GAAqB,SAAS,CAAC,GAAD,CAAT,GAAc,GAAd,GAAkB,SAAS,CAAC,KAAD,CAAhD;AACD,KAFD,MAEO,IAAI,KAAK,CAAC,OAAN,CAAc,KAAd,CAAJ,EAA0B;AAC/B,MAAA,UAAU,CAAC,GAAD,CAAV,GAAkB,KAAK,CACpB,KADe,CACT,CADS,EAEf,IAFe,GAGf,MAHe,CAId,UAAC,OAAD,EAAyB,KAAzB,EAAsC;AACpC,eAAA,OAAO,CAAC,MAAR,CAAe,CAAI,SAAS,CAAC,GAAD,CAAT,GAAc,GAAd,GAAkB,SAAS,CAAC,KAAD,CAA/B,CAAf,CAAA;AAAyD,OAL7C,EAMd,EANc,EAQf,IARe,CAQV,GARU,CAAlB;AASD;;;AAnBH,OAAgB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,IAAnB,EAAhB,EAAgB,EAAA,GAAA,EAAA,CAAA,MAAhB,EAAgB,EAAA,EAAhB,EAAyC;AAApC,QAAI,GAAG,GAAA,EAAA,CAAA,EAAA,CAAP;;YAAI,G;AAoBR;;AAED,SAAO,IAAI,CACR,GADI,CACA,UAAA,GAAA,EAAG;AAAI,WAAA,UAAU,CAAV,GAAU,CAAV;AAAe,GADtB,EAEJ,MAFI,CAEG,UAAA,UAAA,EAAU;AAAI,WAAA,UAAA;AAAU,GAF3B,EAE6B;AAF7B,GAGJ,IAHI,CAGC,GAHD,CAAP;AAID","sourceRoot":"","sourcesContent":["import { SIGNATURE_HEADER } from \"./constants\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\n/**\n * @internal\n */\nexport function getCanonicalQuery(_a) {\n    var _b = _a.query, query = _b === void 0 ? {} : _b;\n    var keys = [];\n    var serialized = {};\n    var _loop_1 = function (key) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            return \"continue\";\n        }\n        keys.push(key);\n        var value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = escapeUri(key) + \"=\" + escapeUri(value);\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce(function (encoded, value) {\n                return encoded.concat([escapeUri(key) + \"=\" + escapeUri(value)]);\n            }, [])\n                .join(\"&\");\n        }\n    };\n    for (var _i = 0, _c = Object.keys(query).sort(); _i < _c.length; _i++) {\n        var key = _c[_i];\n        _loop_1(key);\n    }\n    return keys\n        .map(function (key) { return serialized[key]; })\n        .filter(function (serialized) { return serialized; }) // omit any falsy values\n        .join(\"&\");\n}\n//# sourceMappingURL=getCanonicalQuery.js.map"]},"metadata":{},"sourceType":"module"}