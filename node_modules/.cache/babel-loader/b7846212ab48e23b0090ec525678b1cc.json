{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketInventoryConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketInventoryConfigurationCommand, serializeAws_restXmlPutBucketInventoryConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This implementation of the <code>PUT</code> operation adds an inventory configuration\n *          (identified by the inventory ID) to the bucket. You can have up to 1,000 inventory\n *          configurations per bucket. </p>\n *          <p>Amazon S3 inventory generates inventories of the objects in the bucket on a daily or weekly\n *          basis, and the results are published to a flat file. The bucket that is inventoried is\n *          called the <i>source</i> bucket, and the bucket where the inventory flat file\n *          is stored is called the <i>destination</i> bucket. The\n *             <i>destination</i> bucket must be in the same AWS Region as the\n *             <i>source</i> bucket. </p>\n *          <p>When you configure an inventory for a <i>source</i> bucket, you specify\n *          the <i>destination</i> bucket where you want the inventory to be stored, and\n *          whether to generate the inventory daily or weekly. You can also configure what object\n *          metadata to include and whether to inventory all object versions or only current versions.\n *          For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3\n *             Inventory</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *          <important>\n *             <p>You must create a bucket policy on the <i>destination</i> bucket to\n *             grant permissions to Amazon S3 to write objects to the bucket in the defined location. For an\n *             example policy, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9\">\n *                Granting Permissions for Amazon S3 Inventory and Storage Class Analysis</a>.</p>\n *          </important>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default and can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *\n *          <p class=\"title\">\n *             <b>Special Errors</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> InvalidArgument</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> Invalid Argument</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> TooManyConfigurations</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are attempting to create a new configuration\n *                      but have already reached the 1,000-configuration limit. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 403 Forbidden Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> AccessDenied</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are not the owner of the specified bucket,\n *                      or you do not have the <code>s3:PutInventoryConfiguration</code> bucket\n *                      permission to set the configuration on the bucket. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html\">GetBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html\">ListBucketInventoryConfigurations</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutBucketInventoryConfigurationCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutBucketInventoryConfigurationCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutBucketInventoryConfigurationCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutBucketInventoryConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketInventoryConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketInventoryConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutBucketInventoryConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context);\n  };\n\n  PutBucketInventoryConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context);\n  };\n\n  return PutBucketInventoryConfigurationCommand;\n}($Command);\n\nexport { PutBucketInventoryConfigurationCommand };","map":{"version":3,"sources":["../../../commands/PutBucketInventoryConfigurationCommand.ts"],"names":[],"mappings":";AACA,SAAS,sCAAT,QAAuD,oBAAvD;AACA,SACE,4DADF,EAEE,0DAFF,QAGO,0BAHP;AAIA,SAAS,uBAAT,QAAwC,qCAAxC;AACA,SAAS,cAAT,QAA+B,2BAA/B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGG;;AACH,IAAA,sCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4D,EAAA,SAAA,CAAA,sCAAA,EAAA,MAAA,CAAA,CAA5D,CAKE;AACA;;;AAEA,WAAA,sCAAA,CAAqB,KAArB,EAAuE;AAAvE,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAAkD,CAGrE;AACD;AAED;;AAEG;;;AACH,EAAA,sCAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AACA,SAAK,eAAL,CAAqB,GAArB,CAAyB,uBAAuB,CAAC,aAAD,CAAhD;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,UAAnB;AACA,QAAM,WAAW,GAAG,wCAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,sCAAsC,CAAC,kBAJT;AAKvD,MAAA,wBAAwB,EAAE,UAAC,MAAD,EAAY;AAAK,eAAA,MAAA;AAAM;AALM,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GA1BD;;AA4BQ,EAAA,sCAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UACE,KADF,EAEE,OAFF,EAEyB;AAEvB,WAAO,0DAA0D,CAAC,KAAD,EAAQ,OAAR,CAAjE;AACD,GALO;;AAOA,EAAA,sCAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UACE,MADF,EAEE,OAFF,EAEyB;AAEvB,WAAO,4DAA4D,CAAC,MAAD,EAAS,OAAT,CAAnE;AACD,GALO;;AASV,SAAA,sCAAA;AAAC,CA7DD,CAA4D,QAA5D,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { PutBucketInventoryConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketInventoryConfigurationCommand, serializeAws_restXmlPutBucketInventoryConfigurationCommand, } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This implementation of the <code>PUT</code> operation adds an inventory configuration\n *          (identified by the inventory ID) to the bucket. You can have up to 1,000 inventory\n *          configurations per bucket. </p>\n *          <p>Amazon S3 inventory generates inventories of the objects in the bucket on a daily or weekly\n *          basis, and the results are published to a flat file. The bucket that is inventoried is\n *          called the <i>source</i> bucket, and the bucket where the inventory flat file\n *          is stored is called the <i>destination</i> bucket. The\n *             <i>destination</i> bucket must be in the same AWS Region as the\n *             <i>source</i> bucket. </p>\n *          <p>When you configure an inventory for a <i>source</i> bucket, you specify\n *          the <i>destination</i> bucket where you want the inventory to be stored, and\n *          whether to generate the inventory daily or weekly. You can also configure what object\n *          metadata to include and whether to inventory all object versions or only current versions.\n *          For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3\n *             Inventory</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *          <important>\n *             <p>You must create a bucket policy on the <i>destination</i> bucket to\n *             grant permissions to Amazon S3 to write objects to the bucket in the defined location. For an\n *             example policy, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9\">\n *                Granting Permissions for Amazon S3 Inventory and Storage Class Analysis</a>.</p>\n *          </important>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default and can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *\n *          <p class=\"title\">\n *             <b>Special Errors</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> InvalidArgument</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> Invalid Argument</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> TooManyConfigurations</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are attempting to create a new configuration\n *                      but have already reached the 1,000-configuration limit. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 403 Forbidden Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> AccessDenied</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are not the owner of the specified bucket,\n *                      or you do not have the <code>s3:PutInventoryConfiguration</code> bucket\n *                      permission to set the configuration on the bucket. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html\">GetBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html\">ListBucketInventoryConfigurations</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutBucketInventoryConfigurationCommand = /** @class */ (function (_super) {\n    __extends(PutBucketInventoryConfigurationCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function PutBucketInventoryConfigurationCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    PutBucketInventoryConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"PutBucketInventoryConfigurationCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: PutBucketInventoryConfigurationRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: function (output) { return output; },\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    PutBucketInventoryConfigurationCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context);\n    };\n    PutBucketInventoryConfigurationCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context);\n    };\n    return PutBucketInventoryConfigurationCommand;\n}($Command));\nexport { PutBucketInventoryConfigurationCommand };\n//# sourceMappingURL=PutBucketInventoryConfigurationCommand.js.map"]},"metadata":{},"sourceType":"module"}