{"ast":null,"code":"/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\n// Build indexes outside so we allocate them once.\nvar days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]; // prettier-ignore\n\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n  var year = date.getUTCFullYear();\n  var month = date.getUTCMonth();\n  var dayOfWeek = date.getUTCDay();\n  var dayOfMonthInt = date.getUTCDate();\n  var hoursInt = date.getUTCHours();\n  var minutesInt = date.getUTCMinutes();\n  var secondsInt = date.getUTCSeconds(); // Build 0 prefixed strings for contents that need to be\n  // two digits and where we get an integer back.\n\n  var dayOfMonthString = dayOfMonthInt < 10 ? \"0\" + dayOfMonthInt : \"\" + dayOfMonthInt;\n  var hoursString = hoursInt < 10 ? \"0\" + hoursInt : \"\" + hoursInt;\n  var minutesString = minutesInt < 10 ? \"0\" + minutesInt : \"\" + minutesInt;\n  var secondsString = secondsInt < 10 ? \"0\" + secondsInt : \"\" + secondsInt;\n  return days[dayOfWeek] + \", \" + dayOfMonthString + \" \" + months[month] + \" \" + year + \" \" + hoursString + \":\" + minutesString + \":\" + secondsString + \" GMT\";\n}","map":{"version":3,"sources":["../../src/date-utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUG;AAEH;AACA,IAAM,IAAI,GAAkB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAA5B,C,CACA;;AACA,IAAM,MAAM,GAAkB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAA9B;AAEA,OAAM,SAAU,eAAV,CAA0B,IAA1B,EAAoC;AACxC,MAAM,IAAI,GAAG,IAAI,CAAC,cAAL,EAAb;AACA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAL,EAAd;AACA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAL,EAAlB;AACA,MAAM,aAAa,GAAG,IAAI,CAAC,UAAL,EAAtB;AACA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAL,EAAjB;AACA,MAAM,UAAU,GAAG,IAAI,CAAC,aAAL,EAAnB;AACA,MAAM,UAAU,GAAG,IAAI,CAAC,aAAL,EAAnB,CAPwC,CASxC;AACA;;AACA,MAAM,gBAAgB,GAAG,aAAa,GAAG,EAAhB,GAAqB,MAAI,aAAzB,GAA2C,KAAG,aAAvE;AACA,MAAM,WAAW,GAAG,QAAQ,GAAG,EAAX,GAAgB,MAAI,QAApB,GAAiC,KAAG,QAAxD;AACA,MAAM,aAAa,GAAG,UAAU,GAAG,EAAb,GAAkB,MAAI,UAAtB,GAAqC,KAAG,UAA9D;AACA,MAAM,aAAa,GAAG,UAAU,GAAG,EAAb,GAAkB,MAAI,UAAtB,GAAqC,KAAG,UAA9D;AAEA,SAAU,IAAI,CAAC,SAAD,CAAJ,GAAe,IAAf,GAAoB,gBAApB,GAAoC,GAApC,GAAwC,MAAM,CAAC,KAAD,CAA9C,GAAqD,GAArD,GAAyD,IAAzD,GAA6D,GAA7D,GAAiE,WAAjE,GAA4E,GAA5E,GAAgF,aAAhF,GAA6F,GAA7F,GAAiG,aAAjG,GAA8G,MAAxH;AACD","sourcesContent":["/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\n\n// Build indexes outside so we allocate them once.\nconst days: Array<String> = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n// prettier-ignore\nconst months: Array<String> = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport function dateToUtcString(date: Date): string {\n  const year = date.getUTCFullYear();\n  const month = date.getUTCMonth();\n  const dayOfWeek = date.getUTCDay();\n  const dayOfMonthInt = date.getUTCDate();\n  const hoursInt = date.getUTCHours();\n  const minutesInt = date.getUTCMinutes();\n  const secondsInt = date.getUTCSeconds();\n\n  // Build 0 prefixed strings for contents that need to be\n  // two digits and where we get an integer back.\n  const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n  const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n  const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n  const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n\n  return `${days[dayOfWeek]}, ${dayOfMonthString} ${months[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}