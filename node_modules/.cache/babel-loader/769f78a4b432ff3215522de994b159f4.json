{"ast":null,"code":"import { __assign, __rest, __spreadArrays } from \"tslib\";\n/**\n * @internal\n */\n\nexport function cloneRequest(_a) {\n  var headers = _a.headers,\n      query = _a.query,\n      rest = __rest(_a, [\"headers\", \"query\"]);\n\n  return __assign(__assign({}, rest), {\n    headers: __assign({}, headers),\n    query: query ? cloneQuery(query) : undefined\n  });\n}\n\nfunction cloneQuery(query) {\n  return Object.keys(query).reduce(function (carry, paramName) {\n    var _a;\n\n    var param = query[paramName];\n    return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spreadArrays(param) : param, _a));\n  }, {});\n}","map":{"version":3,"sources":["../../src/cloneRequest.ts"],"names":[],"mappings":";AAEA;;;;AAGA,OAAM,SAAU,YAAV,CAAuB,EAAvB,EAIQ;AAHZ,MAAA,OAAA,GAAA,EAAA,CAAA,OAAA;AAAA,MACA,KAAA,GAAA,EAAA,CAAA,KADA;AAAA,MAEA,IAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,SAAA,EAAA,OAAA,CAAA,CAFA;;AAIA,SAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,IADL,CAAA,EACS;AACP,IAAA,OAAO,EAAA,QAAA,CAAA,EAAA,EAAO,OAAP,CADA;AAEP,IAAA,KAAK,EAAE,KAAK,GAAG,UAAU,CAAC,KAAD,CAAb,GAAuB;AAF5B,GADT,CAAA;AAKD;;AAED,SAAS,UAAT,CAAoB,KAApB,EAA4C;AAC1C,SAAO,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,MAAnB,CACL,UAAC,KAAD,EAA2B,SAA3B,EAA4C;;;AAC1C,QAAM,KAAK,GAAG,KAAK,CAAC,SAAD,CAAnB;AACA,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,KADL,CAAA,GACU,EAAA,GAAA,EAAA,EAAA,EAAA,CACP,SADO,CAAA,GACK,KAAK,CAAC,OAAN,CAAc,KAAd,IAAsB,cAAA,CAAK,KAAL,CAAtB,GAAoC,KADzC,EAC8C,EAFxD,EAAA;AAID,GAPI,EAQL,EARK,CAAP;AAUD","sourceRoot":"","sourcesContent":["import { __assign, __rest, __spreadArrays } from \"tslib\";\n/**\n * @internal\n */\nexport function cloneRequest(_a) {\n    var headers = _a.headers, query = _a.query, rest = __rest(_a, [\"headers\", \"query\"]);\n    return __assign(__assign({}, rest), { headers: __assign({}, headers), query: query ? cloneQuery(query) : undefined });\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce(function (carry, paramName) {\n        var _a;\n        var param = query[paramName];\n        return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spreadArrays(param) : param, _a));\n    }, {});\n}\n//# sourceMappingURL=cloneRequest.js.map"]},"metadata":{},"sourceType":"module"}