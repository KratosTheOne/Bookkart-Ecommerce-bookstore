{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { LookupDeveloperIdentityInput, LookupDeveloperIdentityResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1LookupDeveloperIdentityCommand, serializeAws_json1_1LookupDeveloperIdentityCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Retrieves the <code>IdentityID</code> associated with a\n *             <code>DeveloperUserIdentifier</code> or the list of <code>DeveloperUserIdentifier</code>\n *          values associated with an <code>IdentityId</code> for an existing identity. Either\n *             <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not be null. If you\n *          supply only one of these values, the other value will be searched in the database and\n *          returned as a part of the response. If you supply both,\n *             <code>DeveloperUserIdentifier</code> will be matched against <code>IdentityID</code>. If\n *          the values are verified against the database, the response returns both values and is the\n *          same as the request. Otherwise a <code>ResourceConflictException</code> is\n *          thrown.</p>\n *          <p>\n *             <code>LookupDeveloperIdentity</code> is intended for low-throughput control plane\n *          operations: for example, to enable customer service to locate an identity ID by username.\n *          If you are using it for higher-volume operations such as user authentication, your requests\n *          are likely to be throttled. <a>GetOpenIdTokenForDeveloperIdentity</a> is a\n *          better option for higher-volume operations for user authentication.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\n\nvar LookupDeveloperIdentityCommand =\n/** @class */\nfunction (_super) {\n  __extends(LookupDeveloperIdentityCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function LookupDeveloperIdentityCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  LookupDeveloperIdentityCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"CognitoIdentityClient\";\n    var commandName = \"LookupDeveloperIdentityCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: LookupDeveloperIdentityInput.filterSensitiveLog,\n      outputFilterSensitiveLog: LookupDeveloperIdentityResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  LookupDeveloperIdentityCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1LookupDeveloperIdentityCommand(input, context);\n  };\n\n  LookupDeveloperIdentityCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1LookupDeveloperIdentityCommand(output, context);\n  };\n\n  return LookupDeveloperIdentityCommand;\n}($Command);\n\nexport { LookupDeveloperIdentityCommand };","map":{"version":3,"sources":["../../../commands/LookupDeveloperIdentityCommand.ts"],"names":[],"mappings":";AACA,SAAS,4BAAT,EAAuC,+BAAvC,QAA8E,oBAA9E;AACA,SACE,oDADF,EAEE,kDAFF,QAGO,0BAHP;AAIA,SAAS,cAAT,QAA+B,2BAA/B;AACA,SAAS,gBAAT,QAAiC,6BAAjC;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;AAkBG;;AACH,IAAA,8BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,SAAA,CAAA,8BAAA,EAAA,MAAA,CAAA,CAApD,CAKE;AACA;;;AAEA,WAAA,8BAAA,CAAqB,KAArB,EAA+D;AAA/D,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAA0C,CAG7D;AACD;AAED;;AAEG;;;AACH,EAAA,8BAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AACA,SAAK,eAAL,CAAqB,GAArB,CAAyB,gBAAgB,CAAC,aAAD,CAAzC;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,uBAAnB;AACA,QAAM,WAAW,GAAG,gCAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,4BAA4B,CAAC,kBAJC;AAKvD,MAAA,wBAAwB,EAAE,+BAA+B,CAAC;AALH,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GA1BD;;AA4BQ,EAAA,8BAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,KAAlB,EAA8D,OAA9D,EAAqF;AACnF,WAAO,kDAAkD,CAAC,KAAD,EAAQ,OAAR,CAAzD;AACD,GAFO;;AAIA,EAAA,8BAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAA4C,OAA5C,EAAmE;AACjE,WAAO,oDAAoD,CAAC,MAAD,EAAS,OAAT,CAA3D;AACD,GAFO;;AAMV,SAAA,8BAAA;AAAC,CAvDD,CAAoD,QAApD,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { LookupDeveloperIdentityInput, LookupDeveloperIdentityResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1LookupDeveloperIdentityCommand, serializeAws_json1_1LookupDeveloperIdentityCommand, } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Retrieves the <code>IdentityID</code> associated with a\n *             <code>DeveloperUserIdentifier</code> or the list of <code>DeveloperUserIdentifier</code>\n *          values associated with an <code>IdentityId</code> for an existing identity. Either\n *             <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not be null. If you\n *          supply only one of these values, the other value will be searched in the database and\n *          returned as a part of the response. If you supply both,\n *             <code>DeveloperUserIdentifier</code> will be matched against <code>IdentityID</code>. If\n *          the values are verified against the database, the response returns both values and is the\n *          same as the request. Otherwise a <code>ResourceConflictException</code> is\n *          thrown.</p>\n *          <p>\n *             <code>LookupDeveloperIdentity</code> is intended for low-throughput control plane\n *          operations: for example, to enable customer service to locate an identity ID by username.\n *          If you are using it for higher-volume operations such as user authentication, your requests\n *          are likely to be throttled. <a>GetOpenIdTokenForDeveloperIdentity</a> is a\n *          better option for higher-volume operations for user authentication.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nvar LookupDeveloperIdentityCommand = /** @class */ (function (_super) {\n    __extends(LookupDeveloperIdentityCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function LookupDeveloperIdentityCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    LookupDeveloperIdentityCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getAwsAuthPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"CognitoIdentityClient\";\n        var commandName = \"LookupDeveloperIdentityCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: LookupDeveloperIdentityInput.filterSensitiveLog,\n            outputFilterSensitiveLog: LookupDeveloperIdentityResponse.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    LookupDeveloperIdentityCommand.prototype.serialize = function (input, context) {\n        return serializeAws_json1_1LookupDeveloperIdentityCommand(input, context);\n    };\n    LookupDeveloperIdentityCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_json1_1LookupDeveloperIdentityCommand(output, context);\n    };\n    return LookupDeveloperIdentityCommand;\n}($Command));\nexport { LookupDeveloperIdentityCommand };\n//# sourceMappingURL=LookupDeveloperIdentityCommand.js.map"]},"metadata":{},"sourceType":"module"}