{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n/**\n * Convert ReadableStream into an async iterable.\n */\n\n\nfunction ReadableStreamtoIterable(readableStream) {\n  return tslib_1.__asyncGenerator(this, arguments, function ReadableStreamtoIterable_1() {\n    var reader, done, _a, end, value;\n\n    return tslib_1.__generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          reader = readableStream.getReader();\n          done = false;\n          _b.label = 1;\n\n        case 1:\n          if (!!done) return [3\n          /*break*/\n          , 6];\n          return [4\n          /*yield*/\n          , tslib_1.__await(reader.read())];\n\n        case 2:\n          _a = _b.sent(), end = _a.done, value = _a.value;\n\n          if (end) {\n            done = true;\n            return [3\n            /*break*/\n            , 6];\n          }\n\n          if (!value) return [3\n          /*break*/\n          , 5];\n          return [4\n          /*yield*/\n          , tslib_1.__await(value)];\n\n        case 3:\n          return [4\n          /*yield*/\n          , _b.sent()];\n\n        case 4:\n          _b.sent();\n\n          _b.label = 5;\n\n        case 5:\n          return [3\n          /*break*/\n          , 1];\n\n        case 6:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.ReadableStreamtoIterable = ReadableStreamtoIterable;","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;;AAGA,SAAuB,wBAAvB,CACE,cADF,EACgC;;;;;;;AAExB,UAAA,MAAM,GAAG,cAAc,CAAC,SAAf,EAAT;AACF,UAAA,IAAI,GAAG,KAAP;;;;eACG,CAAC,I,EAAI,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AACmB,iBAAA,CAAA;AAAA;AAAA,YAAA,OAAA,CAAA,OAAA,CAAM,MAAM,CAAC,IAAP,EAAN,CAAA,CAAA;;;AAAvB,UAAA,EAAA,GAAuB,EAAA,CAAA,IAAA,EAAvB,EAAQ,GAAG,GAAA,EAAA,CAAA,IAAX,EAAa,KAAK,GAAA,EAAA,CAAA,KAAlB;;AACN,cAAI,GAAJ,EAAS;AACP,YAAA,IAAI,GAAG,IAAP;AACA,mBAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AACD;;eACG,K,EAAA,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;4BACI,K;;;AAAN,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA,IAAA,EAAA,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;;;;;;;;;;;;AAGL;;AAfD,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourcesContent":["/**\n * Convert ReadableStream into an async iterable.\n */\nexport async function* ReadableStreamtoIterable<T>(\n  readableStream: ReadableStream\n): AsyncIterable<T> {\n  const reader = readableStream.getReader();\n  let done = false;\n  while (!done) {\n    const { done: end, value } = await reader.read();\n    if (end) {\n      done = true;\n      break;\n    }\n    if (value) {\n      yield value;\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}