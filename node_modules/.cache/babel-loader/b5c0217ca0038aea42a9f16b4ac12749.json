{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { AddTagsToStreamInput } from \"../models/models_0\";\nimport { deserializeAws_json1_1AddTagsToStreamCommand, serializeAws_json1_1AddTagsToStreamCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Adds or updates tags for the specified Kinesis data stream. Each time you invoke\n *             this operation, you can specify up to 10 tags. If you want to add more than 10 tags to\n *             your stream, you can invoke this operation multiple times. In total, each stream can\n *             have up to 50 tags.</p>\n *         <p>If tags have already been assigned to the stream, <code>AddTagsToStream</code>\n *             overwrites any existing tags that correspond to the specified tag keys.</p>\n *         <p>\n *             <a>AddTagsToStream</a> has a limit of five transactions per second per\n *             account.</p>\n */\n\nvar AddTagsToStreamCommand =\n/** @class */\nfunction (_super) {\n  __extends(AddTagsToStreamCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function AddTagsToStreamCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  AddTagsToStreamCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"KinesisClient\";\n    var commandName = \"AddTagsToStreamCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: AddTagsToStreamInput.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  AddTagsToStreamCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1AddTagsToStreamCommand(input, context);\n  };\n\n  AddTagsToStreamCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1AddTagsToStreamCommand(output, context);\n  };\n\n  return AddTagsToStreamCommand;\n}($Command);\n\nexport { AddTagsToStreamCommand };","map":{"version":3,"sources":["../../../commands/AddTagsToStreamCommand.ts"],"names":[],"mappings":";AACA,SAAS,oBAAT,QAAqC,oBAArC;AACA,SACE,4CADF,EAEE,0CAFF,QAGO,0BAHP;AAIA,SAAS,cAAT,QAA+B,2BAA/B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;AAUG;;AACH,IAAA,sBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4C,EAAA,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA,CAA5C,CAKE;AACA;;;AAEA,WAAA,sBAAA,CAAqB,KAArB,EAAuD;AAAvD,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAAkC,CAGrD;AACD;AAED;;AAEG;;;AACH,EAAA,sBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,eAAnB;AACA,QAAM,WAAW,GAAG,wBAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,oBAAoB,CAAC,kBAJS;AAKvD,MAAA,wBAAwB,EAAE,UAAC,MAAD,EAAY;AAAK,eAAA,MAAA;AAAM;AALM,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GAzBD;;AA2BQ,EAAA,sBAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,KAAlB,EAAsD,OAAtD,EAA6E;AAC3E,WAAO,0CAA0C,CAAC,KAAD,EAAQ,OAAR,CAAjD;AACD,GAFO;;AAIA,EAAA,sBAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAA4C,OAA5C,EAAmE;AACjE,WAAO,4CAA4C,CAAC,MAAD,EAAS,OAAT,CAAnD;AACD,GAFO;;AAMV,SAAA,sBAAA;AAAC,CAtDD,CAA4C,QAA5C,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { AddTagsToStreamInput } from \"../models/models_0\";\nimport { deserializeAws_json1_1AddTagsToStreamCommand, serializeAws_json1_1AddTagsToStreamCommand, } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Adds or updates tags for the specified Kinesis data stream. Each time you invoke\n *             this operation, you can specify up to 10 tags. If you want to add more than 10 tags to\n *             your stream, you can invoke this operation multiple times. In total, each stream can\n *             have up to 50 tags.</p>\n *         <p>If tags have already been assigned to the stream, <code>AddTagsToStream</code>\n *             overwrites any existing tags that correspond to the specified tag keys.</p>\n *         <p>\n *             <a>AddTagsToStream</a> has a limit of five transactions per second per\n *             account.</p>\n */\nvar AddTagsToStreamCommand = /** @class */ (function (_super) {\n    __extends(AddTagsToStreamCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function AddTagsToStreamCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    AddTagsToStreamCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"KinesisClient\";\n        var commandName = \"AddTagsToStreamCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: AddTagsToStreamInput.filterSensitiveLog,\n            outputFilterSensitiveLog: function (output) { return output; },\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    AddTagsToStreamCommand.prototype.serialize = function (input, context) {\n        return serializeAws_json1_1AddTagsToStreamCommand(input, context);\n    };\n    AddTagsToStreamCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_json1_1AddTagsToStreamCommand(output, context);\n    };\n    return AddTagsToStreamCommand;\n}($Command));\nexport { AddTagsToStreamCommand };\n//# sourceMappingURL=AddTagsToStreamCommand.js.map"]},"metadata":{},"sourceType":"module"}