{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CreateBucketOutput, CreateBucketRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlCreateBucketCommand, serializeAws_restXmlCreateBucketCommand } from \"../protocols/Aws_restXml\";\nimport { getLocationConstraintPlugin } from \"@aws-sdk/middleware-location-constraint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Creates a new S3 bucket. To create a bucket, you must register with Amazon S3 and have a\n *          valid AWS Access Key ID to authenticate requests. Anonymous requests are never allowed to\n *          create buckets. By creating the bucket, you become the bucket owner.</p>\n *          <p>Not every string is an acceptable bucket name. For information about bucket naming\n *          restrictions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html\">Working with Amazon S3\n *             buckets</a>. </p>\n *          <p>If you want to create an Amazon S3 on Outposts bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html\">Create Bucket</a>. </p>\n *          <p>By default, the bucket is created in the US East (N. Virginia) Region. You can\n *          optionally specify a Region in the request body. You might choose a Region to optimize\n *          latency, minimize costs, or address regulatory requirements. For example, if you reside in\n *          Europe, you will probably find it advantageous to create buckets in the Europe (Ireland)\n *          Region. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro\">Accessing a\n *          bucket</a>.</p>\n *          <note>\n *             <p>If you send your create bucket request to the <code>s3.amazonaws.com</code> endpoint,\n *             the request goes to the us-east-1 Region. Accordingly, the signature calculations in\n *             Signature Version 4 must use us-east-1 as the Region, even if the location constraint in\n *             the request specifies another Region where the bucket is to be created. If you create a\n *             bucket in a Region other than US East (N. Virginia), your application must be able to\n *             handle 307 redirect. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html\">Virtual hosting of buckets</a>.</p>\n *          </note>\n *          <p>When creating a bucket using this operation, you can optionally specify the accounts or\n *          groups that should be granted specific permissions on the bucket. There are two ways to\n *          grant the appropriate permissions using the request headers.</p>\n *          <ul>\n *             <li>\n *                <p>Specify a canned ACL using the <code>x-amz-acl</code> request header. Amazon S3\n *                supports a set of predefined ACLs, known as <i>canned ACLs</i>. Each\n *                canned ACL has a predefined set of grantees and permissions. For more information,\n *                see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned ACL</a>.</p>\n *             </li>\n *             <li>\n *                <p>Specify access permissions explicitly using the <code>x-amz-grant-read</code>,\n *                   <code>x-amz-grant-write</code>, <code>x-amz-grant-read-acp</code>,\n *                   <code>x-amz-grant-write-acp</code>, and <code>x-amz-grant-full-control</code>\n *                headers. These headers map to the set of permissions Amazon S3 supports in an ACL. For\n *                more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access control list\n *                   (ACL) overview</a>.</p>\n *                <p>You specify each grantee as a type=value pair, where the type is one of the\n *                following:</p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>id</code> – if the value specified is the canonical user ID of an AWS\n *                      account</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>uri</code> – if you are granting permissions to a predefined\n *                      group</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>emailAddress</code> – if the value specified is the email address of\n *                      an AWS account</p>\n *                      <note>\n *                         <p>Using email addresses to specify a grantee is only supported in the following AWS Regions: </p>\n *                         <ul>\n *                            <li>\n *                               <p>US East (N. Virginia)</p>\n *                            </li>\n *                            <li>\n *                               <p>US West (N. California)</p>\n *                            </li>\n *                            <li>\n *                               <p> US West (Oregon)</p>\n *                            </li>\n *                            <li>\n *                               <p> Asia Pacific (Singapore)</p>\n *                            </li>\n *                            <li>\n *                               <p>Asia Pacific (Sydney)</p>\n *                            </li>\n *                            <li>\n *                               <p>Asia Pacific (Tokyo)</p>\n *                            </li>\n *                            <li>\n *                               <p>Europe (Ireland)</p>\n *                            </li>\n *                            <li>\n *                               <p>South America (São Paulo)</p>\n *                            </li>\n *                         </ul>\n *                         <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> in the AWS General Reference.</p>\n *                      </note>\n *                   </li>\n *                </ul>\n *                <p>For example, the following <code>x-amz-grant-read</code> header grants the AWS accounts identified by account IDs permissions to read object data and its metadata:</p>\n *                <p>\n *                   <code>x-amz-grant-read: id=\"11112222333\", id=\"444455556666\" </code>\n *                </p>\n *             </li>\n *          </ul>\n *          <note>\n *             <p>You can use either a canned ACL or specify access permissions explicitly. You cannot\n *             do both.</p>\n *          </note>\n *\n *\n *          <p>The following operations are related to <code>CreateBucket</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html\">DeleteBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar CreateBucketCommand =\n/** @class */\nfunction (_super) {\n  __extends(CreateBucketCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function CreateBucketCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  CreateBucketCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getLocationConstraintPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"CreateBucketCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: CreateBucketRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: CreateBucketOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  CreateBucketCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlCreateBucketCommand(input, context);\n  };\n\n  CreateBucketCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlCreateBucketCommand(output, context);\n  };\n\n  return CreateBucketCommand;\n}($Command);\n\nexport { CreateBucketCommand };","map":{"version":3,"sources":["../../../commands/CreateBucketCommand.ts"],"names":[],"mappings":";AACA,SAAS,kBAAT,EAA6B,mBAA7B,QAAwD,oBAAxD;AACA,SACE,yCADF,EAEE,uCAFF,QAGO,0BAHP;AAIA,SAAS,2BAAT,QAA4C,yCAA5C;AACA,SAAS,cAAT,QAA+B,2BAA/B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHG;;AACH,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAzC,CAKE;AACA;;;AAEA,WAAA,mBAAA,CAAqB,KAArB,EAAoD;AAApD,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAA+B,CAGlD;AACD;AAED;;AAEG;;;AACH,EAAA,mBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AACA,SAAK,eAAL,CAAqB,GAArB,CAAyB,2BAA2B,CAAC,aAAD,CAApD;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,UAAnB;AACA,QAAM,WAAW,GAAG,qBAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,mBAAmB,CAAC,kBAJU;AAKvD,MAAA,wBAAwB,EAAE,kBAAkB,CAAC;AALU,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GA1BD;;AA4BQ,EAAA,mBAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,KAAlB,EAAmD,OAAnD,EAA0E;AACxE,WAAO,uCAAuC,CAAC,KAAD,EAAQ,OAAR,CAA9C;AACD,GAFO;;AAIA,EAAA,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAA4C,OAA5C,EAAmE;AACjE,WAAO,yCAAyC,CAAC,MAAD,EAAS,OAAT,CAAhD;AACD,GAFO;;AAMV,SAAA,mBAAA;AAAC,CAvDD,CAAyC,QAAzC,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { CreateBucketOutput, CreateBucketRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlCreateBucketCommand, serializeAws_restXmlCreateBucketCommand, } from \"../protocols/Aws_restXml\";\nimport { getLocationConstraintPlugin } from \"@aws-sdk/middleware-location-constraint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Creates a new S3 bucket. To create a bucket, you must register with Amazon S3 and have a\n *          valid AWS Access Key ID to authenticate requests. Anonymous requests are never allowed to\n *          create buckets. By creating the bucket, you become the bucket owner.</p>\n *          <p>Not every string is an acceptable bucket name. For information about bucket naming\n *          restrictions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html\">Working with Amazon S3\n *             buckets</a>. </p>\n *          <p>If you want to create an Amazon S3 on Outposts bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html\">Create Bucket</a>. </p>\n *          <p>By default, the bucket is created in the US East (N. Virginia) Region. You can\n *          optionally specify a Region in the request body. You might choose a Region to optimize\n *          latency, minimize costs, or address regulatory requirements. For example, if you reside in\n *          Europe, you will probably find it advantageous to create buckets in the Europe (Ireland)\n *          Region. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro\">Accessing a\n *          bucket</a>.</p>\n *          <note>\n *             <p>If you send your create bucket request to the <code>s3.amazonaws.com</code> endpoint,\n *             the request goes to the us-east-1 Region. Accordingly, the signature calculations in\n *             Signature Version 4 must use us-east-1 as the Region, even if the location constraint in\n *             the request specifies another Region where the bucket is to be created. If you create a\n *             bucket in a Region other than US East (N. Virginia), your application must be able to\n *             handle 307 redirect. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html\">Virtual hosting of buckets</a>.</p>\n *          </note>\n *          <p>When creating a bucket using this operation, you can optionally specify the accounts or\n *          groups that should be granted specific permissions on the bucket. There are two ways to\n *          grant the appropriate permissions using the request headers.</p>\n *          <ul>\n *             <li>\n *                <p>Specify a canned ACL using the <code>x-amz-acl</code> request header. Amazon S3\n *                supports a set of predefined ACLs, known as <i>canned ACLs</i>. Each\n *                canned ACL has a predefined set of grantees and permissions. For more information,\n *                see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned ACL</a>.</p>\n *             </li>\n *             <li>\n *                <p>Specify access permissions explicitly using the <code>x-amz-grant-read</code>,\n *                   <code>x-amz-grant-write</code>, <code>x-amz-grant-read-acp</code>,\n *                   <code>x-amz-grant-write-acp</code>, and <code>x-amz-grant-full-control</code>\n *                headers. These headers map to the set of permissions Amazon S3 supports in an ACL. For\n *                more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access control list\n *                   (ACL) overview</a>.</p>\n *                <p>You specify each grantee as a type=value pair, where the type is one of the\n *                following:</p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>id</code> – if the value specified is the canonical user ID of an AWS\n *                      account</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>uri</code> – if you are granting permissions to a predefined\n *                      group</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>emailAddress</code> – if the value specified is the email address of\n *                      an AWS account</p>\n *                      <note>\n *                         <p>Using email addresses to specify a grantee is only supported in the following AWS Regions: </p>\n *                         <ul>\n *                            <li>\n *                               <p>US East (N. Virginia)</p>\n *                            </li>\n *                            <li>\n *                               <p>US West (N. California)</p>\n *                            </li>\n *                            <li>\n *                               <p> US West (Oregon)</p>\n *                            </li>\n *                            <li>\n *                               <p> Asia Pacific (Singapore)</p>\n *                            </li>\n *                            <li>\n *                               <p>Asia Pacific (Sydney)</p>\n *                            </li>\n *                            <li>\n *                               <p>Asia Pacific (Tokyo)</p>\n *                            </li>\n *                            <li>\n *                               <p>Europe (Ireland)</p>\n *                            </li>\n *                            <li>\n *                               <p>South America (São Paulo)</p>\n *                            </li>\n *                         </ul>\n *                         <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> in the AWS General Reference.</p>\n *                      </note>\n *                   </li>\n *                </ul>\n *                <p>For example, the following <code>x-amz-grant-read</code> header grants the AWS accounts identified by account IDs permissions to read object data and its metadata:</p>\n *                <p>\n *                   <code>x-amz-grant-read: id=\"11112222333\", id=\"444455556666\" </code>\n *                </p>\n *             </li>\n *          </ul>\n *          <note>\n *             <p>You can use either a canned ACL or specify access permissions explicitly. You cannot\n *             do both.</p>\n *          </note>\n *\n *\n *          <p>The following operations are related to <code>CreateBucket</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html\">DeleteBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar CreateBucketCommand = /** @class */ (function (_super) {\n    __extends(CreateBucketCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function CreateBucketCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    CreateBucketCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getLocationConstraintPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"CreateBucketCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: CreateBucketRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: CreateBucketOutput.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    CreateBucketCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlCreateBucketCommand(input, context);\n    };\n    CreateBucketCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlCreateBucketCommand(output, context);\n    };\n    return CreateBucketCommand;\n}($Command));\nexport { CreateBucketCommand };\n//# sourceMappingURL=CreateBucketCommand.js.map"]},"metadata":{},"sourceType":"module"}