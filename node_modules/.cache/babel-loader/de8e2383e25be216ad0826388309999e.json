{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh Sinha\\\\Desktop\\\\bookkart\\\\src\\\\context\\\\books.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { listBooks } from \"../api/queries\";\nimport { processOrder } from \"../api/mutations\";\nconst BookContext = React.createContext();\n\nconst BookProvider = ({\n  children\n}) => {\n  const [books, setBooks] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n\n  const checkout = async orderDetails => {\n    const payload = {\n      id: uuidv4(),\n      ...orderDetails\n    };\n\n    try {\n      await API.graphql(graphqlOperation(processOrder, {\n        input: payload\n      }));\n      console.log(\"Order is successful\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchBooks = async () => {\n    try {\n      setLoading(true); // Switch authMode to API_KEY for public access\n\n      const {\n        data\n      } = await API.graphql({\n        query: listBooks,\n        authMode: \"API_KEY\"\n      });\n      const books = data.listBooks.items;\n      const featured = books.filter(book => {\n        return !!book.featured;\n      });\n      setBooks(books);\n      setFeatured(featured);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(BookContext.Provider, {\n    value: {\n      books,\n      featured,\n      loading,\n      checkout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { BookContext, BookProvider };","map":{"version":3,"sources":["C:/Users/Kaustubh Sinha/Desktop/bookkart/src/context/books.js"],"names":["React","useEffect","useState","API","graphqlOperation","v4","uuidv4","listBooks","processOrder","BookContext","createContext","BookProvider","children","books","setBooks","featured","setFeatured","loading","setLoading","fetchBooks","checkout","orderDetails","payload","id","graphql","input","console","log","err","data","query","authMode","items","filter","book"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,MAAMC,WAAW,GAAGT,KAAK,CAACU,aAAN,EAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAG,MAAOC,YAAP,IAAwB;AACvC,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEjB,MAAM,EADI;AAEd,SAAGe;AAFW,KAAhB;;AAIA,QAAI;AACF,YAAMlB,GAAG,CAACqB,OAAJ,CAAYpB,gBAAgB,CAACI,YAAD,EAAe;AAAEiB,QAAAA,KAAK,EAAEH;AAAT,OAAf,CAA5B,CAAN;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GAXD;;AAaA,QAAMT,UAAU,GAAG,YAAY;AAC7B,QAAI;AACFD,MAAAA,UAAU,CAAC,IAAD,CAAV,CADE,CAEF;;AACA,YAAM;AAAEW,QAAAA;AAAF,UAAW,MAAM1B,GAAG,CAACqB,OAAJ,CAAY;AACjCM,QAAAA,KAAK,EAAEvB,SAD0B;AAEjCwB,QAAAA,QAAQ,EAAE;AAFuB,OAAZ,CAAvB;AAIA,YAAMlB,KAAK,GAAGgB,IAAI,CAACtB,SAAL,CAAeyB,KAA7B;AACA,YAAMjB,QAAQ,GAAGF,KAAK,CAACoB,MAAN,CAAcC,IAAD,IAAU;AACtC,eAAO,CAAC,CAACA,IAAI,CAACnB,QAAd;AACD,OAFgB,CAAjB;AAGAD,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdD,CAcE,OAAOU,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GAlBD;;AAoBA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEf,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBE,MAAAA,OAAnB;AAA4BG,MAAAA;AAA5B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QADH,CADF;AAKD,CA/CD;;AAiDA,SAASH,WAAT,EAAsBE,YAAtB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { listBooks } from \"../api/queries\";\r\nimport { processOrder } from \"../api/mutations\";\r\n\r\nconst BookContext = React.createContext();\r\n\r\nconst BookProvider = ({ children }) => {\r\n  const [books, setBooks] = useState([]);\r\n  const [featured, setFeatured] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  const checkout = async (orderDetails) => {\r\n    const payload = {\r\n      id: uuidv4(),\r\n      ...orderDetails\r\n    };\r\n    try {\r\n      await API.graphql(graphqlOperation(processOrder, { input: payload }));\r\n      console.log(\"Order is successful\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const fetchBooks = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Switch authMode to API_KEY for public access\r\n      const { data } = await API.graphql({\r\n        query: listBooks,\r\n        authMode: \"API_KEY\"\r\n      });\r\n      const books = data.listBooks.items;\r\n      const featured = books.filter((book) => {\r\n        return !!book.featured;\r\n      });\r\n      setBooks(books);\r\n      setFeatured(featured);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BookContext.Provider value={{ books, featured, loading, checkout }}>\r\n      {children}\r\n    </BookContext.Provider>\r\n  );\r\n};\r\n\r\nexport { BookContext, BookProvider };\r\n"]},"metadata":{},"sourceType":"module"}