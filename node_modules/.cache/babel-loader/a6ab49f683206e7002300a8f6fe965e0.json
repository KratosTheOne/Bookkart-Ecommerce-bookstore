{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetBucketPolicyStatusOutput, GetBucketPolicyStatusRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketPolicyStatusCommand, serializeAws_restXmlGetBucketPolicyStatusCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n\nvar GetBucketPolicyStatusCommand =\n/** @class */\nfunction (_super) {\n  __extends(GetBucketPolicyStatusCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function GetBucketPolicyStatusCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n\n  GetBucketPolicyStatusCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetBucketPolicyStatusCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetBucketPolicyStatusRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketPolicyStatusOutput.filterSensitiveLog\n    };\n\n    if (typeof logger.info === \"function\") {\n      logger.info({\n        clientName: clientName,\n        commandName: commandName\n      });\n    }\n\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  GetBucketPolicyStatusCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetBucketPolicyStatusCommand(input, context);\n  };\n\n  GetBucketPolicyStatusCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetBucketPolicyStatusCommand(output, context);\n  };\n\n  return GetBucketPolicyStatusCommand;\n}($Command);\n\nexport { GetBucketPolicyStatusCommand };","map":{"version":3,"sources":["../../../commands/GetBucketPolicyStatusCommand.ts"],"names":[],"mappings":";AACA,SAAS,2BAAT,EAAsC,4BAAtC,QAA0E,oBAA1E;AACA,SACE,kDADF,EAEE,gDAFF,QAGO,0BAHP;AAIA,SAAS,uBAAT,QAAwC,qCAAxC;AACA,SAAS,cAAT,QAA+B,2BAA/B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;;AAcA,IAAA,4BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,SAAA,CAAA,4BAAA,EAAA,MAAA,CAAA,CAAlD,CAKE;AACA;;;AAEA,WAAA,4BAAA,CAAqB,KAArB,EAA6D;AAA7D,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAAwC,CAG3D;AACD;;AAED,EAAA,4BAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AACA,SAAK,eAAL,CAAqB,GAArB,CAAyB,uBAAuB,CAAC,aAAD,CAAhD;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,UAAnB;AACA,QAAM,WAAW,GAAG,8BAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,4BAA4B,CAAC,kBAJC;AAKvD,MAAA,wBAAwB,EAAE,2BAA2B,CAAC;AALC,KAAzD;;AAQA,QAAI,OAAO,MAAM,CAAC,IAAd,KAAuB,UAA3B,EAAuC;AACrC,MAAA,MAAM,CAAC,IAAP,CAAY;AACV,QAAA,UAAU,EAAA,UADA;AAEV,QAAA,WAAW,EAAA;AAFD,OAAZ;AAID;;AAEO,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GAlCD;;AAoCQ,EAAA,4BAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,KAAlB,EAA4D,OAA5D,EAAmF;AACjF,WAAO,gDAAgD,CAAC,KAAD,EAAQ,OAAR,CAAvD;AACD,GAFO;;AAIA,EAAA,4BAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAA4C,OAA5C,EAAmE;AACjE,WAAO,kDAAkD,CAAC,MAAD,EAAS,OAAT,CAAzD;AACD,GAFO;;AAMV,SAAA,4BAAA;AAAC,CA5DD,CAAkD,QAAlD,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { GetBucketPolicyStatusOutput, GetBucketPolicyStatusRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketPolicyStatusCommand, serializeAws_restXmlGetBucketPolicyStatusCommand, } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nvar GetBucketPolicyStatusCommand = /** @class */ (function (_super) {\n    __extends(GetBucketPolicyStatusCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function GetBucketPolicyStatusCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    GetBucketPolicyStatusCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"GetBucketPolicyStatusCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: GetBucketPolicyStatusRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: GetBucketPolicyStatusOutput.filterSensitiveLog,\n        };\n        if (typeof logger.info === \"function\") {\n            logger.info({\n                clientName: clientName,\n                commandName: commandName,\n            });\n        }\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    GetBucketPolicyStatusCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlGetBucketPolicyStatusCommand(input, context);\n    };\n    GetBucketPolicyStatusCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlGetBucketPolicyStatusCommand(output, context);\n    };\n    return GetBucketPolicyStatusCommand;\n}($Command));\nexport { GetBucketPolicyStatusCommand };\n//# sourceMappingURL=GetBucketPolicyStatusCommand.js.map"]},"metadata":{},"sourceType":"module"}