{"ast":null,"code":"import { __awaiter, __generator, __rest } from \"tslib\";\nexport var deserializerMiddleware = function (options, deserializer) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var logger, outputFilterSensitiveLog, response, parsed, $metadata, outputWithoutMetadata;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              logger = context.logger, outputFilterSensitiveLog = context.outputFilterSensitiveLog;\n              return [4\n              /*yield*/\n              , next(args)];\n\n            case 1:\n              response = _a.sent().response;\n\n              if (typeof (logger === null || logger === void 0 ? void 0 : logger.debug) === \"function\") {\n                logger.debug({\n                  httpResponse: response\n                });\n              }\n\n              return [4\n              /*yield*/\n              , deserializer(response, options)];\n\n            case 2:\n              parsed = _a.sent();\n              $metadata = parsed.$metadata, outputWithoutMetadata = __rest(parsed, [\"$metadata\"]);\n\n              if (typeof (logger === null || logger === void 0 ? void 0 : logger.info) === \"function\") {\n                logger.info({\n                  output: outputFilterSensitiveLog(outputWithoutMetadata)\n                });\n              }\n\n              return [2\n              /*return*/\n              , {\n                response: response,\n                output: parsed\n              }];\n          }\n        });\n      });\n    };\n  };\n};","map":{"version":3,"sources":["../../src/deserializerMiddleware.ts"],"names":[],"mappings":";AASA,OAAO,IAAM,sBAAsB,GAAG,UACpC,OADoC,EAEpC,YAFoC,EAEsB;AACjB,SAAA,UACzC,IADyC,EAEzC,OAFyC,EAET;AACM,WAAA,UACtC,IADsC,EACE;AAAA,aAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AAEhC,cAAA,MAAM,GAA+B,OAAO,CAAtC,MAAN,EAAQ,wBAAwB,GAAK,OAAO,CAAZ,wBAAhC;AAEa,qBAAA,CAAA;AAAA;AAAA,gBAAM,IAAI,CAAC,IAAD,CAAV,CAAA;;;AAAb,cAAA,QAAQ,GAAK,EAAA,CAAA,IAAA,EAAA,CAAL,QAAR;;AAER,kBAAI,QAAO,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,KAAf,MAAyB,UAA7B,EAAyC;AACvC,gBAAA,MAAM,CAAC,KAAP,CAAa;AACX,kBAAA,YAAY,EAAE;AADH,iBAAb;AAGD;;AAEc,qBAAA,CAAA;AAAA;AAAA,gBAAM,YAAY,CAAC,QAAD,EAAW,OAAX,CAAlB,CAAA;;;AAAT,cAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AAGE,cAAA,SAAS,GAA+B,MAAM,CAArC,SAAT,EAAc,qBAAqB,GAAA,MAAA,CAAK,MAAL,EAArC,CAAA,WAAA,CAAqC,CAAnC;;AAER,kBAAI,QAAO,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,IAAf,MAAwB,UAA5B,EAAwC;AACtC,gBAAA,MAAM,CAAC,IAAP,CAAY;AACV,kBAAA,MAAM,EAAE,wBAAwB,CAAC,qBAAD;AADtB,iBAAZ;AAGD;;AAED,qBAAA,CAAA;AAAA;AAAA,gBAAO;AACL,gBAAA,QAAQ,EAAA,QADH;AAEL,gBAAA,MAAM,EAAE;AAFH,eAAP,CAAA;;;OAvBwC,CAAA;AADF,KAAA;AAHG,GAAA;AA+B1C,CAlCM","sourcesContent":["import {\n  DeserializeHandler,\n  DeserializeHandlerArguments,\n  DeserializeHandlerOutput,\n  DeserializeMiddleware,\n  HandlerExecutionContext,\n  ResponseDeserializer,\n} from \"@aws-sdk/types\";\n\nexport const deserializerMiddleware = <Input extends object, Output extends object, RuntimeUtils = any>(\n  options: RuntimeUtils,\n  deserializer: ResponseDeserializer<any, any, RuntimeUtils>\n): DeserializeMiddleware<Input, Output> => (\n  next: DeserializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): DeserializeHandler<Input, Output> => async (\n  args: DeserializeHandlerArguments<Input>\n): Promise<DeserializeHandlerOutput<Output>> => {\n  const { logger, outputFilterSensitiveLog } = context;\n\n  const { response } = await next(args);\n\n  if (typeof logger?.debug === \"function\") {\n    logger.debug({\n      httpResponse: response,\n    });\n  }\n\n  const parsed = await deserializer(response, options);\n\n  // Log parsed after $metadata is removed in https://github.com/aws/aws-sdk-js-v3/issues/1490\n  const { $metadata, ...outputWithoutMetadata } = parsed;\n\n  if (typeof logger?.info === \"function\") {\n    logger.info({\n      output: outputFilterSensitiveLog(outputWithoutMetadata),\n    });\n  }\n\n  return {\n    response,\n    output: parsed as Output,\n  };\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}