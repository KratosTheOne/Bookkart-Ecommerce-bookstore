{"ast":null,"code":"'use strict'; //parse Empty Node as self closing node\n\nvar buildOptions = require('./util').buildOptions;\n\nvar defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function tagValueProcessor(a) {\n    return a;\n  },\n  attrValueProcessor: function attrValueProcessor(a) {\n    return a;\n  }\n};\nvar props = ['attributeNamePrefix', 'attrNodeName', 'textNodeName', 'ignoreAttributes', 'cdataTagName', 'cdataPositionChar', 'format', 'indentBy', 'supressEmptyNode', 'tagValueProcessor', 'attrValueProcessor'];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function ()\n    /*a*/\n    {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function ()\n    /*a*/\n    {\n      return false;\n    };\n  }\n\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function () {\n      return '';\n    };\n\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function (jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function (jObj, level) {\n  var attrStr = '';\n  var val = '';\n  var keys = Object.keys(jObj);\n  var len = keys.length;\n\n  for (var i = 0; i < len; i++) {\n    var key = keys[i];\n\n    if (typeof jObj[key] === 'undefined') {// supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      var attr = this.isAttribute(key);\n\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {//value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        var arrLen = jObj[key].length;\n\n        for (var j = 0; j < arrLen; j++) {\n          var item = jObj[key][j];\n\n          if (typeof item === 'undefined') {// supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            var result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        var Ks = Object.keys(jObj[key]);\n        var L = Ks.length;\n\n        for (var _j = 0; _j < L; _j++) {\n          attrStr += ' ' + Ks[_j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[_j]]) + '\"';\n        }\n      } else {\n        var _result = this.j2x(jObj[key], level + 1);\n\n        val += this.buildObjNode(_result.val, key, _result.attrStr, level);\n      }\n    }\n  }\n\n  return {\n    attrStr: attrStr,\n    val: val\n  };\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (var v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return this.indentate(level) + '<' + key + attrStr + '>' + val + //+ this.newLine\n    // + this.indentate(level)\n    '</' + key + this.tagEndChar;\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + this.tagEndChar + val + //+ this.newLine\n    this.indentate(level) + '</' + key + this.tagEndChar;\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar; //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return this.indentate(level) + '<' + key + attrStr + '>' + this.options.tagValueProcessor(val) + '</' + key + this.tagEndChar;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name\n/*, options*/\n) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n} //formatting\n//indentation\n//\\n after each closing or self closing tag\n\n\nmodule.exports = Parser;","map":{"version":3,"sources":["C:/Users/Kaustubh Sinha/Desktop/bookkart/node_modules/fast-xml-parser/src/json2xml.js"],"names":["buildOptions","require","defaultOptions","attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","cdataTagName","cdataPositionChar","format","indentBy","supressEmptyNode","tagValueProcessor","a","attrValueProcessor","props","Parser","options","isAttribute","attrPrefixLen","length","isCDATA","replaceCDATAstr","replaceCDATAarr","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","prototype","parse","jObj","j2x","val","level","attrStr","keys","Object","len","i","key","Date","attr","Array","isArray","arrLen","j","item","result","Ks","L","str","cdata","replace","join","v","includes","repeat","name","startsWith","substr","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n"]},"metadata":{},"sourceType":"script"}