{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { HeadObjectOutput, HeadObjectRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlHeadObjectCommand, serializeAws_restXmlHeadObjectCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>The HEAD operation retrieves metadata from an object without returning the object\n *          itself. This operation is useful if you're only interested in an object's metadata. To use\n *          HEAD, you must have READ access to the object.</p>\n *\n *          <p>A <code>HEAD</code> request has the same options as a <code>GET</code> operation on an\n *          object. The response is identical to the <code>GET</code> response except that there is no\n *          response body.</p>\n *\n *          <p>If you encrypt an object by using server-side encryption with customer-provided\n *          encryption keys (SSE-C) when you store the object in Amazon S3, then when you retrieve the\n *          metadata from the object, you must use the following headers:</p>\n *          <ul>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-algorithm</p>\n *             </li>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-key</p>\n *             </li>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-key-MD5</p>\n *             </li>\n *          </ul>\n *          <p>For more information about SSE-C, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\">Server-Side Encryption (Using\n *             Customer-Provided Encryption Keys)</a>.</p>\n *          <note>\n *             <p>Encryption request headers, like <code>x-amz-server-side-encryption</code>, should\n *             not be sent for GET requests if your object uses server-side encryption with CMKs stored\n *             in AWS KMS (SSE-KMS) or server-side encryption with Amazon S3–managed encryption keys\n *             (SSE-S3). If your object does use these types of keys, you’ll get an HTTP 400 BadRequest\n *             error.</p>\n *          </note>\n *\n *\n *\n *\n *\n *\n *\n *          <p>Request headers are limited to 8 KB in size. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonRequestHeaders.html\">Common Request\n *             Headers</a>.</p>\n *          <p>Consider the following when using request headers:</p>\n *          <ul>\n *             <li>\n *                <p> Consideration 1 – If both of the <code>If-Match</code> and\n *                   <code>If-Unmodified-Since</code> headers are present in the request as\n *                follows:</p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>If-Match</code> condition evaluates to <code>true</code>, and;</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>If-Unmodified-Since</code> condition evaluates to\n *                      <code>false</code>;</p>\n *                   </li>\n *                </ul>\n *                <p>Then Amazon S3 returns <code>200 OK</code> and the data requested.</p>\n *             </li>\n *             <li>\n *                <p> Consideration 2 – If both of the <code>If-None-Match</code> and\n *                   <code>If-Modified-Since</code> headers are present in the request as\n *                follows:</p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>If-None-Match</code> condition evaluates to <code>false</code>,\n *                      and;</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>If-Modified-Since</code> condition evaluates to\n *                      <code>true</code>;</p>\n *                   </li>\n *                </ul>\n *                <p>Then Amazon S3 returns the <code>304 Not Modified</code> response code.</p>\n *             </li>\n *          </ul>\n *\n *          <p>For more information about conditional requests, see <a href=\"https://tools.ietf.org/html/rfc7232\">RFC 7232</a>.</p>\n *\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>You need the <code>s3:GetObject</code> permission for this operation. For more\n *          information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions\n *             in a Policy</a>. If the object you request does not exist, the error Amazon S3 returns\n *          depends on whether you also have the s3:ListBucket permission.</p>\n *          <ul>\n *             <li>\n *                <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 returns\n *                an HTTP status code 404 (\"no such key\") error.</p>\n *             </li>\n *             <li>\n *                <p>If you don’t have the <code>s3:ListBucket</code> permission, Amazon S3 returns an HTTP\n *                status code 403 (\"access denied\") error.</p>\n *             </li>\n *          </ul>\n *\n *          <p>The following operation is related to <code>HeadObject</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar HeadObjectCommand =\n/** @class */\nfunction (_super) {\n  __extends(HeadObjectCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function HeadObjectCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  HeadObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getSsecPlugin(configuration));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"HeadObjectCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: HeadObjectRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: HeadObjectOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  HeadObjectCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlHeadObjectCommand(input, context);\n  };\n\n  HeadObjectCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlHeadObjectCommand(output, context);\n  };\n\n  return HeadObjectCommand;\n}($Command);\n\nexport { HeadObjectCommand };","map":{"version":3,"sources":["../../../commands/HeadObjectCommand.ts"],"names":[],"mappings":";AACA,SAAS,gBAAT,EAA2B,iBAA3B,QAAoD,oBAApD;AACA,SACE,uCADF,EAEE,qCAFF,QAGO,0BAHP;AAIA,SAAS,uBAAT,QAAwC,qCAAxC;AACA,SAAS,cAAT,QAA+B,2BAA/B;AACA,SAAS,aAAT,QAA8B,0BAA9B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GG;;AACH,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAvC,CAKE;AACA;;;AAEA,WAAA,iBAAA,CAAqB,KAArB,EAAkD;AAAlD,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAA6B,CAGhD;AACD;AAED;;AAEG;;;AACH,EAAA,iBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AACA,SAAK,eAAL,CAAqB,GAArB,CAAyB,aAAa,CAAC,aAAD,CAAtC;AACA,SAAK,eAAL,CAAqB,GAArB,CAAyB,uBAAuB,CAAC,aAAD,CAAhD;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,UAAnB;AACA,QAAM,WAAW,GAAG,mBAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,iBAAiB,CAAC,kBAJY;AAKvD,MAAA,wBAAwB,EAAE,gBAAgB,CAAC;AALY,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GA3BD;;AA6BQ,EAAA,iBAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,KAAlB,EAAiD,OAAjD,EAAwE;AACtE,WAAO,qCAAqC,CAAC,KAAD,EAAQ,OAAR,CAA5C;AACD,GAFO;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAA4C,OAA5C,EAAmE;AACjE,WAAO,uCAAuC,CAAC,MAAD,EAAS,OAAT,CAA9C;AACD,GAFO;;AAMV,SAAA,iBAAA;AAAC,CAxDD,CAAuC,QAAvC,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { HeadObjectOutput, HeadObjectRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlHeadObjectCommand, serializeAws_restXmlHeadObjectCommand, } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>The HEAD operation retrieves metadata from an object without returning the object\n *          itself. This operation is useful if you're only interested in an object's metadata. To use\n *          HEAD, you must have READ access to the object.</p>\n *\n *          <p>A <code>HEAD</code> request has the same options as a <code>GET</code> operation on an\n *          object. The response is identical to the <code>GET</code> response except that there is no\n *          response body.</p>\n *\n *          <p>If you encrypt an object by using server-side encryption with customer-provided\n *          encryption keys (SSE-C) when you store the object in Amazon S3, then when you retrieve the\n *          metadata from the object, you must use the following headers:</p>\n *          <ul>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-algorithm</p>\n *             </li>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-key</p>\n *             </li>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-key-MD5</p>\n *             </li>\n *          </ul>\n *          <p>For more information about SSE-C, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\">Server-Side Encryption (Using\n *             Customer-Provided Encryption Keys)</a>.</p>\n *          <note>\n *             <p>Encryption request headers, like <code>x-amz-server-side-encryption</code>, should\n *             not be sent for GET requests if your object uses server-side encryption with CMKs stored\n *             in AWS KMS (SSE-KMS) or server-side encryption with Amazon S3–managed encryption keys\n *             (SSE-S3). If your object does use these types of keys, you’ll get an HTTP 400 BadRequest\n *             error.</p>\n *          </note>\n *\n *\n *\n *\n *\n *\n *\n *          <p>Request headers are limited to 8 KB in size. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonRequestHeaders.html\">Common Request\n *             Headers</a>.</p>\n *          <p>Consider the following when using request headers:</p>\n *          <ul>\n *             <li>\n *                <p> Consideration 1 – If both of the <code>If-Match</code> and\n *                   <code>If-Unmodified-Since</code> headers are present in the request as\n *                follows:</p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>If-Match</code> condition evaluates to <code>true</code>, and;</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>If-Unmodified-Since</code> condition evaluates to\n *                      <code>false</code>;</p>\n *                   </li>\n *                </ul>\n *                <p>Then Amazon S3 returns <code>200 OK</code> and the data requested.</p>\n *             </li>\n *             <li>\n *                <p> Consideration 2 – If both of the <code>If-None-Match</code> and\n *                   <code>If-Modified-Since</code> headers are present in the request as\n *                follows:</p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>If-None-Match</code> condition evaluates to <code>false</code>,\n *                      and;</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>If-Modified-Since</code> condition evaluates to\n *                      <code>true</code>;</p>\n *                   </li>\n *                </ul>\n *                <p>Then Amazon S3 returns the <code>304 Not Modified</code> response code.</p>\n *             </li>\n *          </ul>\n *\n *          <p>For more information about conditional requests, see <a href=\"https://tools.ietf.org/html/rfc7232\">RFC 7232</a>.</p>\n *\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>You need the <code>s3:GetObject</code> permission for this operation. For more\n *          information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions\n *             in a Policy</a>. If the object you request does not exist, the error Amazon S3 returns\n *          depends on whether you also have the s3:ListBucket permission.</p>\n *          <ul>\n *             <li>\n *                <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 returns\n *                an HTTP status code 404 (\"no such key\") error.</p>\n *             </li>\n *             <li>\n *                <p>If you don’t have the <code>s3:ListBucket</code> permission, Amazon S3 returns an HTTP\n *                status code 403 (\"access denied\") error.</p>\n *             </li>\n *          </ul>\n *\n *          <p>The following operation is related to <code>HeadObject</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar HeadObjectCommand = /** @class */ (function (_super) {\n    __extends(HeadObjectCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function HeadObjectCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    HeadObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getSsecPlugin(configuration));\n        this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"HeadObjectCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: HeadObjectRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: HeadObjectOutput.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    HeadObjectCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlHeadObjectCommand(input, context);\n    };\n    HeadObjectCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlHeadObjectCommand(output, context);\n    };\n    return HeadObjectCommand;\n}($Command));\nexport { HeadObjectCommand };\n//# sourceMappingURL=HeadObjectCommand.js.map"]},"metadata":{},"sourceType":"module"}