{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nvar NAMESPACE = 'amplify-ui-components';\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar queueCongestion = 0;\nvar queuePending = false;\nvar win = typeof window !== 'undefined' ? window : {};\nvar CSS = win.CSS;\nvar doc = win.document || {\n  head: {}\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: '',\n  jmp: function (h) {\n    return h();\n  },\n  raf: function (h) {\n    return requestAnimationFrame(h);\n  },\n  ael: function (el, eventName, listener, opts) {\n    return el.addEventListener(eventName, listener, opts);\n  },\n  rel: function (el, eventName, listener, opts) {\n    return el.removeEventListener(eventName, listener, opts);\n  }\n};\n\nvar supportsShadow = /*@__PURE__*/function () {\n  return (doc.head.attachShadow + '').indexOf('[native') > -1;\n}();\n\nvar promiseResolve = function (v) {\n  return Promise.resolve(v);\n};\n\nvar supportsConstructibleStylesheets = /*@__PURE__*/function () {\n  try {\n    new CSSStyleSheet();\n    return true;\n  } catch (e) {}\n\n  return false;\n}();\n\nvar addHostEventListeners = function (elm, hostRef, listeners, attachParentListeners) {\n  if (listeners) {\n    listeners.map(function (_a) {\n      var flags = _a[0],\n          name = _a[1],\n          method = _a[2];\n      var target = elm;\n      var handler = hostListenerProxy(hostRef, method);\n      var opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(function () {\n        return plt.rel(target, name, handler, opts);\n      });\n    });\n  }\n};\n\nvar hostListenerProxy = function (hostRef, methodName) {\n  return function (ev) {\n    {\n      if (hostRef.$flags$ & 256\n      /* isListenReady */\n      ) {\n          // instance is ready, let's call it's member method for this event\n          hostRef.$lazyInstance$[methodName](ev);\n        } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    }\n  };\n}; // prettier-ignore\n\n\nvar hostListenerOpts = function (flags) {\n  return (flags & 2\n  /* Capture */\n  ) !== 0;\n};\n\nvar HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\n\nvar createTime = function (fnName, tagName) {\n  if (tagName === void 0) {\n    tagName = '';\n  }\n\n  {\n    return function () {\n      return;\n    };\n  }\n};\n\nvar uniqueTime = function (key, measureText) {\n  {\n    return function () {\n      return;\n    };\n  }\n};\n\nvar rootAppliedStyles = new WeakMap();\n\nvar registerStyle = function (scopeId, cssText, allowCS) {\n  var style = styles.get(scopeId);\n\n  if (supportsConstructibleStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    style.replace(cssText);\n  } else {\n    style = cssText;\n  }\n\n  styles.set(scopeId, style);\n};\n\nvar addStyle = function (styleContainerNode, cmpMeta, mode, hostElm) {\n  var scopeId = getScopeId(cmpMeta);\n  var style = styles.get(scopeId); // if an element is NOT connected then getRootNode() will return the wrong root node\n  // so the fallback is to always use the document for the root node in those cases\n\n  styleContainerNode = styleContainerNode.nodeType === 11\n  /* DocumentFragment */\n  ? styleContainerNode : doc;\n\n  if (style) {\n    if (typeof style === 'string') {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      var appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      var styleElm = void 0;\n\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = new Set());\n      }\n\n      if (!appliedStyles.has(scopeId)) {\n        {\n          if (plt.$cssShim$) {\n            styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10\n            /* needsScopedEncapsulation */\n            ));\n            var newScopeId = styleElm['s-sc'];\n\n            if (newScopeId) {\n              scopeId = newScopeId; // we don't want to add this styleID to the appliedStyles Set\n              // since the cssVarShim might need to apply several different\n              // stylesheets for the same component\n\n              appliedStyles = null;\n            }\n          } else {\n            styleElm = doc.createElement('style');\n            styleElm.innerHTML = style;\n          }\n\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n        }\n\n        if (appliedStyles) {\n          appliedStyles.add(scopeId);\n        }\n      }\n    } else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = __spreadArrays(styleContainerNode.adoptedStyleSheets, [style]);\n    }\n  }\n\n  return scopeId;\n};\n\nvar attachStyles = function (hostRef) {\n  var cmpMeta = hostRef.$cmpMeta$;\n  var elm = hostRef.$hostElement$;\n  var flags = cmpMeta.$flags$;\n  var endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n  var scopeId = addStyle(supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$, elm);\n\n  if (flags & 10\n  /* needsScopedEncapsulation */\n  ) {\n      // only required when we're NOT using native shadow dom (slot)\n      // or this browser doesn't support native shadow dom\n      // and this host element was NOT created with SSR\n      // let's pick out the inner content for slot projection\n      // create a node to represent where the original\n      // content was first placed, which is useful later on\n      // DOM WRITE!!\n      elm['s-sc'] = scopeId;\n      elm.classList.add(scopeId + '-h');\n\n      if (flags & 2\n      /* scopedCssEncapsulation */\n      ) {\n          elm.classList.add(scopeId + '-s');\n        }\n    }\n\n  endAttachStyles();\n};\n\nvar getScopeId = function (cmp, mode) {\n  return 'sc-' + cmp.$tagName$;\n};\n/**\n * Default style mode id\n */\n\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\n\n\nvar EMPTY_OBJ = {};\n/**\n * Namespaces\n */\n\nvar SVG_NS = 'http://www.w3.org/2000/svg';\nvar HTML_NS = 'http://www.w3.org/1999/xhtml';\n\nvar isDef = function (v) {\n  return v != null;\n};\n\nvar isComplexType = function (o) {\n  // https://jsperf.com/typeof-fn-object/5\n  o = typeof o;\n  return o === 'object' || o === 'function';\n};\n\nvar getDynamicImportFunction = function (namespace) {\n  return \"__sc_import_\" + namespace.replace(/\\s|-/g, '_');\n};\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\n\n\nvar h = function (nodeName, vnodeData) {\n  var children = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    children[_i - 2] = arguments[_i];\n  }\n\n  var child = null;\n  var key = null;\n  var slotName = null;\n  var simple = false;\n  var lastSimple = false;\n  var vNodeChildren = [];\n\n  var walk = function (c) {\n    for (var i = 0; i < c.length; i++) {\n      child = c[i];\n\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== 'boolean') {\n        if (simple = typeof nodeName !== 'function' && !isComplexType(child)) {\n          child = String(child);\n        }\n\n        if (simple && lastSimple) {\n          // If the previous child was simple (string), we merge both\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          // Append a new vNode, if it's text, we create a text vNode\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n\n        lastSimple = simple;\n      }\n    }\n  };\n\n  walk(children);\n\n  if (vnodeData) {\n    // normalize class / classname attributes\n    if (vnodeData.key) {\n      key = vnodeData.key;\n    }\n\n    if (vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n\n    {\n      var classData_1 = vnodeData.className || vnodeData.class;\n\n      if (classData_1) {\n        vnodeData.class = typeof classData_1 !== 'object' ? classData_1 : Object.keys(classData_1).filter(function (k) {\n          return classData_1[k];\n        }).join(' ');\n      }\n    }\n  }\n\n  var vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n\n  {\n    vnode.$key$ = key;\n  }\n  {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\n\nvar newVNode = function (tag, text) {\n  var vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  {\n    vnode.$attrs$ = null;\n  }\n  {\n    vnode.$key$ = null;\n  }\n  {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\n\nvar Host = {};\n\nvar isHost = function (node) {\n  return node && node.$tag$ === Host;\n};\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n\n\nvar setAccessor = function (elm, memberName, oldValue, newValue, isSvg, flags) {\n  if (oldValue !== newValue) {\n    var isProp = isMemberInElement(elm, memberName);\n    var ln = memberName.toLowerCase();\n\n    if (memberName === 'class') {\n      var classList = elm.classList;\n      var oldClasses_1 = parseClassList(oldValue);\n      var newClasses_1 = parseClassList(newValue);\n      classList.remove.apply(classList, oldClasses_1.filter(function (c) {\n        return c && !newClasses_1.includes(c);\n      }));\n      classList.add.apply(classList, newClasses_1.filter(function (c) {\n        return c && !oldClasses_1.includes(c);\n      }));\n    } else if (memberName === 'style') {\n      // update style attribute, css properties and values\n      {\n        for (var prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (prop.includes('-')) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = '';\n            }\n          }\n        }\n      }\n\n      for (var prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (prop.includes('-')) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (memberName === 'key') ;else if (memberName === 'ref') {\n      // minifier will clean this up\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (!isProp && memberName[0] === 'o' && memberName[1] === 'n') {\n      // Event Handlers\n      // so if the member name starts with \"on\" and the 3rd characters is\n      // a capital letter, and it's not already a member on the element,\n      // then we're assuming it's an event listener\n      if (memberName[2] === '-') {\n        // on- prefixed events\n        // allows to be explicit about the dom event to listen without any magic\n        // under the hood:\n        // <my-cmp on-click> // listens for \"click\"\n        // <my-cmp on-Click> // listens for \"Click\"\n        // <my-cmp on-ionChange> // listens for \"ionChange\"\n        // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        // standard event\n        // the JSX attribute could have been \"onMouseOver\" and the\n        // member name \"onmouseover\" is on the window's prototype\n        // so let's add the listener \"mouseover\", which is all lowercased\n        memberName = ln.slice(2);\n      } else {\n        // custom event\n        // the JSX attribute could have been \"onMyCustomEvent\"\n        // so let's trim off the \"on\" prefix and lowercase the first character\n        // and add the listener \"myCustomEvent\"\n        // except for the first character, we keep the event name case\n        memberName = ln[2] + memberName.slice(3);\n      }\n\n      if (oldValue) {\n        plt.rel(elm, memberName, oldValue, false);\n      }\n\n      if (newValue) {\n        plt.ael(elm, memberName, newValue, false);\n      }\n    } else {\n      // Set property if it exists and it's not a SVG\n      var isComplex = isComplexType(newValue);\n\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes('-')) {\n            var n = newValue == null ? '' : newValue; // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n\n            if (memberName === 'list') {\n              isProp = false; // tslint:disable-next-line: triple-equals\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {}\n      }\n      /**\n       * Need to manually update attribute if:\n       * - memberName is not an attribute\n       * - if we are rendering the host element in order to reflect attribute\n       * - if it's a SVG, since properties might not work in <svg>\n       * - if the newValue is null/undefined or 'false'.\n       */\n\n\n      var xlink = false;\n      {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n\n      if (newValue == null || newValue === false) {\n        if (xlink) {\n          elm.removeAttributeNS(XLINK_NS, memberName);\n        } else {\n          elm.removeAttribute(memberName);\n        }\n      } else if ((!isProp || flags & 4\n      /* isHost */\n      || isSvg) && !isComplex) {\n        newValue = newValue === true ? '' : newValue;\n\n        if (xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\n\nvar parseClassListRegex = /\\s/;\n\nvar parseClassList = function (value) {\n  return !value ? [] : value.split(parseClassListRegex);\n};\n\nvar updateElement = function (oldVnode, newVnode, isSvgMode, memberName) {\n  // if the element passed in is a shadow root, which is a document fragment\n  // then we want to be adding attrs/props to the shadow root's \"host\" element\n  // if it's not a shadow root, then we add attrs/props to the same element\n  var elm = newVnode.$elm$.nodeType === 11\n  /* DocumentFragment */\n  && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  var oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  var newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  {\n    // remove attributes no longer present on the vnode by setting them to undefined\n    for (memberName in oldVnodeAttrs) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n      }\n    }\n  } // add new & update changed attributes\n\n  for (memberName in newVnodeAttrs) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n  }\n};\n\nvar createElm = function (oldParentVNode, newParentVNode, childIndex, parentElm) {\n  // tslint:disable-next-line: prefer-const\n  var newVNode = newParentVNode.$children$[childIndex];\n  var i = 0;\n  var elm;\n  var childNode;\n  var oldVNode;\n\n  if (!useNativeShadowDom) {\n    // remember for later we need to check to relocate nodes\n    checkSlotRelocate = true;\n\n    if (newVNode.$tag$ === 'slot') {\n      if (scopeId) {\n        // scoped css needs to add its scoped id to the parent element\n        parentElm.classList.add(scopeId + '-s');\n      }\n\n      newVNode.$flags$ |= newVNode.$children$ ? // slot element has fallback content\n      2\n      /* isSlotFallback */\n      : // slot element does not have fallback content\n      1\n      /* isSlotReference */\n      ;\n    }\n  }\n\n  if (newVNode.$text$ !== null) {\n    // create text node\n    elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n  } else if (newVNode.$flags$ & 1\n  /* isSlotReference */\n  ) {\n      // create a slot reference node\n      elm = newVNode.$elm$ = doc.createTextNode('');\n    } else {\n    if (!isSvgMode) {\n      isSvgMode = newVNode.$tag$ === 'svg';\n    } // create element\n\n\n    elm = newVNode.$elm$ = doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$flags$ & 2\n    /* isSlotFallback */\n    ? 'slot-fb' : newVNode.$tag$);\n\n    if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n      isSvgMode = false;\n    } // add css classes, attrs, props, listeners, etc.\n\n\n    {\n      updateElement(null, newVNode, isSvgMode);\n    }\n\n    if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n      // if there is a scopeId and this is the initial render\n      // then let's add the scopeId as a css class\n      elm.classList.add(elm['s-si'] = scopeId);\n    }\n\n    if (newVNode.$children$) {\n      for (i = 0; i < newVNode.$children$.length; ++i) {\n        // create the node\n        childNode = createElm(oldParentVNode, newVNode, i, elm); // return node could have been null\n\n        if (childNode) {\n          // append our new node\n          elm.appendChild(childNode);\n        }\n      }\n    }\n\n    {\n      if (newVNode.$tag$ === 'svg') {\n        // Only reset the SVG context when we're exiting <svg> element\n        isSvgMode = false;\n      } else if (elm.tagName === 'foreignObject') {\n        // Reenter SVG context when we're exiting <foreignObject> element\n        isSvgMode = true;\n      }\n    }\n  }\n\n  {\n    elm['s-hn'] = hostTagName;\n\n    if (newVNode.$flags$ & (2\n    /* isSlotFallback */\n    | 1\n    /* isSlotReference */\n    )) {\n      // remember the content reference comment\n      elm['s-sr'] = true; // remember the content reference comment\n\n      elm['s-cr'] = contentRef; // remember the slot name, or empty string for default slot\n\n      elm['s-sn'] = newVNode.$name$ || ''; // check if we've got an old vnode for this slot\n\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n\n      if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n        // we've got an old slot vnode and the wrapper is being replaced\n        // so let's move the old slot content back to it's original location\n        putBackInOriginalLocation(oldParentVNode.$elm$, false);\n      }\n    }\n  }\n  return elm;\n};\n\nvar putBackInOriginalLocation = function (parentElm, recursive) {\n  plt.$flags$ |= 1\n  /* isTmpDisconnected */\n  ;\n  var oldSlotChildNodes = parentElm.childNodes;\n\n  for (var i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n    var childNode = oldSlotChildNodes[i];\n\n    if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n      // // this child node in the old element is from another component\n      // // remove this node from the old slot's parent\n      // childNode.remove();\n      // and relocate it back to it's original location\n      parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode)); // remove the old original location comment entirely\n      // later on the patch function will know what to do\n      // and move this to the correct spot in need be\n\n      childNode['s-ol'].remove();\n      childNode['s-ol'] = undefined;\n      checkSlotRelocate = true;\n    }\n\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n\n  plt.$flags$ &= ~1\n  /* isTmpDisconnected */\n  ;\n};\n\nvar addVnodes = function (parentElm, before, parentVNode, vnodes, startIdx, endIdx) {\n  var containerElm = parentElm['s-cr'] && parentElm['s-cr'].parentNode || parentElm;\n  var childNode;\n\n  if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        containerElm.insertBefore(childNode, referenceNode(before));\n      }\n    }\n  }\n};\n\nvar removeVnodes = function (vnodes, startIdx, endIdx, vnode, elm) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnode = vnodes[startIdx]) {\n      elm = vnode.$elm$;\n      callNodeRefs(vnode);\n      {\n        // we're removing this element\n        // so it's possible we need to show slot fallback content now\n        checkSlotFallbackVisibility = true;\n\n        if (elm['s-ol']) {\n          // remove the original location comment\n          elm['s-ol'].remove();\n        } else {\n          // it's possible that child nodes of the node\n          // that's being removed are slot nodes\n          putBackInOriginalLocation(elm, true);\n        }\n      } // remove the vnode's element from the dom\n\n      elm.remove();\n    }\n  }\n};\n\nvar updateChildren = function (parentElm, oldCh, newVNode, newCh) {\n  var oldStartIdx = 0;\n  var newStartIdx = 0;\n  var idxInOld = 0;\n  var i = 0;\n  var oldEndIdx = oldCh.length - 1;\n  var oldStartVnode = oldCh[0];\n  var oldEndVnode = oldCh[oldEndIdx];\n  var newEndIdx = newCh.length - 1;\n  var newStartVnode = newCh[0];\n  var newEndVnode = newCh[newEndIdx];\n  var node;\n  var elmToMove;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      // Vnode might have been moved left\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n      patch(oldStartVnode, newStartVnode);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n      patch(oldEndVnode, newEndVnode);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\n      // Vnode moved right\n      if (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot') {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n\n      patch(oldStartVnode, newEndVnode);\n      parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n      // Vnode moved left\n      if (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot') {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n\n      patch(oldEndVnode, newStartVnode);\n      parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      // createKeyToOldIdx\n      idxInOld = -1;\n      {\n        for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n          if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n            idxInOld = i;\n            break;\n          }\n        }\n      }\n\n      if (idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode);\n          oldCh[idxInOld] = undefined;\n          node = elmToMove.$elm$;\n        }\n\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        // new element\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n\n      if (node) {\n        {\n          parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n        }\n      }\n    }\n  }\n\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n  } else if (newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\n\nvar isSameVnode = function (vnode1, vnode2) {\n  // compare if two vnode to see if they're \"technically\" the same\n  // need to have the same element tag, and same key to be the same\n  if (vnode1.$tag$ === vnode2.$tag$) {\n    if (vnode1.$tag$ === 'slot') {\n      return vnode1.$name$ === vnode2.$name$;\n    }\n\n    {\n      return vnode1.$key$ === vnode2.$key$;\n    }\n  }\n\n  return false;\n};\n\nvar referenceNode = function (node) {\n  // this node was relocated to a new location in the dom\n  // because of some other component's slot\n  // but we still have an html comment in place of where\n  // it's original location was according to it's original vdom\n  return node && node['s-ol'] || node;\n};\n\nvar parentReferenceNode = function (node) {\n  return (node['s-ol'] ? node['s-ol'] : node).parentNode;\n};\n\nvar patch = function (oldVNode, newVNode) {\n  var elm = newVNode.$elm$ = oldVNode.$elm$;\n  var oldChildren = oldVNode.$children$;\n  var newChildren = newVNode.$children$;\n  var tag = newVNode.$tag$;\n  var text = newVNode.$text$;\n  var defaultHolder;\n\n  if (text === null) {\n    {\n      // test if we're rendering an svg element, or still rendering nodes inside of one\n      // only add this to the when the compiler sees we're using an svg somewhere\n      isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n    } // element node\n\n    {\n      if (tag === 'slot') ;else {\n        // either this is the first render of an element OR it's an update\n        // AND we already know it's possible it could have changed\n        // this updates the element's css classes, attrs, props, listeners, etc.\n        updateElement(oldVNode, newVNode, isSvgMode);\n      }\n    }\n\n    if (oldChildren !== null && newChildren !== null) {\n      // looks like there's child vnodes for both the old and new vnodes\n      updateChildren(elm, oldChildren, newVNode, newChildren);\n    } else if (newChildren !== null) {\n      // no old child vnodes, but there are new child vnodes to add\n      if (oldVNode.$text$ !== null) {\n        // the old vnode was text, so be sure to clear it out\n        elm.textContent = '';\n      } // add the new vnode children\n\n\n      addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n    } else if (oldChildren !== null) {\n      // no new child vnodes, but there are old child vnodes to remove\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n\n    if (isSvgMode && tag === 'svg') {\n      isSvgMode = false;\n    }\n  } else if (defaultHolder = elm['s-cr']) {\n    // this element has slotted content\n    defaultHolder.parentNode.textContent = text;\n  } else if (oldVNode.$text$ !== text) {\n    // update the text content for the text only vnode\n    // and also only if the text is different than before\n    elm.data = text;\n  }\n};\n\nvar updateFallbackSlotVisibility = function (elm) {\n  // tslint:disable-next-line: prefer-const\n  var childNodes = elm.childNodes;\n  var childNode;\n  var i;\n  var ilen;\n  var j;\n  var slotNameAttr;\n  var nodeType;\n\n  for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n    childNode = childNodes[i];\n\n    if (childNode.nodeType === 1\n    /* ElementNode */\n    ) {\n        if (childNode['s-sr']) {\n          // this is a slot fallback node\n          // get the slot name for this slot reference node\n          slotNameAttr = childNode['s-sn']; // by default always show a fallback slot node\n          // then hide it if there are other slots in the light dom\n\n          childNode.hidden = false;\n\n          for (j = 0; j < ilen; j++) {\n            if (childNodes[j]['s-hn'] !== childNode['s-hn']) {\n              // this sibling node is from a different component\n              nodeType = childNodes[j].nodeType;\n\n              if (slotNameAttr !== '') {\n                // this is a named fallback slot node\n                if (nodeType === 1\n                /* ElementNode */\n                && slotNameAttr === childNodes[j].getAttribute('slot')) {\n                  childNode.hidden = true;\n                  break;\n                }\n              } else {\n                // this is a default fallback slot node\n                // any element or text node (with content)\n                // should hide the default fallback slot node\n                if (nodeType === 1\n                /* ElementNode */\n                || nodeType === 3\n                /* TextNode */\n                && childNodes[j].textContent.trim() !== '') {\n                  childNode.hidden = true;\n                  break;\n                }\n              }\n            }\n          }\n        } // keep drilling down\n\n\n        updateFallbackSlotVisibility(childNode);\n      }\n  }\n};\n\nvar relocateNodes = [];\n\nvar relocateSlotContent = function (elm) {\n  // tslint:disable-next-line: prefer-const\n  var childNode;\n  var node;\n  var hostContentNodes;\n  var slotNameAttr;\n  var relocateNodeData;\n  var j;\n  var i = 0;\n  var childNodes = elm.childNodes;\n  var ilen = childNodes.length;\n\n  for (; i < ilen; i++) {\n    childNode = childNodes[i];\n\n    if (childNode['s-sr'] && (node = childNode['s-cr'])) {\n      // first got the content reference comment node\n      // then we got it's parent, which is where all the host content is in now\n      hostContentNodes = node.parentNode.childNodes;\n      slotNameAttr = childNode['s-sn'];\n\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n\n        if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n          // let's do some relocating to its new home\n          // but never relocate a content reference node\n          // that is suppose to always represent the original content location\n          if (isNodeLocatedInSlot(node, slotNameAttr)) {\n            // it's possible we've already decided to relocate this node\n            relocateNodeData = relocateNodes.find(function (r) {\n              return r.$nodeToRelocate$ === node;\n            }); // made some changes to slots\n            // let's make sure we also double check\n            // fallbacks are correctly hidden or shown\n\n            checkSlotFallbackVisibility = true;\n            node['s-sn'] = node['s-sn'] || slotNameAttr;\n\n            if (relocateNodeData) {\n              // previously we never found a slot home for this node\n              // but turns out we did, so let's remember it now\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              // add to our list of nodes to relocate\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n\n            if (node['s-sr']) {\n              relocateNodes.map(function (relocateNode) {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                  relocateNodeData = relocateNodes.find(function (r) {\n                    return r.$nodeToRelocate$ === node;\n                  });\n\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some(function (r) {\n            return r.$nodeToRelocate$ === node;\n          })) {\n            // so far this element does not have a slot home, not setting slotRefNode on purpose\n            // if we never find a home for this element then we'll need to hide it\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n\n    if (childNode.nodeType === 1\n    /* ElementNode */\n    ) {\n        relocateSlotContent(childNode);\n      }\n  }\n};\n\nvar isNodeLocatedInSlot = function (nodeToRelocate, slotNameAttr) {\n  if (nodeToRelocate.nodeType === 1\n  /* ElementNode */\n  ) {\n      if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n        return true;\n      }\n\n      if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n        return true;\n      }\n\n      return false;\n    }\n\n  if (nodeToRelocate['s-sn'] === slotNameAttr) {\n    return true;\n  }\n\n  return slotNameAttr === '';\n};\n\nvar callNodeRefs = function (vNode) {\n  {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(callNodeRefs);\n  }\n};\n\nvar renderVdom = function (hostRef, renderFnResults) {\n  var hostElm = hostRef.$hostElement$;\n  var cmpMeta = hostRef.$cmpMeta$;\n  var oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  var rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4\n  /* isHost */\n  ;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = hostElm.shadowRoot || hostElm;\n  {\n    scopeId = hostElm['s-sc'];\n  }\n  {\n    contentRef = hostElm['s-cr'];\n    useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1\n    /* shadowDomEncapsulation */\n    ) !== 0; // always reset\n\n    checkSlotFallbackVisibility = false;\n  } // synchronous patch\n\n  patch(oldVNode, rootVnode);\n  {\n    // while we're moving nodes around existing nodes, temporarily disable\n    // the disconnectCallback from working\n    plt.$flags$ |= 1\n    /* isTmpDisconnected */\n    ;\n\n    if (checkSlotRelocate) {\n      relocateSlotContent(rootVnode.$elm$);\n      var relocateData = void 0;\n      var nodeToRelocate = void 0;\n      var orgLocationNode = void 0;\n      var parentNodeRef = void 0;\n      var insertBeforeNode = void 0;\n      var refNode = void 0;\n      var i = 0;\n\n      for (; i < relocateNodes.length; i++) {\n        relocateData = relocateNodes[i];\n        nodeToRelocate = relocateData.$nodeToRelocate$;\n\n        if (!nodeToRelocate['s-ol']) {\n          // add a reference node marking this node's original location\n          // keep a reference to this node for later lookups\n          orgLocationNode = doc.createTextNode('');\n          orgLocationNode['s-nr'] = nodeToRelocate;\n          nodeToRelocate.parentNode.insertBefore(nodeToRelocate['s-ol'] = orgLocationNode, nodeToRelocate);\n        }\n      }\n\n      for (i = 0; i < relocateNodes.length; i++) {\n        relocateData = relocateNodes[i];\n        nodeToRelocate = relocateData.$nodeToRelocate$;\n\n        if (relocateData.$slotRefNode$) {\n          // by default we're just going to insert it directly\n          // after the slot reference node\n          parentNodeRef = relocateData.$slotRefNode$.parentNode;\n          insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n          orgLocationNode = nodeToRelocate['s-ol'];\n\n          while (orgLocationNode = orgLocationNode.previousSibling) {\n            refNode = orgLocationNode['s-nr'];\n\n            if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n              refNode = refNode.nextSibling;\n\n              if (!refNode || !refNode['s-nr']) {\n                insertBeforeNode = refNode;\n                break;\n              }\n            }\n          }\n\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            // we've checked that it's worth while to relocate\n            // since that the node to relocate\n            // has a different next sibling or parent relocated\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                // probably a component in the index.html that doesn't have it's hostname set\n                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n              } // add it back to the dom but in its new home\n\n\n              parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n            }\n          }\n        } else {\n          // this node doesn't have a slot home to go to, so let's hide it\n          if (nodeToRelocate.nodeType === 1\n          /* ElementNode */\n          ) {\n              nodeToRelocate.hidden = true;\n            }\n        }\n      }\n    }\n\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    } // done moving nodes around\n    // allow the disconnect callback to work again\n\n\n    plt.$flags$ &= ~1\n    /* isTmpDisconnected */\n    ; // always reset\n\n    relocateNodes.length = 0;\n  }\n};\n\nvar getElement = function (ref) {\n  return getHostRef(ref).$hostElement$;\n};\n\nvar createEvent = function (ref, name, flags) {\n  var elm = getElement(ref);\n  return {\n    emit: function (detail) {\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4\n        /* Bubbles */\n        ),\n        composed: !!(flags & 2\n        /* Composed */\n        ),\n        cancelable: !!(flags & 1\n        /* Cancellable */\n        ),\n        detail: detail\n      });\n    }\n  };\n};\n\nvar emitEvent = function (elm, name, opts) {\n  var ev = new CustomEvent(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\nvar attachToAncestor = function (hostRef, ancestorComponent) {\n  if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n    ancestorComponent['s-p'].push(new Promise(function (r) {\n      return hostRef.$onRenderResolve$ = r;\n    }));\n  }\n};\n\nvar scheduleUpdate = function (hostRef, isInitialLoad) {\n  {\n    hostRef.$flags$ |= 16\n    /* isQueuedForUpdate */\n    ;\n  }\n\n  if (hostRef.$flags$ & 4\n  /* isWaitingForChildren */\n  ) {\n      hostRef.$flags$ |= 512\n      /* needsRerender */\n      ;\n      return;\n    }\n\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$); // there is no ancestorc omponent or the ancestor component\n  // has already fired off its lifecycle update then\n  // fire off the initial update\n\n  var dispatch = function () {\n    return dispatchHooks(hostRef, isInitialLoad);\n  };\n\n  return writeTask(dispatch);\n};\n\nvar dispatchHooks = function (hostRef, isInitialLoad) {\n  var endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n  var instance = hostRef.$lazyInstance$;\n  var promise;\n\n  if (isInitialLoad) {\n    {\n      hostRef.$flags$ |= 256\n      /* isListenReady */\n      ;\n\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(function (_a) {\n          var methodName = _a[0],\n              event = _a[1];\n          return safeCall(instance, methodName, event);\n        });\n        hostRef.$queuedListeners$ = null;\n      }\n    }\n    {\n      promise = safeCall(instance, 'componentWillLoad');\n    }\n  }\n\n  endSchedule();\n  return then(promise, function () {\n    return updateComponent(hostRef, instance, isInitialLoad);\n  });\n};\n\nvar updateComponent = function (hostRef, instance, isInitialLoad) {\n  // updateComponent\n  var elm = hostRef.$hostElement$;\n  var endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n  var rc = elm['s-rc'];\n\n  if (isInitialLoad) {\n    // DOM WRITE!\n    attachStyles(hostRef);\n  }\n\n  var endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n  {\n    {\n      // looks like we've got child nodes to render into this host element\n      // or we need to update the css class/attrs on the host element\n      // DOM WRITE!\n      renderVdom(hostRef, callRender(hostRef, instance));\n    }\n  }\n\n  if (plt.$cssShim$) {\n    plt.$cssShim$.updateHost(elm);\n  }\n\n  if (rc) {\n    // ok, so turns out there are some child host elements\n    // waiting on this parent element to load\n    // let's fire off all update callbacks waiting\n    rc.map(function (cb) {\n      return cb();\n    });\n    elm['s-rc'] = undefined;\n  }\n\n  endRender();\n  endUpdate();\n  {\n    var childrenPromises = elm['s-p'];\n\n    var postUpdate = function () {\n      return postUpdateComponent(hostRef);\n    };\n\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4\n      /* isWaitingForChildren */\n      ;\n      childrenPromises.length = 0;\n    }\n  }\n};\n\nvar callRender = function (hostRef, instance) {\n  try {\n    instance = instance.render();\n    {\n      hostRef.$flags$ &= ~16\n      /* isQueuedForUpdate */\n      ;\n    }\n    {\n      hostRef.$flags$ |= 2\n      /* hasRendered */\n      ;\n    }\n  } catch (e) {\n    consoleError(e);\n  }\n\n  return instance;\n};\n\nvar postUpdateComponent = function (hostRef) {\n  var tagName = hostRef.$cmpMeta$.$tagName$;\n  var elm = hostRef.$hostElement$;\n  var endPostUpdate = createTime('postUpdate', tagName);\n  var ancestorComponent = hostRef.$ancestorComponent$;\n\n  if (!(hostRef.$flags$ & 64\n  /* hasLoadedComponent */\n  )) {\n    hostRef.$flags$ |= 64\n    /* hasLoadedComponent */\n    ;\n    {\n      // DOM WRITE!\n      addHydratedFlag(elm);\n    }\n    endPostUpdate();\n    {\n      hostRef.$onReadyResolve$(elm);\n\n      if (!ancestorComponent) {\n        appDidLoad();\n      }\n    }\n  } else {\n    endPostUpdate();\n  } // load events fire from bottom to top\n  // the deepest elements load first then bubbles up\n\n\n  {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = undefined;\n    }\n\n    if (hostRef.$flags$ & 512\n    /* needsRerender */\n    ) {\n        nextTick(function () {\n          return scheduleUpdate(hostRef, false);\n        });\n      }\n\n    hostRef.$flags$ &= ~(4\n    /* isWaitingForChildren */\n    | 512\n    /* needsRerender */\n    );\n  } // ( •_•)\n  // ( •_•)>⌐■-■\n  // (⌐■_■)\n};\n\nvar forceUpdate = function (ref) {\n  {\n    var hostRef = getHostRef(ref);\n    var isConnected = hostRef.$hostElement$.isConnected;\n\n    if (isConnected && (hostRef.$flags$ & (2\n    /* hasRendered */\n    | 16\n    /* isQueuedForUpdate */\n    )) === 2\n    /* hasRendered */\n    ) {\n        scheduleUpdate(hostRef, false);\n      } // Returns \"true\" when the forced update was successfully scheduled\n\n\n    return isConnected;\n  }\n};\n\nvar appDidLoad = function (who) {\n  // on appload\n  // we have finish the first big initial render\n  {\n    addHydratedFlag(doc.documentElement);\n  }\n  {\n    plt.$flags$ |= 2\n    /* appLoaded */\n    ;\n  }\n  nextTick(function () {\n    return emitEvent(win, 'appload', {\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  });\n};\n\nvar safeCall = function (instance, method, arg) {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  return undefined;\n};\n\nvar then = function (promise, thenFn) {\n  return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\n\nvar addHydratedFlag = function (elm) {\n  return elm.classList.add('hydrated');\n};\n\nvar parsePropertyValue = function (propValue, propType) {\n  // ensure this value is of the correct prop type\n  if (propValue != null && !isComplexType(propValue)) {\n    if (propType & 4\n    /* Boolean */\n    ) {\n        // per the HTML spec, any string value means it is a boolean true value\n        // but we'll cheat here and say that the string \"false\" is the boolean false\n        return propValue === 'false' ? false : propValue === '' || !!propValue;\n      }\n\n    if (propType & 1\n    /* String */\n    ) {\n        // could have been passed as a number or boolean\n        // but we still want it as a string\n        return String(propValue);\n      } // redundant return here for better minification\n\n\n    return propValue;\n  } // not sure exactly what type we want\n  // so no need to change to a different type\n\n\n  return propValue;\n};\n\nvar getValue = function (ref, propName) {\n  return getHostRef(ref).$instanceValues$.get(propName);\n};\n\nvar setValue = function (ref, propName, newVal, cmpMeta) {\n  // check our new property value against our internal value\n  var hostRef = getHostRef(ref);\n  var oldVal = hostRef.$instanceValues$.get(propName);\n  var flags = hostRef.$flags$;\n  var instance = hostRef.$lazyInstance$;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n\n  if ((!(flags & 8\n  /* isConstructingInstance */\n  ) || oldVal === undefined) && newVal !== oldVal) {\n    // gadzooks! the property's value has changed!!\n    // set our new value!\n    hostRef.$instanceValues$.set(propName, newVal);\n\n    if (instance) {\n      // get an array of method names of watch functions to call\n      if (cmpMeta.$watchers$ && flags & 128\n      /* isWatchReady */\n      ) {\n          var watchMethods = cmpMeta.$watchers$[propName];\n\n          if (watchMethods) {\n            // this instance is watching for when this property changed\n            watchMethods.map(function (watchMethodName) {\n              try {\n                // fire off each of the watch methods that are watching this property\n                instance[watchMethodName](newVal, oldVal, propName);\n              } catch (e) {\n                consoleError(e);\n              }\n            });\n          }\n        }\n\n      if ((flags & (2\n      /* hasRendered */\n      | 16\n      /* isQueuedForUpdate */\n      )) === 2\n      /* hasRendered */\n      ) {\n          // looks like this value actually changed, so we've got work to do!\n          // but only if we've already rendered, otherwise just chill out\n          // queue that we need to do an update, but don't worry about queuing\n          // up millions cuz this function ensures it only runs once\n          scheduleUpdate(hostRef, false);\n        }\n    }\n  }\n};\n\nvar proxyComponent = function (Cstr, cmpMeta, flags) {\n  if (cmpMeta.$members$) {\n    if (Cstr.watchers) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    } // It's better to have a const than two Object.entries()\n\n\n    var members = Object.entries(cmpMeta.$members$);\n    var prototype_1 = Cstr.prototype;\n    members.map(function (_a) {\n      var memberName = _a[0],\n          memberFlags = _a[1][0];\n\n      if (memberFlags & 31\n      /* Prop */\n      || flags & 2\n      /* proxyState */\n      && memberFlags & 32\n      /* State */\n      ) {\n        // proxyComponent - prop\n        Object.defineProperty(prototype_1, memberName, {\n          get: function () {\n            // proxyComponent, get value\n            return getValue(this, memberName);\n          },\n          set: function (newValue) {\n            // proxyComponent, set value\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      }\n    });\n\n    if (flags & 1\n    /* isElementConstructor */\n    ) {\n        var attrNameToPropName_1 = new Map();\n\n        prototype_1.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n          var _this = this;\n\n          plt.jmp(function () {\n            var propName = attrNameToPropName_1.get(attrName);\n            _this[propName] = newValue === null && typeof _this[propName] === 'boolean' ? false : newValue;\n          });\n        }; // create an array of attributes to observe\n        // and also create a map of html attribute name to js property name\n\n\n        Cstr.observedAttributes = members.filter(function (_a) {\n          var _ = _a[0],\n              m = _a[1];\n          return m[0] & 15;\n        }\n        /* HasAttribute */\n        ) // filter to only keep props that should match attributes\n        .map(function (_a) {\n          var propName = _a[0],\n              m = _a[1];\n          var attrName = m[1] || propName;\n          attrNameToPropName_1.set(attrName, propName);\n          return attrName;\n        });\n      }\n  }\n\n  return Cstr;\n};\n\nvar initializeComponent = function (elm, hostRef, cmpMeta, hmrVersionId, Cstr) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var endLoad, endNewInstance, scopeId_1, endRegisterStyles, style_1, ancestorComponent, schedule;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!((hostRef.$flags$ & 32\n          /* hasInitializedComponent */\n          ) === 0)) return [3\n          /*break*/\n          , 5]; // we haven't initialized this element yet\n\n          hostRef.$flags$ |= 32\n          /* hasInitializedComponent */\n          ; // lazy loaded components\n          // request the component's implementation to be\n          // wired up with the host element\n\n          Cstr = loadModule(cmpMeta);\n          if (!Cstr.then) return [3\n          /*break*/\n          , 2];\n          endLoad = uniqueTime();\n          return [4\n          /*yield*/\n          , Cstr];\n\n        case 1:\n          Cstr = _a.sent();\n          endLoad();\n          _a.label = 2;\n\n        case 2:\n          if (!Cstr.isProxied) {\n            // we'eve never proxied this Constructor before\n            // let's add the getters/setters to its prototype before\n            // the first time we create an instance of the implementation\n            {\n              cmpMeta.$watchers$ = Cstr.watchers;\n            }\n            proxyComponent(Cstr, cmpMeta, 2\n            /* proxyState */\n            );\n            Cstr.isProxied = true;\n          }\n\n          endNewInstance = createTime('createInstance', cmpMeta.$tagName$); // ok, time to construct the instance\n          // but let's keep track of when we start and stop\n          // so that the getters/setters don't incorrectly step on data\n\n          {\n            hostRef.$flags$ |= 8\n            /* isConstructingInstance */\n            ;\n          } // construct the lazy-loaded component implementation\n          // passing the hostRef is very important during\n          // construction in order to directly wire together the\n          // host element and the lazy-loaded instance\n\n          try {\n            new Cstr(hostRef);\n          } catch (e) {\n            consoleError(e);\n          }\n\n          {\n            hostRef.$flags$ &= ~8\n            /* isConstructingInstance */\n            ;\n          }\n          {\n            hostRef.$flags$ |= 128\n            /* isWatchReady */\n            ;\n          }\n          endNewInstance();\n          scopeId_1 = getScopeId(cmpMeta);\n          if (!(!styles.has(scopeId_1) && Cstr.style)) return [3\n          /*break*/\n          , 5];\n          endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n          style_1 = Cstr.style;\n          if (!(cmpMeta.$flags$ & 8)\n          /* needsShadowDomShim */\n          ) return [3\n            /*break*/\n            , 4];\n          /* needsShadowDomShim */\n\n          return [4\n          /*yield*/\n          , import('./shadow-css-4c80f1c6.js').then(function (m) {\n            return m.scopeCss(style_1, scopeId_1, false);\n          })];\n\n        case 3:\n          style_1 = _a.sent();\n          _a.label = 4;\n\n        case 4:\n          registerStyle(scopeId_1, style_1, !!(cmpMeta.$flags$ & 1\n          /* shadowDomEncapsulation */\n          ));\n          endRegisterStyles();\n          _a.label = 5;\n\n        case 5:\n          ancestorComponent = hostRef.$ancestorComponent$;\n\n          schedule = function () {\n            return scheduleUpdate(hostRef, true);\n          };\n\n          if (ancestorComponent && ancestorComponent['s-rc']) {\n            // this is the intial load and this component it has an ancestor component\n            // but the ancestor component has NOT fired its will update lifecycle yet\n            // so let's just cool our jets and wait for the ancestor to continue first\n            // this will get fired off when the ancestor component\n            // finally gets around to rendering its lazy self\n            // fire off the initial update\n            ancestorComponent['s-rc'].push(schedule);\n          } else {\n            schedule();\n          }\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nvar connectedCallback = function (elm) {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    var hostRef = getHostRef(elm);\n    var cmpMeta = hostRef.$cmpMeta$;\n    var endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n\n    if (!(hostRef.$flags$ & 1\n    /* hasConnected */\n    )) {\n      // first time this component has connected\n      hostRef.$flags$ |= 1\n      /* hasConnected */\n      ;\n      {\n        // initUpdate\n        // if the slot polyfill is required we'll need to put some nodes\n        // in here to act as original content anchors as we move nodes around\n        // host element has been connected to the DOM\n        if (cmpMeta.$flags$ & (4\n        /* hasSlotRelocation */\n        | 8\n        /* needsShadowDomShim */\n        )) {\n          setContentReference(elm);\n        }\n      }\n      {\n        // find the first ancestor component (if there is one) and register\n        // this component as one of the actively loading child components for its ancestor\n        var ancestorComponent = elm;\n\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          // climb up the ancestors looking for the first\n          // component that hasn't finished its lifecycle update yet\n          if (ancestorComponent['s-p']) {\n            // we found this components first ancestor component\n            // keep a reference to this component's ancestor component\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      } // Lazy properties\n      // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n\n      if (cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(function (_a) {\n          var memberName = _a[0],\n              memberFlags = _a[1][0];\n\n          if (memberFlags & 31\n          /* Prop */\n          && elm.hasOwnProperty(memberName)) {\n            var value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n\n      {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      // not the first time this has connected\n      // reattach any event listeners to the host\n      // since they would have been removed when disconnected\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n    }\n\n    endConnected();\n  }\n};\n\nvar setContentReference = function (elm) {\n  // only required when we're NOT using native shadow dom (slot)\n  // or this browser doesn't support native shadow dom\n  // and this host element was NOT created with SSR\n  // let's pick out the inner content for slot projection\n  // create a node to represent where the original\n  // content was first placed, which is useful later on\n  var contentRefElm = elm['s-cr'] = doc.createComment('');\n  contentRefElm['s-cn'] = true;\n  elm.insertBefore(contentRefElm, elm.firstChild);\n};\n\nvar disconnectedCallback = function (elm) {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    var hostRef = getHostRef(elm);\n    {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map(function (rmListener) {\n          return rmListener();\n        });\n        hostRef.$rmListeners$ = undefined;\n      }\n    } // clear CSS var-shim tracking\n\n    if (plt.$cssShim$) {\n      plt.$cssShim$.removeHost(elm);\n    }\n  }\n};\n\nvar bootstrapLazy = function (lazyBundles, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var endBootstrap = createTime();\n  var cmpTags = [];\n  var exclude = options.exclude || [];\n  var customElements = win.customElements;\n  var head = doc.head;\n  var metaCharset = /*@__PURE__*/head.querySelector('meta[charset]');\n  var visibilityStyle = /*@__PURE__*/doc.createElement('style');\n  var deferredConnectedCallbacks = [];\n  var appLoadFallback;\n  var isBootstrapping = true;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n  {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4\n      /* queueSync */\n      ;\n    }\n  }\n  lazyBundles.map(function (lazyBundle) {\n    return lazyBundle[1].map(function (compactMeta) {\n      var cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      {\n        cmpMeta.$watchers$ = {};\n      }\n\n      if (!supportsShadow && cmpMeta.$flags$ & 1\n      /* shadowDomEncapsulation */\n      ) {\n          cmpMeta.$flags$ |= 8\n          /* needsShadowDomShim */\n          ;\n        }\n\n      var tagName = cmpMeta.$tagName$;\n\n      var HostElement =\n      /** @class */\n      function (_super) {\n        __extends(HostElement, _super); // StencilLazyHost\n\n\n        function HostElement(self) {\n          var _this = // @ts-ignore\n          _super.call(this, self) || this;\n\n          self = _this;\n          registerHost(self, cmpMeta);\n\n          if (cmpMeta.$flags$ & 1\n          /* shadowDomEncapsulation */\n          ) {\n              // this component is using shadow dom\n              // and this browser supports shadow dom\n              // add the read-only property \"shadowRoot\" to the host element\n              // adding the shadow root build conditionals to minimize runtime\n              if (supportsShadow) {\n                {\n                  self.attachShadow({\n                    mode: 'open'\n                  });\n                }\n              } else if (!('shadowRoot' in self)) {\n                self.shadowRoot = self;\n              }\n            }\n\n          return _this;\n        }\n\n        HostElement.prototype.connectedCallback = function () {\n          var _this = this;\n\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n\n          if (isBootstrapping) {\n            // connectedCallback will be processed once all components have been registered\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(function () {\n              return connectedCallback(_this);\n            });\n          }\n        };\n\n        HostElement.prototype.disconnectedCallback = function () {\n          var _this = this;\n\n          plt.jmp(function () {\n            return disconnectedCallback(_this);\n          });\n        };\n\n        HostElement.prototype.forceUpdate = function () {\n          forceUpdate(this);\n        };\n\n        HostElement.prototype.componentOnReady = function () {\n          return getHostRef(this).$onReadyPromise$;\n        };\n\n        return HostElement;\n      }(HTMLElement);\n\n      cmpMeta.$lazyBundleIds$ = lazyBundle[0];\n\n      if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1\n        /* isElementConstructor */\n        ));\n      }\n    });\n  });\n  {\n    visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n    visibilityStyle.setAttribute('data-styles', '');\n    head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n  } // Process deferred connectedCallbacks now all components have been registered\n\n  isBootstrapping = false;\n\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map(function (host) {\n      return host.connectedCallback();\n    });\n  } else {\n    {\n      plt.jmp(function () {\n        return appLoadFallback = setTimeout(appDidLoad, 30);\n      });\n    }\n  } // Fallback appLoad event\n\n\n  endBootstrap();\n};\n\nvar hostRefs = new WeakMap();\n\nvar getHostRef = function (ref) {\n  return hostRefs.get(ref);\n};\n\nvar registerInstance = function (lazyInstance, hostRef) {\n  return hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\n};\n\nvar registerHost = function (elm, cmpMeta) {\n  var hostRef = {\n    $flags$: 0,\n    $hostElement$: elm,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: new Map()\n  };\n  {\n    hostRef.$onReadyPromise$ = new Promise(function (r) {\n      return hostRef.$onReadyResolve$ = r;\n    });\n    elm['s-p'] = [];\n    elm['s-rc'] = [];\n  }\n  addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n  return hostRefs.set(elm, hostRef);\n};\n\nvar isMemberInElement = function (elm, memberName) {\n  return memberName in elm;\n};\n\nvar consoleError = function (e) {\n  return console.error(e);\n};\n\nvar cmpModules = /*@__PURE__*/new Map();\n\nvar loadModule = function (cmpMeta, hostRef, hmrVersionId) {\n  // loadModuleImport\n  var exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n  var bundleId = cmpMeta.$lazyBundleIds$;\n  var module = cmpModules.get(bundleId);\n\n  if (module) {\n    return module[exportName];\n  }\n\n  return import(\n  /* webpackInclude: /\\.entry\\.js$/ */\n\n  /* webpackExclude: /\\.system\\.entry\\.js$/ */\n\n  /* webpackMode: \"lazy\" */\n  \"./\" + bundleId + \".entry.js\" + '').then(function (importedModule) {\n    {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\nvar styles = new Map();\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\n\nvar queueTask = function (queue, write) {\n  return function (cb) {\n    queue.push(cb);\n\n    if (!queuePending) {\n      queuePending = true;\n\n      if (write && plt.$flags$ & 4\n      /* queueSync */\n      ) {\n          nextTick(flush);\n        } else {\n        plt.raf(flush);\n      }\n    }\n  };\n};\n\nvar consume = function (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    try {\n      queue[i](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  queue.length = 0;\n};\n\nvar consumeTimeout = function (queue, timeout) {\n  var i = 0;\n  var ts = 0;\n\n  while (i < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  if (i === queue.length) {\n    queue.length = 0;\n  } else if (i !== 0) {\n    queue.splice(0, i);\n  }\n};\n\nvar flush = function () {\n  {\n    queueCongestion++;\n  } // always force a bunch of medium callbacks to run, but still have\n  // a throttle on how many can run in a certain time\n  // DOM READS!!!\n\n  consume(queueDomReads); // DOM WRITES!!!\n\n  {\n    var timeout = (plt.$flags$ & 6\n    /* queueMask */\n    ) === 2\n    /* appLoaded */\n    ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push.apply(queueDomWritesLow, queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      // still more to do yet, but we've run out of time\n      // let's let this thing cool off and try again in the next tick\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  }\n};\n\nvar nextTick = /*@__PURE__*/function (cb) {\n  return promiseResolve().then(cb);\n};\n\nvar writeTask = /*@__PURE__*/queueTask(queueDomWrites, true);\n\nvar patchEsm = function () {\n  // @ts-ignore\n  if (!(CSS && CSS.supports && CSS.supports('color', 'var(--c)'))) {\n    // @ts-ignore\n    return import(\n    /* webpackChunkName: \"polyfills-css-shim\" */\n    './css-shim-8a9bfe22.js').then(function () {\n      if (plt.$cssShim$ = win.__cssshim) {\n        return plt.$cssShim$.i();\n      } else {\n        // for better minification\n        return 0;\n      }\n    });\n  }\n\n  return promiseResolve();\n};\n\nvar patchBrowser = function () {\n  {\n    // shim css vars\n    plt.$cssShim$ = win.__cssshim;\n  } // @ts-ignore\n\n  var scriptElm = Array.from(doc.querySelectorAll('script')).find(function (s) {\n    return new RegExp(\"/\" + NAMESPACE + \"(\\\\.esm)?\\\\.js($|\\\\?|#)\").test(s.src) || s.getAttribute('data-stencil-namespace') === NAMESPACE;\n  });\n  var opts = scriptElm['data-opts'] || {};\n\n  if ('onbeforeload' in scriptElm && !history.scrollRestoration\n  /* IS_ESM_BUILD */\n  ) {\n      // Safari < v11 support: This IF is true if it's Safari below v11.\n      // This fn cannot use async/await since Safari didn't support it until v11,\n      // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n      // so both the ESM file and nomodule file would get downloaded. Only Safari\n      // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n      // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n      // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n      return {\n        then: function () {\n          /* promise noop */\n        }\n      };\n    }\n\n  {\n    opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n    {\n      patchDynamicImport(opts.resourcesUrl, scriptElm);\n    }\n\n    if (!win.customElements) {\n      // module support, but no custom elements support (Old Edge)\n      // @ts-ignore\n      return import(\n      /* webpackChunkName: \"polyfills-dom\" */\n      './dom-24a54a40.js').then(function () {\n        return opts;\n      });\n    }\n  }\n  return promiseResolve(opts);\n};\n\nvar patchDynamicImport = function (base, orgScriptElm) {\n  var importFunctionName = getDynamicImportFunction(NAMESPACE);\n\n  try {\n    // test if this browser supports dynamic imports\n    // There is a caching issue in V8, that breaks using import() in Function\n    // By generating a random string, we can workaround it\n    // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n    win[importFunctionName] = new Function('w', \"return import(w);//\" + Math.random());\n  } catch (e) {\n    // this shim is specifically for browsers that do support \"esm\" imports\n    // however, they do NOT support \"dynamic\" imports\n    // basically this code is for old Edge, v18 and below\n    var moduleMap_1 = new Map();\n\n    win[importFunctionName] = function (src) {\n      var url = new URL(src, base).href;\n      var mod = moduleMap_1.get(url);\n\n      if (!mod) {\n        var script_1 = doc.createElement('script');\n        script_1.type = 'module';\n        script_1.crossOrigin = orgScriptElm.crossOrigin;\n        script_1.src = URL.createObjectURL(new Blob([\"import * as m from '\" + url + \"'; window.\" + importFunctionName + \".m = m;\"], {\n          type: 'application/javascript'\n        }));\n        mod = new Promise(function (resolve) {\n          script_1.onload = function () {\n            resolve(win[importFunctionName].m);\n            script_1.remove();\n          };\n        });\n        moduleMap_1.set(url, mod);\n        doc.head.appendChild(script_1);\n      }\n\n      return mod;\n    };\n  }\n};\n\nexport { Host as H, patchEsm as a, bootstrapLazy as b, createEvent as c, getElement as g, h, patchBrowser as p, registerInstance as r };","map":{"version":3,"sources":["C:/Users/Kaustubh Sinha/Desktop/bookkart/node_modules/@aws-amplify/ui-components/dist/esm-es5/index-82dae9d1.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__spreadArrays","s","i","il","arguments","r","k","a","j","jl","NAMESPACE","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","queueCongestion","queuePending","win","window","CSS","doc","document","head","plt","$flags$","$resourcesUrl$","jmp","h","raf","requestAnimationFrame","ael","el","eventName","listener","opts","addEventListener","rel","removeEventListener","supportsShadow","attachShadow","indexOf","promiseResolve","supportsConstructibleStylesheets","CSSStyleSheet","addHostEventListeners","elm","hostRef","listeners","attachParentListeners","map","_a","flags","name","method","target","handler","hostListenerProxy","hostListenerOpts","$rmListeners$","methodName","ev","$lazyInstance$","$queuedListeners$","HYDRATED_CSS","XLINK_NS","createTime","fnName","tagName","uniqueTime","key","measureText","rootAppliedStyles","WeakMap","registerStyle","cssText","allowCS","style","styles","get","replace","set","addStyle","styleContainerNode","cmpMeta","mode","hostElm","getScopeId","nodeType","appliedStyles","styleElm","Set","has","$cssShim$","createHostStyle","newScopeId","createElement","innerHTML","insertBefore","querySelector","add","adoptedStyleSheets","includes","attachStyles","$cmpMeta$","$hostElement$","endAttachStyles","$tagName$","shadowRoot","getRootNode","$modeName$","classList","cmp","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","isComplexType","o","getDynamicImportFunction","namespace","nodeName","vnodeData","children","_i","child","slotName","simple","lastSimple","vNodeChildren","walk","c","isArray","String","$text$","newVNode","classData_1","className","class","keys","filter","join","vnode","$attrs$","$children$","$key$","$name$","tag","text","$tag$","$elm$","Host","isHost","node","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses_1","parseClassList","newClasses_1","remove","prop","removeProperty","setProperty","slice","isComplex","xlink","removeAttributeNS","removeAttribute","setAttributeNS","setAttribute","parseClassListRegex","split","updateElement","oldVnode","newVnode","host","oldVnodeAttrs","newVnodeAttrs","undefined","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","oldVNode","createTextNode","createElementNS","appendChild","putBackInOriginalLocation","recursive","oldSlotChildNodes","childNodes","parentReferenceNode","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","parentNode","removeVnodes","callNodeRefs","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","nextSibling","vnode1","vnode2","oldChildren","newChildren","defaultHolder","textContent","data","updateFallbackSlotVisibility","ilen","slotNameAttr","hidden","getAttribute","trim","relocateNodes","relocateSlotContent","hostContentNodes","relocateNodeData","isNodeLocatedInSlot","find","$nodeToRelocate$","$slotRefNode$","relocateNode","some","nodeToRelocate","vNode","ref","renderVdom","renderFnResults","$vnode$","rootVnode","relocateData","orgLocationNode","parentNodeRef","insertBeforeNode","refNode","previousSibling","getElement","getHostRef","createEvent","emit","detail","emitEvent","bubbles","composed","cancelable","CustomEvent","dispatchEvent","attachToAncestor","ancestorComponent","$onRenderResolve$","scheduleUpdate","isInitialLoad","$ancestorComponent$","dispatch","dispatchHooks","writeTask","endSchedule","instance","promise","event","safeCall","updateComponent","endUpdate","rc","endRender","callRender","updateHost","cb","childrenPromises","postUpdate","postUpdateComponent","all","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","nextTick","forceUpdate","isConnected","who","documentElement","arg","thenFn","parsePropertyValue","propValue","propType","getValue","propName","$instanceValues$","setValue","newVal","oldVal","$members$","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","watchers","members","entries","prototype_1","memberFlags","defineProperty","configurable","enumerable","attrNameToPropName_1","Map","attributeChangedCallback","attrName","_oldValue","_this","observedAttributes","m","initializeComponent","hmrVersionId","endLoad","endNewInstance","scopeId_1","endRegisterStyles","style_1","schedule","loadModule","isProxied","scopeCss","connectedCallback","endConnected","setContentReference","$listeners$","contentRefElm","createComment","firstChild","disconnectedCallback","rmListener","removeHost","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements","metaCharset","visibilityStyle","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","assign","URL","resourcesUrl","baseURI","href","syncQueue","lazyBundle","compactMeta","HostElement","_super","self","registerHost","clearTimeout","componentOnReady","$onReadyPromise$","HTMLElement","$lazyBundleIds$","define","setTimeout","hostRefs","registerInstance","lazyInstance","console","error","cmpModules","exportName","bundleId","module","importedModule","queueDomReads","queueDomWrites","queueDomWritesLow","queueTask","queue","write","flush","consume","performance","now","consumeTimeout","timeout","ts","splice","Math","ceil","Infinity","patchEsm","supports","__cssshim","patchBrowser","scriptElm","from","querySelectorAll","RegExp","test","src","history","scrollRestoration","location","patchDynamicImport","base","orgScriptElm","importFunctionName","Function","random","moduleMap_1","url","mod","script_1","type","crossOrigin","createObjectURL","Blob","onload","H"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar NAMESPACE = 'amplify-ui-components';\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar queueCongestion = 0;\nvar queuePending = false;\nvar win = typeof window !== 'undefined' ? window : {};\nvar CSS = win.CSS;\nvar doc = win.document || { head: {} };\nvar plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: function (h) { return h(); },\n    raf: function (h) { return requestAnimationFrame(h); },\n    ael: function (el, eventName, listener, opts) { return el.addEventListener(eventName, listener, opts); },\n    rel: function (el, eventName, listener, opts) { return el.removeEventListener(eventName, listener, opts); },\n};\nvar supportsShadow = /*@__PURE__*/ (function () { return (doc.head.attachShadow + '').indexOf('[native') > -1; })();\nvar promiseResolve = function (v) { return Promise.resolve(v); };\nvar supportsConstructibleStylesheets = /*@__PURE__*/ (function () {\n    try {\n        new CSSStyleSheet();\n        return true;\n    }\n    catch (e) { }\n    return false;\n})();\nvar addHostEventListeners = function (elm, hostRef, listeners, attachParentListeners) {\n    if (listeners) {\n        listeners.map(function (_a) {\n            var flags = _a[0], name = _a[1], method = _a[2];\n            var target = elm;\n            var handler = hostListenerProxy(hostRef, method);\n            var opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(function () { return plt.rel(target, name, handler, opts); });\n        });\n    }\n};\nvar hostListenerProxy = function (hostRef, methodName) { return function (ev) {\n    {\n        if (hostRef.$flags$ & 256 /* isListenReady */) {\n            // instance is ready, let's call it's member method for this event\n            hostRef.$lazyInstance$[methodName](ev);\n        }\n        else {\n            (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n        }\n    }\n}; };\n// prettier-ignore\nvar hostListenerOpts = function (flags) { return (flags & 2 /* Capture */) !== 0; };\nvar HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\nvar createTime = function (fnName, tagName) {\n    if (tagName === void 0) { tagName = ''; }\n    {\n        return function () {\n            return;\n        };\n    }\n};\nvar uniqueTime = function (key, measureText) {\n    {\n        return function () {\n            return;\n        };\n    }\n};\nvar rootAppliedStyles = new WeakMap();\nvar registerStyle = function (scopeId, cssText, allowCS) {\n    var style = styles.get(scopeId);\n    if (supportsConstructibleStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        style.replace(cssText);\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nvar addStyle = function (styleContainerNode, cmpMeta, mode, hostElm) {\n    var scopeId = getScopeId(cmpMeta);\n    var style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            var appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            var styleElm = void 0;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    if (plt.$cssShim$) {\n                        styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10 /* needsScopedEncapsulation */));\n                        var newScopeId = styleElm['s-sc'];\n                        if (newScopeId) {\n                            scopeId = newScopeId;\n                            // we don't want to add this styleID to the appliedStyles Set\n                            // since the cssVarShim might need to apply several different\n                            // stylesheets for the same component\n                            appliedStyles = null;\n                        }\n                    }\n                    else {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = __spreadArrays(styleContainerNode.adoptedStyleSheets, [style]);\n        }\n    }\n    return scopeId;\n};\nvar attachStyles = function (hostRef) {\n    var cmpMeta = hostRef.$cmpMeta$;\n    var elm = hostRef.$hostElement$;\n    var flags = cmpMeta.$flags$;\n    var endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    var scopeId = addStyle(supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$, elm);\n    if (flags & 10 /* needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n        if (flags & 2 /* scopedCssEncapsulation */) {\n            elm.classList.add(scopeId + '-s');\n        }\n    }\n    endAttachStyles();\n};\nvar getScopeId = function (cmp, mode) { return 'sc-' + (cmp.$tagName$); };\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nvar EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nvar SVG_NS = 'http://www.w3.org/2000/svg';\nvar HTML_NS = 'http://www.w3.org/1999/xhtml';\nvar isDef = function (v) { return v != null; };\nvar isComplexType = function (o) {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\nvar getDynamicImportFunction = function (namespace) { return \"__sc_import_\" + namespace.replace(/\\s|-/g, '_'); };\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nvar h = function (nodeName, vnodeData) {\n    var children = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        children[_i - 2] = arguments[_i];\n    }\n    var child = null;\n    var key = null;\n    var slotName = null;\n    var simple = false;\n    var lastSimple = false;\n    var vNodeChildren = [];\n    var walk = function (c) {\n        for (var i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        // normalize class / classname attributes\n        if (vnodeData.key) {\n            key = vnodeData.key;\n        }\n        if (vnodeData.name) {\n            slotName = vnodeData.name;\n        }\n        {\n            var classData_1 = vnodeData.className || vnodeData.class;\n            if (classData_1) {\n                vnodeData.class =\n                    typeof classData_1 !== 'object'\n                        ? classData_1\n                        : Object.keys(classData_1)\n                            .filter(function (k) { return classData_1[k]; })\n                            .join(' ');\n            }\n        }\n    }\n    var vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    {\n        vnode.$key$ = key;\n    }\n    {\n        vnode.$name$ = slotName;\n    }\n    return vnode;\n};\nvar newVNode = function (tag, text) {\n    var vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    {\n        vnode.$key$ = null;\n    }\n    {\n        vnode.$name$ = null;\n    }\n    return vnode;\n};\nvar Host = {};\nvar isHost = function (node) { return node && node.$tag$ === Host; };\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nvar setAccessor = function (elm, memberName, oldValue, newValue, isSvg, flags) {\n    if (oldValue !== newValue) {\n        var isProp = isMemberInElement(elm, memberName);\n        var ln = memberName.toLowerCase();\n        if (memberName === 'class') {\n            var classList = elm.classList;\n            var oldClasses_1 = parseClassList(oldValue);\n            var newClasses_1 = parseClassList(newValue);\n            classList.remove.apply(classList, oldClasses_1.filter(function (c) { return c && !newClasses_1.includes(c); }));\n            classList.add.apply(classList, newClasses_1.filter(function (c) { return c && !oldClasses_1.includes(c); }));\n        }\n        else if (memberName === 'style') {\n            // update style attribute, css properties and values\n            {\n                for (var prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (var prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if (memberName === 'key')\n            ;\n        else if (memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if ((!isProp) && memberName[0] === 'o' && memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            var isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        var n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                            // tslint:disable-next-line: triple-equals\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            var xlink = false;\n            {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (xlink) {\n                    elm.removeAttributeNS(XLINK_NS, memberName);\n                }\n                else {\n                    elm.removeAttribute(memberName);\n                }\n            }\n            else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = function (value) { return (!value ? [] : value.split(parseClassListRegex)); };\nvar updateElement = function (oldVnode, newVnode, isSvgMode, memberName) {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    var elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n    var oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    var newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\nvar createElm = function (oldParentVNode, newParentVNode, childIndex, parentElm) {\n    // tslint:disable-next-line: prefer-const\n    var newVNode = newParentVNode.$children$[childIndex];\n    var i = 0;\n    var elm;\n    var childNode;\n    var oldVNode;\n    if (!useNativeShadowDom) {\n        // remember for later we need to check to relocate nodes\n        checkSlotRelocate = true;\n        if (newVNode.$tag$ === 'slot') {\n            if (scopeId) {\n                // scoped css needs to add its scoped id to the parent element\n                parentElm.classList.add(scopeId + '-s');\n            }\n            newVNode.$flags$ |= newVNode.$children$\n                ? // slot element has fallback content\n                    2 /* isSlotFallback */\n                : // slot element does not have fallback content\n                    1 /* isSlotReference */;\n        }\n    }\n    if (newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else if (newVNode.$flags$ & 1 /* isSlotReference */) {\n        // create a slot reference node\n        elm = newVNode.$elm$ = doc.createTextNode('');\n    }\n    else {\n        if (!isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = (doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$flags$ & 2 /* isSlotFallback */ ? 'slot-fb' : newVNode.$tag$));\n        if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i, elm);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    {\n        elm['s-hn'] = hostTagName;\n        if (newVNode.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n            // remember the content reference comment\n            elm['s-sr'] = true;\n            // remember the content reference comment\n            elm['s-cr'] = contentRef;\n            // remember the slot name, or empty string for default slot\n            elm['s-sn'] = newVNode.$name$ || '';\n            // check if we've got an old vnode for this slot\n            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n                // we've got an old slot vnode and the wrapper is being replaced\n                // so let's move the old slot content back to it's original location\n                putBackInOriginalLocation(oldParentVNode.$elm$, false);\n            }\n        }\n    }\n    return elm;\n};\nvar putBackInOriginalLocation = function (parentElm, recursive) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    var oldSlotChildNodes = parentElm.childNodes;\n    for (var i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n        var childNode = oldSlotChildNodes[i];\n        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n            // // this child node in the old element is from another component\n            // // remove this node from the old slot's parent\n            // childNode.remove();\n            // and relocate it back to it's original location\n            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n            // remove the old original location comment entirely\n            // later on the patch function will know what to do\n            // and move this to the correct spot in need be\n            childNode['s-ol'].remove();\n            childNode['s-ol'] = undefined;\n            checkSlotRelocate = true;\n        }\n        if (recursive) {\n            putBackInOriginalLocation(childNode, recursive);\n        }\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = function (parentElm, before, parentVNode, vnodes, startIdx, endIdx) {\n    var containerElm = ((parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);\n    var childNode;\n    if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx, parentElm);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, referenceNode(before));\n            }\n        }\n    }\n};\nvar removeVnodes = function (vnodes, startIdx, endIdx, vnode, elm) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            callNodeRefs(vnode);\n            {\n                // we're removing this element\n                // so it's possible we need to show slot fallback content now\n                checkSlotFallbackVisibility = true;\n                if (elm['s-ol']) {\n                    // remove the original location comment\n                    elm['s-ol'].remove();\n                }\n                else {\n                    // it's possible that child nodes of the node\n                    // that's being removed are slot nodes\n                    putBackInOriginalLocation(elm, true);\n                }\n            }\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\nvar updateChildren = function (parentElm, oldCh, newVNode, newCh) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var idxInOld = 0;\n    var i = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var node;\n    var elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // Vnode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            if ((oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n            }\n            patch(oldStartVnode, newEndVnode);\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            if ((oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n            }\n            patch(oldEndVnode, newStartVnode);\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // createKeyToOldIdx\n            idxInOld = -1;\n            {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if (idxInOld >= 0) {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n                }\n                else {\n                    patch(elmToMove, newStartVnode);\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // new element\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                {\n                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\nvar isSameVnode = function (vnode1, vnode2) {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (vnode1.$tag$ === vnode2.$tag$) {\n        if (vnode1.$tag$ === 'slot') {\n            return vnode1.$name$ === vnode2.$name$;\n        }\n        {\n            return vnode1.$key$ === vnode2.$key$;\n        }\n    }\n    return false;\n};\nvar referenceNode = function (node) {\n    // this node was relocated to a new location in the dom\n    // because of some other component's slot\n    // but we still have an html comment in place of where\n    // it's original location was according to it's original vdom\n    return (node && node['s-ol']) || node;\n};\nvar parentReferenceNode = function (node) { return (node['s-ol'] ? node['s-ol'] : node).parentNode; };\nvar patch = function (oldVNode, newVNode) {\n    var elm = (newVNode.$elm$ = oldVNode.$elm$);\n    var oldChildren = oldVNode.$children$;\n    var newChildren = newVNode.$children$;\n    var tag = newVNode.$tag$;\n    var text = newVNode.$text$;\n    var defaultHolder;\n    if (text === null) {\n        {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n        }\n        // element node\n        {\n            if (tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if (isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if ((defaultHolder = elm['s-cr'])) {\n        // this element has slotted content\n        defaultHolder.parentNode.textContent = text;\n    }\n    else if (oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nvar updateFallbackSlotVisibility = function (elm) {\n    // tslint:disable-next-line: prefer-const\n    var childNodes = elm.childNodes;\n    var childNode;\n    var i;\n    var ilen;\n    var j;\n    var slotNameAttr;\n    var nodeType;\n    for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode.nodeType === 1 /* ElementNode */) {\n            if (childNode['s-sr']) {\n                // this is a slot fallback node\n                // get the slot name for this slot reference node\n                slotNameAttr = childNode['s-sn'];\n                // by default always show a fallback slot node\n                // then hide it if there are other slots in the light dom\n                childNode.hidden = false;\n                for (j = 0; j < ilen; j++) {\n                    if (childNodes[j]['s-hn'] !== childNode['s-hn']) {\n                        // this sibling node is from a different component\n                        nodeType = childNodes[j].nodeType;\n                        if (slotNameAttr !== '') {\n                            // this is a named fallback slot node\n                            if (nodeType === 1 /* ElementNode */ && slotNameAttr === childNodes[j].getAttribute('slot')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                        else {\n                            // this is a default fallback slot node\n                            // any element or text node (with content)\n                            // should hide the default fallback slot node\n                            if (nodeType === 1 /* ElementNode */ || (nodeType === 3 /* TextNode */ && childNodes[j].textContent.trim() !== '')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            // keep drilling down\n            updateFallbackSlotVisibility(childNode);\n        }\n    }\n};\nvar relocateNodes = [];\nvar relocateSlotContent = function (elm) {\n    // tslint:disable-next-line: prefer-const\n    var childNode;\n    var node;\n    var hostContentNodes;\n    var slotNameAttr;\n    var relocateNodeData;\n    var j;\n    var i = 0;\n    var childNodes = elm.childNodes;\n    var ilen = childNodes.length;\n    for (; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && (node = childNode['s-cr'])) {\n            // first got the content reference comment node\n            // then we got it's parent, which is where all the host content is in now\n            hostContentNodes = node.parentNode.childNodes;\n            slotNameAttr = childNode['s-sn'];\n            for (j = hostContentNodes.length - 1; j >= 0; j--) {\n                node = hostContentNodes[j];\n                if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n                    // let's do some relocating to its new home\n                    // but never relocate a content reference node\n                    // that is suppose to always represent the original content location\n                    if (isNodeLocatedInSlot(node, slotNameAttr)) {\n                        // it's possible we've already decided to relocate this node\n                        relocateNodeData = relocateNodes.find(function (r) { return r.$nodeToRelocate$ === node; });\n                        // made some changes to slots\n                        // let's make sure we also double check\n                        // fallbacks are correctly hidden or shown\n                        checkSlotFallbackVisibility = true;\n                        node['s-sn'] = node['s-sn'] || slotNameAttr;\n                        if (relocateNodeData) {\n                            // previously we never found a slot home for this node\n                            // but turns out we did, so let's remember it now\n                            relocateNodeData.$slotRefNode$ = childNode;\n                        }\n                        else {\n                            // add to our list of nodes to relocate\n                            relocateNodes.push({\n                                $slotRefNode$: childNode,\n                                $nodeToRelocate$: node,\n                            });\n                        }\n                        if (node['s-sr']) {\n                            relocateNodes.map(function (relocateNode) {\n                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                                    relocateNodeData = relocateNodes.find(function (r) { return r.$nodeToRelocate$ === node; });\n                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (!relocateNodes.some(function (r) { return r.$nodeToRelocate$ === node; })) {\n                        // so far this element does not have a slot home, not setting slotRefNode on purpose\n                        // if we never find a home for this element then we'll need to hide it\n                        relocateNodes.push({\n                            $nodeToRelocate$: node,\n                        });\n                    }\n                }\n            }\n        }\n        if (childNode.nodeType === 1 /* ElementNode */) {\n            relocateSlotContent(childNode);\n        }\n    }\n};\nvar isNodeLocatedInSlot = function (nodeToRelocate, slotNameAttr) {\n    if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n        if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n            return true;\n        }\n        if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n            return true;\n        }\n        return false;\n    }\n    if (nodeToRelocate['s-sn'] === slotNameAttr) {\n        return true;\n    }\n    return slotNameAttr === '';\n};\nvar callNodeRefs = function (vNode) {\n    {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(callNodeRefs);\n    }\n};\nvar renderVdom = function (hostRef, renderFnResults) {\n    var hostElm = hostRef.$hostElement$;\n    var cmpMeta = hostRef.$cmpMeta$;\n    var oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    var rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (hostElm.shadowRoot || hostElm);\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    {\n        contentRef = hostElm['s-cr'];\n        useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n        // always reset\n        checkSlotFallbackVisibility = false;\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n    {\n        // while we're moving nodes around existing nodes, temporarily disable\n        // the disconnectCallback from working\n        plt.$flags$ |= 1 /* isTmpDisconnected */;\n        if (checkSlotRelocate) {\n            relocateSlotContent(rootVnode.$elm$);\n            var relocateData = void 0;\n            var nodeToRelocate = void 0;\n            var orgLocationNode = void 0;\n            var parentNodeRef = void 0;\n            var insertBeforeNode = void 0;\n            var refNode = void 0;\n            var i = 0;\n            for (; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (!nodeToRelocate['s-ol']) {\n                    // add a reference node marking this node's original location\n                    // keep a reference to this node for later lookups\n                    orgLocationNode = doc.createTextNode('');\n                    orgLocationNode['s-nr'] = nodeToRelocate;\n                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);\n                }\n            }\n            for (i = 0; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (relocateData.$slotRefNode$) {\n                    // by default we're just going to insert it directly\n                    // after the slot reference node\n                    parentNodeRef = relocateData.$slotRefNode$.parentNode;\n                    insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n                    orgLocationNode = nodeToRelocate['s-ol'];\n                    while ((orgLocationNode = orgLocationNode.previousSibling)) {\n                        refNode = orgLocationNode['s-nr'];\n                        if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n                            refNode = refNode.nextSibling;\n                            if (!refNode || !refNode['s-nr']) {\n                                insertBeforeNode = refNode;\n                                break;\n                            }\n                        }\n                    }\n                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) || nodeToRelocate.nextSibling !== insertBeforeNode) {\n                        // we've checked that it's worth while to relocate\n                        // since that the node to relocate\n                        // has a different next sibling or parent relocated\n                        if (nodeToRelocate !== insertBeforeNode) {\n                            if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                                // probably a component in the index.html that doesn't have it's hostname set\n                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n                            }\n                            // add it back to the dom but in its new home\n                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n                        }\n                    }\n                }\n                else {\n                    // this node doesn't have a slot home to go to, so let's hide it\n                    if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                        nodeToRelocate.hidden = true;\n                    }\n                }\n            }\n        }\n        if (checkSlotFallbackVisibility) {\n            updateFallbackSlotVisibility(rootVnode.$elm$);\n        }\n        // done moving nodes around\n        // allow the disconnect callback to work again\n        plt.$flags$ &= ~1 /* isTmpDisconnected */;\n        // always reset\n        relocateNodes.length = 0;\n    }\n};\nvar getElement = function (ref) { return (getHostRef(ref).$hostElement$); };\nvar createEvent = function (ref, name, flags) {\n    var elm = getElement(ref);\n    return {\n        emit: function (detail) {\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* Bubbles */),\n                composed: !!(flags & 2 /* Composed */),\n                cancelable: !!(flags & 1 /* Cancellable */),\n                detail: detail,\n            });\n        },\n    };\n};\nvar emitEvent = function (elm, name, opts) {\n    var ev = new (CustomEvent)(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nvar attachToAncestor = function (hostRef, ancestorComponent) {\n    if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise(function (r) { return (hostRef.$onRenderResolve$ = r); }));\n    }\n};\nvar scheduleUpdate = function (hostRef, isInitialLoad) {\n    {\n        hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n    }\n    if (hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestorc omponent or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    var dispatch = function () { return dispatchHooks(hostRef, isInitialLoad); };\n    return writeTask(dispatch);\n};\nvar dispatchHooks = function (hostRef, isInitialLoad) {\n    var endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    var instance = hostRef.$lazyInstance$;\n    var promise;\n    if (isInitialLoad) {\n        {\n            hostRef.$flags$ |= 256 /* isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(function (_a) {\n                    var methodName = _a[0], event = _a[1];\n                    return safeCall(instance, methodName, event);\n                });\n                hostRef.$queuedListeners$ = null;\n            }\n        }\n        {\n            promise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    endSchedule();\n    return then(promise, function () { return updateComponent(hostRef, instance, isInitialLoad); });\n};\nvar updateComponent = function (hostRef, instance, isInitialLoad) {\n    // updateComponent\n    var elm = hostRef.$hostElement$;\n    var endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    var rc = elm['s-rc'];\n    if (isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    var endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        {\n            // looks like we've got child nodes to render into this host element\n            // or we need to update the css class/attrs on the host element\n            // DOM WRITE!\n            renderVdom(hostRef, callRender(hostRef, instance));\n        }\n    }\n    if (plt.$cssShim$) {\n        plt.$cssShim$.updateHost(elm);\n    }\n    if (rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map(function (cb) { return cb(); });\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        var childrenPromises = elm['s-p'];\n        var postUpdate = function () { return postUpdateComponent(hostRef); };\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nvar callRender = function (hostRef, instance) {\n    try {\n        instance = instance.render();\n        {\n            hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n        }\n        {\n            hostRef.$flags$ |= 2 /* hasRendered */;\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n    return instance;\n};\nvar postUpdateComponent = function (hostRef) {\n    var tagName = hostRef.$cmpMeta$.$tagName$;\n    var elm = hostRef.$hostElement$;\n    var endPostUpdate = createTime('postUpdate', tagName);\n    var ancestorComponent = hostRef.$ancestorComponent$;\n    if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        endPostUpdate();\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* needsRerender */) {\n            nextTick(function () { return scheduleUpdate(hostRef, false); });\n        }\n        hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nvar forceUpdate = function (ref) {\n    {\n        var hostRef = getHostRef(ref);\n        var isConnected = hostRef.$hostElement$.isConnected;\n        if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n            scheduleUpdate(hostRef, false);\n        }\n        // Returns \"true\" when the forced update was successfully scheduled\n        return isConnected;\n    }\n};\nvar appDidLoad = function (who) {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    {\n        plt.$flags$ |= 2 /* appLoaded */;\n    }\n    nextTick(function () { return emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }); });\n};\nvar safeCall = function (instance, method, arg) {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nvar then = function (promise, thenFn) {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nvar addHydratedFlag = function (elm) { return (elm.classList.add('hydrated')); };\nvar parsePropertyValue = function (propValue, propType) {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (propType & 4 /* Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (propType & 1 /* String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nvar getValue = function (ref, propName) { return getHostRef(ref).$instanceValues$.get(propName); };\nvar setValue = function (ref, propName, newVal, cmpMeta) {\n    // check our new property value against our internal value\n    var hostRef = getHostRef(ref);\n    var oldVal = hostRef.$instanceValues$.get(propName);\n    var flags = hostRef.$flags$;\n    var instance = hostRef.$lazyInstance$;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    if ((!(flags & 8 /* isConstructingInstance */) || oldVal === undefined) && newVal !== oldVal) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (instance) {\n            // get an array of method names of watch functions to call\n            if (cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n                var watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map(function (watchMethodName) {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e);\n                        }\n                    });\n                }\n            }\n            if ((flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\nvar proxyComponent = function (Cstr, cmpMeta, flags) {\n    if (cmpMeta.$members$) {\n        if (Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        var members = Object.entries(cmpMeta.$members$);\n        var prototype_1 = Cstr.prototype;\n        members.map(function (_a) {\n            var memberName = _a[0], memberFlags = _a[1][0];\n            if ((memberFlags & 31 /* Prop */ || ((flags & 2 /* proxyState */) && memberFlags & 32 /* State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype_1, memberName, {\n                    get: function () {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set: function (newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n        });\n        if ((flags & 1 /* isElementConstructor */)) {\n            var attrNameToPropName_1 = new Map();\n            prototype_1.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                var _this = this;\n                plt.jmp(function () {\n                    var propName = attrNameToPropName_1.get(attrName);\n                    _this[propName] = newValue === null && typeof _this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(function (_a) {\n                var _ = _a[0], m = _a[1];\n                return m[0] & 15;\n            } /* HasAttribute */) // filter to only keep props that should match attributes\n                .map(function (_a) {\n                var propName = _a[0], m = _a[1];\n                var attrName = m[1] || propName;\n                attrNameToPropName_1.set(attrName, propName);\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nvar initializeComponent = function (elm, hostRef, cmpMeta, hmrVersionId, Cstr) { return __awaiter(void 0, void 0, void 0, function () {\n    var endLoad, endNewInstance, scopeId_1, endRegisterStyles, style_1, ancestorComponent, schedule;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0)) return [3 /*break*/, 5];\n                // we haven't initialized this element yet\n                hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n                // lazy loaded components\n                // request the component's implementation to be\n                // wired up with the host element\n                Cstr = loadModule(cmpMeta);\n                if (!Cstr.then) return [3 /*break*/, 2];\n                endLoad = uniqueTime();\n                return [4 /*yield*/, Cstr];\n            case 1:\n                Cstr = _a.sent();\n                endLoad();\n                _a.label = 2;\n            case 2:\n                if (!Cstr.isProxied) {\n                    // we'eve never proxied this Constructor before\n                    // let's add the getters/setters to its prototype before\n                    // the first time we create an instance of the implementation\n                    {\n                        cmpMeta.$watchers$ = Cstr.watchers;\n                    }\n                    proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n                    Cstr.isProxied = true;\n                }\n                endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n                // ok, time to construct the instance\n                // but let's keep track of when we start and stop\n                // so that the getters/setters don't incorrectly step on data\n                {\n                    hostRef.$flags$ |= 8 /* isConstructingInstance */;\n                }\n                // construct the lazy-loaded component implementation\n                // passing the hostRef is very important during\n                // construction in order to directly wire together the\n                // host element and the lazy-loaded instance\n                try {\n                    new Cstr(hostRef);\n                }\n                catch (e) {\n                    consoleError(e);\n                }\n                {\n                    hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n                }\n                {\n                    hostRef.$flags$ |= 128 /* isWatchReady */;\n                }\n                endNewInstance();\n                scopeId_1 = getScopeId(cmpMeta);\n                if (!(!styles.has(scopeId_1) && Cstr.style)) return [3 /*break*/, 5];\n                endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                style_1 = Cstr.style;\n                if (!(cmpMeta.$flags$ & 8) /* needsShadowDomShim */) return [3 /*break*/, 4]; /* needsShadowDomShim */\n                return [4 /*yield*/, import('./shadow-css-4c80f1c6.js').then(function (m) { return m.scopeCss(style_1, scopeId_1, false); })];\n            case 3:\n                style_1 = _a.sent();\n                _a.label = 4;\n            case 4:\n                registerStyle(scopeId_1, style_1, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n                endRegisterStyles();\n                _a.label = 5;\n            case 5:\n                ancestorComponent = hostRef.$ancestorComponent$;\n                schedule = function () { return scheduleUpdate(hostRef, true); };\n                if (ancestorComponent && ancestorComponent['s-rc']) {\n                    // this is the intial load and this component it has an ancestor component\n                    // but the ancestor component has NOT fired its will update lifecycle yet\n                    // so let's just cool our jets and wait for the ancestor to continue first\n                    // this will get fired off when the ancestor component\n                    // finally gets around to rendering its lazy self\n                    // fire off the initial update\n                    ancestorComponent['s-rc'].push(schedule);\n                }\n                else {\n                    schedule();\n                }\n                return [2 /*return*/];\n        }\n    });\n}); };\nvar connectedCallback = function (elm) {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        var hostRef = getHostRef(elm);\n        var cmpMeta = hostRef.$cmpMeta$;\n        var endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* hasConnected */;\n            {\n                // initUpdate\n                // if the slot polyfill is required we'll need to put some nodes\n                // in here to act as original content anchors as we move nodes around\n                // host element has been connected to the DOM\n                if ((cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */))) {\n                    setContentReference(elm);\n                }\n            }\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                var ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(function (_a) {\n                    var memberName = _a[0], memberFlags = _a[1][0];\n                    if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n                        var value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n        }\n        endConnected();\n    }\n};\nvar setContentReference = function (elm) {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    var contentRefElm = (elm['s-cr'] = doc.createComment(''));\n    contentRefElm['s-cn'] = true;\n    elm.insertBefore(contentRefElm, elm.firstChild);\n};\nvar disconnectedCallback = function (elm) {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        var hostRef = getHostRef(elm);\n        {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map(function (rmListener) { return rmListener(); });\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        // clear CSS var-shim tracking\n        if (plt.$cssShim$) {\n            plt.$cssShim$.removeHost(elm);\n        }\n    }\n};\nvar bootstrapLazy = function (lazyBundles, options) {\n    if (options === void 0) { options = {}; }\n    var endBootstrap = createTime();\n    var cmpTags = [];\n    var exclude = options.exclude || [];\n    var customElements = win.customElements;\n    var head = doc.head;\n    var metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    var visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    var deferredConnectedCallbacks = [];\n    var appLoadFallback;\n    var isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    {\n        if (options.syncQueue) {\n            plt.$flags$ |= 4 /* queueSync */;\n        }\n    }\n    lazyBundles.map(function (lazyBundle) { return lazyBundle[1].map(function (compactMeta) {\n        var cmpMeta = {\n            $flags$: compactMeta[0],\n            $tagName$: compactMeta[1],\n            $members$: compactMeta[2],\n            $listeners$: compactMeta[3],\n        };\n        {\n            cmpMeta.$members$ = compactMeta[2];\n        }\n        {\n            cmpMeta.$listeners$ = compactMeta[3];\n        }\n        {\n            cmpMeta.$watchers$ = {};\n        }\n        if (!supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n        }\n        var tagName = cmpMeta.$tagName$;\n        var HostElement = /** @class */ (function (_super) {\n            __extends(HostElement, _super);\n            // StencilLazyHost\n            function HostElement(self) {\n                var _this = \n                // @ts-ignore\n                _super.call(this, self) || this;\n                self = _this;\n                registerHost(self, cmpMeta);\n                if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n                    // this component is using shadow dom\n                    // and this browser supports shadow dom\n                    // add the read-only property \"shadowRoot\" to the host element\n                    // adding the shadow root build conditionals to minimize runtime\n                    if (supportsShadow) {\n                        {\n                            self.attachShadow({ mode: 'open' });\n                        }\n                    }\n                    else if (!('shadowRoot' in self)) {\n                        self.shadowRoot = self;\n                    }\n                }\n                return _this;\n            }\n            HostElement.prototype.connectedCallback = function () {\n                var _this = this;\n                if (appLoadFallback) {\n                    clearTimeout(appLoadFallback);\n                    appLoadFallback = null;\n                }\n                if (isBootstrapping) {\n                    // connectedCallback will be processed once all components have been registered\n                    deferredConnectedCallbacks.push(this);\n                }\n                else {\n                    plt.jmp(function () { return connectedCallback(_this); });\n                }\n            };\n            HostElement.prototype.disconnectedCallback = function () {\n                var _this = this;\n                plt.jmp(function () { return disconnectedCallback(_this); });\n            };\n            HostElement.prototype.forceUpdate = function () {\n                forceUpdate(this);\n            };\n            HostElement.prototype.componentOnReady = function () {\n                return getHostRef(this).$onReadyPromise$;\n            };\n            return HostElement;\n        }(HTMLElement));\n        cmpMeta.$lazyBundleIds$ = lazyBundle[0];\n        if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n            cmpTags.push(tagName);\n            customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n        }\n    }); });\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map(function (host) { return host.connectedCallback(); });\n    }\n    else {\n        {\n            plt.jmp(function () { return (appLoadFallback = setTimeout(appDidLoad, 30)); });\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nvar hostRefs = new WeakMap();\nvar getHostRef = function (ref) { return hostRefs.get(ref); };\nvar registerInstance = function (lazyInstance, hostRef) { return hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef); };\nvar registerHost = function (elm, cmpMeta) {\n    var hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onReadyPromise$ = new Promise(function (r) { return (hostRef.$onReadyResolve$ = r); });\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n    return hostRefs.set(elm, hostRef);\n};\nvar isMemberInElement = function (elm, memberName) { return memberName in elm; };\nvar consoleError = function (e) { return console.error(e); };\nvar cmpModules = /*@__PURE__*/ new Map();\nvar loadModule = function (cmpMeta, hostRef, hmrVersionId) {\n    // loadModuleImport\n    var exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    var bundleId = (cmpMeta.$lazyBundleIds$);\n    var module = cmpModules.get(bundleId);\n    if (module) {\n        return module[exportName];\n    }\n    return import(\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    \"./\" + bundleId + \".entry.js\" + '').then(function (importedModule) {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nvar styles = new Map();\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = function (queue, write) { return function (cb) {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n}; };\nvar consume = function (queue) {\n    for (var i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nvar consumeTimeout = function (queue, timeout) {\n    var i = 0;\n    var ts = 0;\n    while (i < queue.length && (ts = performance.now()) < timeout) {\n        try {\n            queue[i++](ts);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    if (i === queue.length) {\n        queue.length = 0;\n    }\n    else if (i !== 0) {\n        queue.splice(0, i);\n    }\n};\nvar flush = function () {\n    {\n        queueCongestion++;\n    }\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        var timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0)) : Infinity;\n        consumeTimeout(queueDomWrites, timeout);\n        consumeTimeout(queueDomWritesLow, timeout);\n        if (queueDomWrites.length > 0) {\n            queueDomWritesLow.push.apply(queueDomWritesLow, queueDomWrites);\n            queueDomWrites.length = 0;\n        }\n        if ((queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n        else {\n            queueCongestion = 0;\n        }\n    }\n};\nvar nextTick = /*@__PURE__*/ function (cb) { return promiseResolve().then(cb); };\nvar writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\nvar patchEsm = function () {\n    // @ts-ignore\n    if (!(CSS && CSS.supports && CSS.supports('color', 'var(--c)'))) {\n        // @ts-ignore\n        return import(/* webpackChunkName: \"polyfills-css-shim\" */ './css-shim-8a9bfe22.js').then(function () {\n            if ((plt.$cssShim$ = win.__cssshim)) {\n                return plt.$cssShim$.i();\n            }\n            else {\n                // for better minification\n                return 0;\n            }\n        });\n    }\n    return promiseResolve();\n};\nvar patchBrowser = function () {\n    {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    // @ts-ignore\n    var scriptElm = Array.from(doc.querySelectorAll('script')).find(function (s) { return new RegExp(\"/\" + NAMESPACE + \"(\\\\.esm)?\\\\.js($|\\\\?|#)\").test(s.src) || s.getAttribute('data-stencil-namespace') === NAMESPACE; });\n    var opts = scriptElm['data-opts'] || {};\n    if ('onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then: function () {\n                /* promise noop */\n            },\n        };\n    }\n    {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        if (!win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom-24a54a40.js').then(function () { return opts; });\n        }\n    }\n    return promiseResolve(opts);\n};\nvar patchDynamicImport = function (base, orgScriptElm) {\n    var importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', \"return import(w);//\" + Math.random());\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        var moduleMap_1 = new Map();\n        win[importFunctionName] = function (src) {\n            var url = new URL(src, base).href;\n            var mod = moduleMap_1.get(url);\n            if (!mod) {\n                var script_1 = doc.createElement('script');\n                script_1.type = 'module';\n                script_1.crossOrigin = orgScriptElm.crossOrigin;\n                script_1.src = URL.createObjectURL(new Blob([\"import * as m from '\" + url + \"'; window.\" + importFunctionName + \".m = m;\"], { type: 'application/javascript' }));\n                mod = new Promise(function (resolve) {\n                    script_1.onload = function () {\n                        resolve(win[importFunctionName].m);\n                        script_1.remove();\n                    };\n                });\n                moduleMap_1.set(url, mod);\n                doc.head.appendChild(script_1);\n            }\n            return mod;\n        };\n    }\n};\nexport { Host as H, patchEsm as a, bootstrapLazy as b, createEvent as c, getElement as g, h, patchBrowser as p, registerInstance as r };\n"]},"metadata":{},"sourceType":"module"}