{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nfunction getDeserializingStream(messageStream, deserializer) {\n  var messageReader = messageStream.getReader();\n  var deserializedStream = new ReadableStream({\n    start: function (controller) {\n      function push() {\n        var _this = this;\n\n        messageReader.read().then(function (_a) {\n          var done = _a.done,\n              value = _a.value;\n          return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var _b, _c, e_1;\n\n            return tslib_1.__generator(this, function (_d) {\n              switch (_d.label) {\n                case 0:\n                  if (done) {\n                    controller.close();\n                    return [2\n                    /*return*/\n                    ];\n                  }\n\n                  _d.label = 1;\n\n                case 1:\n                  _d.trys.push([1, 3,, 4]);\n\n                  _c = (_b = controller).enqueue;\n                  return [4\n                  /*yield*/\n                  , deserializer(value)];\n\n                case 2:\n                  _c.apply(_b, [_d.sent()]);\n\n                  push();\n                  return [3\n                  /*break*/\n                  , 4];\n\n                case 3:\n                  e_1 = _d.sent();\n                  controller.error(e_1);\n                  return [3\n                  /*break*/\n                  , 4];\n\n                case 4:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        });\n      }\n\n      push();\n    }\n  });\n  return deserializedStream;\n}\n\nexports.getDeserializingStream = getDeserializingStream;","map":{"version":3,"sources":["../src/getDeserializingStream.ts"],"names":[],"mappings":";;;;;;;;AAEA,SAAgB,sBAAhB,CACE,aADF,EAEE,YAFF,EAEmC;AAEjC,MAAM,aAAa,GAAG,aAAa,CAAC,SAAd,EAAtB;AACA,MAAM,kBAAkB,GAAG,IAAI,cAAJ,CAA4C;AACrE,IAAA,KAAK,EAAA,UAAC,UAAD,EAAW;AACd,eAAS,IAAT,GAAa;AAAb,YAAA,KAAA,GAAA,IAAA;;AACE,QAAA,aAAa,CAAC,IAAd,GAAqB,IAArB,CAA0B,UAAO,EAAP,EAAsB;cAAb,IAAA,GAAA,EAAA,CAAA,I;cAAM,KAAA,GAAA,EAAA,CAAA,K;;;;;;;AACvC,sBAAI,IAAJ,EAAU;AACR,oBAAA,UAAU,CAAC,KAAX;AACA,2BAAA,CAAA;AAAA;AAAA,qBAAA;AACD;;;;;;;AAGC,kBAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAA,EAAW,OAAX;AAAmB,yBAAA,CAAA;AAAA;AAAA,oBAAM,YAAY,CAAC,KAAD,CAAlB,CAAA;;;AAAnB,kBAAA,EAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAmB,EAAA,CAAA,IAAA,EAAnB,CAAA;;AACA,kBAAA,IAAI;;;;;;;AAEJ,kBAAA,UAAU,CAAC,KAAX,CAAiB,GAAjB;;;;;;;;;;;;AAEH,SAZD;AAaD;;AAED,MAAA,IAAI;AACL;AAnBoE,GAA5C,CAA3B;AAqBA,SAAO,kBAAP;AACD;;AA3BD,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourcesContent":["import { Message } from \"@aws-sdk/types\";\n\nexport function getDeserializingStream(\n  messageStream: ReadableStream<{ [name: string]: Message }>,\n  deserializer: (input: any) => any\n): ReadableStream<{ [name: string]: any }> {\n  const messageReader = messageStream.getReader();\n  const deserializedStream = new ReadableStream<{ [name: string]: any }>({\n    start(controller) {\n      function push() {\n        messageReader.read().then(async ({ done, value }) => {\n          if (done) {\n            controller.close();\n            return;\n          }\n\n          try {\n            controller.enqueue(await deserializer(value));\n            push();\n          } catch (e) {\n            controller.error(e);\n          }\n        });\n      }\n\n      push();\n    }\n  });\n  return deserializedStream;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}