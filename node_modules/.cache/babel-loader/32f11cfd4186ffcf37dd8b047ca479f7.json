{"ast":null,"code":"import { r as registerInstance, h } from './index-82dae9d1.js';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-3e1b5fcc.js';\nimport { Auth } from '@aws-amplify/auth';\nvar logger = new ConsoleLogger('amplify-federated-sign-in');\n\nvar AmplifyFederatedSignIn =\n/** @class */\nfunction () {\n  function AmplifyFederatedSignIn(hostRef) {\n    registerInstance(this, hostRef);\n    /** The current authentication state. */\n\n    this.authState = AuthState.SignIn;\n    /** Federated credentials & configuration. */\n\n    this.federated = {};\n  }\n\n  AmplifyFederatedSignIn.prototype.componentWillLoad = function () {\n    if (!Auth || typeof Auth.configure !== 'function') {\n      throw new Error(NO_AUTH_MODULE_FOUND);\n    }\n\n    var _a = Auth.configure({}).oauth,\n        oauth = _a === void 0 ? {} : _a; // backward compatibility\n\n    if (oauth['domain']) {\n      this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth);\n    } else if (oauth['awsCognito']) {\n      this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth['awsCognito']);\n    }\n\n    if (oauth['auth0']) {\n      this.federated.auth0 = Object.assign(Object.assign({}, this.federated.auth0), oauth['auth0']);\n    }\n  };\n\n  AmplifyFederatedSignIn.prototype.render = function () {\n    if (!this.federated) {\n      logger.debug('federated prop is empty. show nothing');\n      logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');\n      return null;\n    }\n\n    if (!Object.values(AuthState).includes(this.authState)) {\n      return null;\n    }\n\n    logger.debug('federated Config is', this.federated);\n    return h(\"amplify-form-section\", {\n      \"data-test\": \"federated-sign-in-section\"\n    }, h(\"amplify-section\", {\n      \"data-test\": \"federated-sign-in-body-section\"\n    }, h(\"amplify-federated-buttons\", {\n      authState: this.authState,\n      \"data-test\": \"federated-sign-in-buttons\",\n      federated: this.federated\n    })));\n  };\n\n  return AmplifyFederatedSignIn;\n}();\n\nexport { AmplifyFederatedSignIn as amplify_federated_sign_in };","map":{"version":3,"sources":["C:/Users/Kaustubh Sinha/Desktop/bookkart/node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-federated-sign-in.entry.js"],"names":["r","registerInstance","h","ConsoleLogger","A","AuthState","N","NO_AUTH_MODULE_FOUND","Auth","logger","AmplifyFederatedSignIn","hostRef","authState","SignIn","federated","prototype","componentWillLoad","configure","Error","_a","oauth","oauth_config","Object","assign","auth0","render","debug","values","includes","amplify_federated_sign_in"],"mappings":"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","sourcesContent":["import { r as registerInstance, h } from './index-82dae9d1.js';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-3e1b5fcc.js';\nimport { Auth } from '@aws-amplify/auth';\nvar logger = new ConsoleLogger('amplify-federated-sign-in');\nvar AmplifyFederatedSignIn = /** @class */ (function () {\n    function AmplifyFederatedSignIn(hostRef) {\n        registerInstance(this, hostRef);\n        /** The current authentication state. */\n        this.authState = AuthState.SignIn;\n        /** Federated credentials & configuration. */\n        this.federated = {};\n    }\n    AmplifyFederatedSignIn.prototype.componentWillLoad = function () {\n        if (!Auth || typeof Auth.configure !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        var _a = Auth.configure({}).oauth, oauth = _a === void 0 ? {} : _a;\n        // backward compatibility\n        if (oauth['domain']) {\n            this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth);\n        }\n        else if (oauth['awsCognito']) {\n            this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth['awsCognito']);\n        }\n        if (oauth['auth0']) {\n            this.federated.auth0 = Object.assign(Object.assign({}, this.federated.auth0), oauth['auth0']);\n        }\n    };\n    AmplifyFederatedSignIn.prototype.render = function () {\n        if (!this.federated) {\n            logger.debug('federated prop is empty. show nothing');\n            logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');\n            return null;\n        }\n        if (!Object.values(AuthState).includes(this.authState)) {\n            return null;\n        }\n        logger.debug('federated Config is', this.federated);\n        return (h(\"amplify-form-section\", { \"data-test\": \"federated-sign-in-section\" }, h(\"amplify-section\", { \"data-test\": \"federated-sign-in-body-section\" }, h(\"amplify-federated-buttons\", { authState: this.authState, \"data-test\": \"federated-sign-in-buttons\", federated: this.federated }))));\n    };\n    return AmplifyFederatedSignIn;\n}());\nexport { AmplifyFederatedSignIn as amplify_federated_sign_in };\n"]},"metadata":{},"sourceType":"module"}