{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { r as registerInstance, h, H as Host } from './index-3fb5c139.js';\nimport { Logger, I18n } from '@aws-amplify/core';\nimport { M as MfaOption, A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport { S as SETUP_TOTP, i as SUCCESS, N as NO_AUTH_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { d as dispatchAuthStateChangeEvent, o as onAuthUIStateChange, a as dispatchToastHubEvent } from './helpers-4f61e5ff.js';\nimport { c as checkContact } from './auth-helpers-bd096ca7.js';\nimport buffer from 'buffer';\nvar amplifyRadioButtonCss = \":host{--font-family:var(--amplify-font-family)}.radio-button{display:block;width:100%;padding:16px;font-size:var(--amplify-text-sm);font-family:var(--font-family)}.radio-button input{margin-right:12px}\";\n\nvar AmplifyRadioButton =\n/** @class */\nfunction () {\n  function AmplifyRadioButton(hostRef) {\n    registerInstance(this, hostRef);\n    /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n\n    this.placeholder = '';\n    /** If `true`, the radio button is selected. */\n\n    this.checked = false;\n    /** If `true`, the checkbox is disabled */\n\n    this.disabled = false;\n  }\n\n  AmplifyRadioButton.prototype.render = function () {\n    return h(\"span\", {\n      class: \"radio-button\"\n    }, h(\"input\", Object.assign({\n      type: \"radio\",\n      name: this.name,\n      value: this.value,\n      onInput: this.handleInputChange,\n      placeholder: this.placeholder,\n      id: this.fieldId,\n      checked: this.checked,\n      disabled: this.disabled\n    }, this.inputProps)), h(\"amplify-label\", {\n      htmlFor: this.fieldId\n    }, this.label));\n  };\n\n  return AmplifyRadioButton;\n}();\n\nAmplifyRadioButton.style = amplifyRadioButtonCss; // can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nvar canPromise = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;\n};\n\nvar toString = {}.toString;\n\nvar isarray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\nfunction typedArraySupport() {\n  // Can typed array instances be augmented?\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function () {\n        return 42;\n      }\n    };\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n\nfunction Buffer(arg, offset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, offset, length);\n  }\n\n  if (typeof arg === 'number') {\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, offset, length);\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array; // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true,\n      enumerable: false,\n      writable: false\n    });\n  }\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer(that, length) {\n  var buf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    buf = new Uint8Array(length);\n    buf.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = that;\n\n    if (buf === null) {\n      buf = new Buffer(length);\n    }\n\n    buf.length = length;\n  }\n\n  return buf;\n}\n\nfunction allocUnsafe(that, size) {\n  var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      buf[i] = 0;\n    }\n  }\n\n  return buf;\n}\n\nfunction fromString(that, string) {\n  var length = byteLength(string) | 0;\n  var buf = createBuffer(that, length);\n  var actual = buf.write(string);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n\n  return buf;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  var buf = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n\n  return buf;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  var buf;\n\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    buf.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = fromArrayLike(that, buf);\n  }\n\n  return buf;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    var buf = createBuffer(that, len);\n\n    if (buf.length === 0) {\n      return buf;\n    }\n\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction byteLength(string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0;\n  return utf8ToBytes(string).length;\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction from(that, value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, offset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value);\n  }\n\n  return fromObject(that, value);\n}\n\nBuffer.prototype.write = function write(string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n    } else {\n      length = undefined;\n    }\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  return utf8Write(this, string, offset, length);\n};\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n};\n\nBuffer.prototype.fill = function fill(val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : new Buffer(val);\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isarray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return createBuffer(null, 0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = allocUnsafe(null, length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nBuffer.byteLength = byteLength;\nBuffer.prototype._isBuffer = true;\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nvar alloc = function (size) {\n  var buffer = new Buffer(size);\n  buffer.fill(0);\n  return buffer;\n};\n\nvar from_1 = function (data) {\n  return new Buffer(data);\n};\n\nvar typedarrayBuffer = {\n  alloc: alloc,\n  from: from_1\n};\nvar toSJISFunction;\nvar CODEWORDS_COUNT = [0, 26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581, 655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706];\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\n\nvar getSymbolSize = function getSymbolSize(version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined');\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40');\n  return version * 4 + 17;\n};\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\n\n\nvar getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {\n  return CODEWORDS_COUNT[version];\n};\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\n\n\nvar getBCHDigit = function (data) {\n  var digit = 0;\n\n  while (data !== 0) {\n    digit++;\n    data >>>= 1;\n  }\n\n  return digit;\n};\n\nvar setToSJISFunction = function setToSJISFunction(f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.');\n  }\n\n  toSJISFunction = f;\n};\n\nvar isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined';\n};\n\nvar toSJIS = function toSJIS(kanji) {\n  return toSJISFunction(kanji);\n};\n\nvar utils = {\n  getSymbolSize: getSymbolSize,\n  getSymbolTotalCodewords: getSymbolTotalCodewords,\n  getBCHDigit: getBCHDigit,\n  setToSJISFunction: setToSJISFunction,\n  isKanjiModeEnabled: isKanjiModeEnabled,\n  toSJIS: toSJIS\n};\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire();\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar errorCorrectionLevel = createCommonjsModule(function (module, exports) {\n  exports.L = {\n    bit: 1\n  };\n  exports.M = {\n    bit: 0\n  };\n  exports.Q = {\n    bit: 3\n  };\n  exports.H = {\n    bit: 2\n  };\n\n  function fromString(string) {\n    if (typeof string !== 'string') {\n      throw new Error('Param is not a string');\n    }\n\n    var lcStr = string.toLowerCase();\n\n    switch (lcStr) {\n      case 'l':\n      case 'low':\n        return exports.L;\n\n      case 'm':\n      case 'medium':\n        return exports.M;\n\n      case 'q':\n      case 'quartile':\n        return exports.Q;\n\n      case 'h':\n      case 'high':\n        return exports.H;\n\n      default:\n        throw new Error('Unknown EC Level: ' + string);\n    }\n  }\n\n  exports.isValid = function isValid(level) {\n    return level && typeof level.bit !== 'undefined' && level.bit >= 0 && level.bit < 4;\n  };\n\n  exports.from = function from(value, defaultValue) {\n    if (exports.isValid(value)) {\n      return value;\n    }\n\n    try {\n      return fromString(value);\n    } catch (e) {\n      return defaultValue;\n    }\n  };\n});\n\nfunction BitBuffer() {\n  this.buffer = [];\n  this.length = 0;\n}\n\nBitBuffer.prototype = {\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8);\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;\n  },\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit((num >>> length - i - 1 & 1) === 1);\n    }\n  },\n  getLengthInBits: function () {\n    return this.length;\n  },\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8);\n\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n\n    this.length++;\n  }\n};\nvar bitBuffer = BitBuffer;\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\n\nfunction BitMatrix(size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0');\n  }\n\n  this.size = size;\n  this.data = typedarrayBuffer.alloc(size * size);\n  this.reservedBit = typedarrayBuffer.alloc(size * size);\n}\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\n\n\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col;\n  this.data[index] = value;\n  if (reserved) this.reservedBit[index] = true;\n};\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\n\n\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col];\n};\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\n\n\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value;\n};\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\n\n\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col];\n};\n\nvar bitMatrix = BitMatrix;\nvar alignmentPattern = createCommonjsModule(function (module, exports) {\n  /**\n   * Alignment pattern are fixed reference pattern in defined positions\n   * in a matrix symbology, which enables the decode software to re-synchronise\n   * the coordinate mapping of the image modules in the event of moderate amounts\n   * of distortion of the image.\n   *\n   * Alignment patterns are present only in QR Code symbols of version 2 or larger\n   * and their number depends on the symbol version.\n   */\n  var getSymbolSize = utils.getSymbolSize;\n  /**\n   * Calculate the row/column coordinates of the center module of each alignment pattern\n   * for the specified QR Code version.\n   *\n   * The alignment patterns are positioned symmetrically on either side of the diagonal\n   * running from the top left corner of the symbol to the bottom right corner.\n   *\n   * Since positions are simmetrical only half of the coordinates are returned.\n   * Each item of the array will represent in turn the x and y coordinate.\n   * @see {@link getPositions}\n   *\n   * @param  {Number} version QR Code version\n   * @return {Array}          Array of coordinate\n   */\n\n  exports.getRowColCoords = function getRowColCoords(version) {\n    if (version === 1) return [];\n    var posCount = Math.floor(version / 7) + 2;\n    var size = getSymbolSize(version);\n    var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\n    var positions = [size - 7]; // Last coord is always (size - 7)\n\n    for (var i = 1; i < posCount - 1; i++) {\n      positions[i] = positions[i - 1] - intervals;\n    }\n\n    positions.push(6); // First coord is always 6\n\n    return positions.reverse();\n  };\n  /**\n   * Returns an array containing the positions of each alignment pattern.\n   * Each array's element represent the center point of the pattern as (x, y) coordinates\n   *\n   * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n   * and filtering out the items that overlaps with finder pattern\n   *\n   * @example\n   * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n   * The alignment patterns, therefore, are to be centered on (row, column)\n   * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n   * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n   * and are not therefore used for alignment patterns.\n   *\n   * var pos = getPositions(7)\n   * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n   *\n   * @param  {Number} version QR Code version\n   * @return {Array}          Array of coordinates\n   */\n\n\n  exports.getPositions = function getPositions(version) {\n    var coords = [];\n    var pos = exports.getRowColCoords(version);\n    var posLength = pos.length;\n\n    for (var i = 0; i < posLength; i++) {\n      for (var j = 0; j < posLength; j++) {\n        // Skip if position is occupied by finder patterns\n        if (i === 0 && j === 0 || // top-left\n        i === 0 && j === posLength - 1 || // bottom-left\n        i === posLength - 1 && j === 0) {\n          // top-right\n          continue;\n        }\n\n        coords.push([pos[i], pos[j]]);\n      }\n    }\n\n    return coords;\n  };\n});\nvar getSymbolSize$1 = utils.getSymbolSize;\nvar FINDER_PATTERN_SIZE = 7;\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\n\nvar getPositions = function getPositions(version) {\n  var size = getSymbolSize$1(version);\n  return [// top-left\n  [0, 0], // top-right\n  [size - FINDER_PATTERN_SIZE, 0], // bottom-left\n  [0, size - FINDER_PATTERN_SIZE]];\n};\n\nvar finderPattern = {\n  getPositions: getPositions\n};\nvar maskPattern = createCommonjsModule(function (module, exports) {\n  /**\n   * Data mask pattern reference\n   * @type {Object}\n   */\n  exports.Patterns = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n  };\n  /**\n   * Weighted penalty scores for the undesirable features\n   * @type {Object}\n   */\n\n  var PenaltyScores = {\n    N1: 3,\n    N2: 3,\n    N3: 40,\n    N4: 10\n  };\n  /**\n   * Check if mask pattern value is valid\n   *\n   * @param  {Number}  mask    Mask pattern\n   * @return {Boolean}         true if valid, false otherwise\n   */\n\n  exports.isValid = function isValid(mask) {\n    return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\n  };\n  /**\n   * Returns mask pattern from a value.\n   * If value is not valid, returns undefined\n   *\n   * @param  {Number|String} value        Mask pattern value\n   * @return {Number}                     Valid mask pattern or undefined\n   */\n\n\n  exports.from = function from(value) {\n    return exports.isValid(value) ? parseInt(value, 10) : undefined;\n  };\n  /**\n  * Find adjacent modules in row/column with the same color\n  * and assign a penalty value.\n  *\n  * Points: N1 + i\n  * i is the amount by which the number of adjacent modules of the same color exceeds 5\n  */\n\n\n  exports.getPenaltyN1 = function getPenaltyN1(data) {\n    var size = data.size;\n    var points = 0;\n    var sameCountCol = 0;\n    var sameCountRow = 0;\n    var lastCol = null;\n    var lastRow = null;\n\n    for (var row = 0; row < size; row++) {\n      sameCountCol = sameCountRow = 0;\n      lastCol = lastRow = null;\n\n      for (var col = 0; col < size; col++) {\n        var module = data.get(row, col);\n\n        if (module === lastCol) {\n          sameCountCol++;\n        } else {\n          if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n          lastCol = module;\n          sameCountCol = 1;\n        }\n\n        module = data.get(col, row);\n\n        if (module === lastRow) {\n          sameCountRow++;\n        } else {\n          if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n          lastRow = module;\n          sameCountRow = 1;\n        }\n      }\n\n      if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n      if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n    }\n\n    return points;\n  };\n  /**\n   * Find 2x2 blocks with the same color and assign a penalty value\n   *\n   * Points: N2 * (m - 1) * (n - 1)\n   */\n\n\n  exports.getPenaltyN2 = function getPenaltyN2(data) {\n    var size = data.size;\n    var points = 0;\n\n    for (var row = 0; row < size - 1; row++) {\n      for (var col = 0; col < size - 1; col++) {\n        var last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);\n        if (last === 4 || last === 0) points++;\n      }\n    }\n\n    return points * PenaltyScores.N2;\n  };\n  /**\n   * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n   * preceded or followed by light area 4 modules wide\n   *\n   * Points: N3 * number of pattern found\n   */\n\n\n  exports.getPenaltyN3 = function getPenaltyN3(data) {\n    var size = data.size;\n    var points = 0;\n    var bitsCol = 0;\n    var bitsRow = 0;\n\n    for (var row = 0; row < size; row++) {\n      bitsCol = bitsRow = 0;\n\n      for (var col = 0; col < size; col++) {\n        bitsCol = bitsCol << 1 & 0x7FF | data.get(row, col);\n        if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++;\n        bitsRow = bitsRow << 1 & 0x7FF | data.get(col, row);\n        if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++;\n      }\n    }\n\n    return points * PenaltyScores.N3;\n  };\n  /**\n   * Calculate proportion of dark modules in entire symbol\n   *\n   * Points: N4 * k\n   *\n   * k is the rating of the deviation of the proportion of dark modules\n   * in the symbol from 50% in steps of 5%\n   */\n\n\n  exports.getPenaltyN4 = function getPenaltyN4(data) {\n    var darkCount = 0;\n    var modulesCount = data.data.length;\n\n    for (var i = 0; i < modulesCount; i++) darkCount += data.data[i];\n\n    var k = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);\n    return k * PenaltyScores.N4;\n  };\n  /**\n   * Return mask value at given position\n   *\n   * @param  {Number} maskPattern Pattern reference value\n   * @param  {Number} i           Row\n   * @param  {Number} j           Column\n   * @return {Boolean}            Mask value\n   */\n\n\n  function getMaskAt(maskPattern, i, j) {\n    switch (maskPattern) {\n      case exports.Patterns.PATTERN000:\n        return (i + j) % 2 === 0;\n\n      case exports.Patterns.PATTERN001:\n        return i % 2 === 0;\n\n      case exports.Patterns.PATTERN010:\n        return j % 3 === 0;\n\n      case exports.Patterns.PATTERN011:\n        return (i + j) % 3 === 0;\n\n      case exports.Patterns.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n\n      case exports.Patterns.PATTERN101:\n        return i * j % 2 + i * j % 3 === 0;\n\n      case exports.Patterns.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 === 0;\n\n      case exports.Patterns.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 === 0;\n\n      default:\n        throw new Error('bad maskPattern:' + maskPattern);\n    }\n  }\n  /**\n   * Apply a mask pattern to a BitMatrix\n   *\n   * @param  {Number}    pattern Pattern reference number\n   * @param  {BitMatrix} data    BitMatrix data\n   */\n\n\n  exports.applyMask = function applyMask(pattern, data) {\n    var size = data.size;\n\n    for (var col = 0; col < size; col++) {\n      for (var row = 0; row < size; row++) {\n        if (data.isReserved(row, col)) continue;\n        data.xor(row, col, getMaskAt(pattern, row, col));\n      }\n    }\n  };\n  /**\n   * Returns the best mask pattern for data\n   *\n   * @param  {BitMatrix} data\n   * @return {Number} Mask pattern reference number\n   */\n\n\n  exports.getBestMask = function getBestMask(data, setupFormatFunc) {\n    var numPatterns = Object.keys(exports.Patterns).length;\n    var bestPattern = 0;\n    var lowerPenalty = Infinity;\n\n    for (var p = 0; p < numPatterns; p++) {\n      setupFormatFunc(p);\n      exports.applyMask(p, data); // Calculate penalty\n\n      var penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data); // Undo previously applied mask\n\n      exports.applyMask(p, data);\n\n      if (penalty < lowerPenalty) {\n        lowerPenalty = penalty;\n        bestPattern = p;\n      }\n    }\n\n    return bestPattern;\n  };\n});\nvar EC_BLOCKS_TABLE = [// L  M  Q  H\n1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81];\nvar EC_CODEWORDS_TABLE = [// L  M  Q  H\n7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];\n/**\n * Returns the number of error correction block that the QR Code should contain\n * for the specified version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction blocks\n */\n\nvar getBlocksCount = function getBlocksCount(version, errorCorrectionLevel$1) {\n  switch (errorCorrectionLevel$1) {\n    case errorCorrectionLevel.L:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n\n    case errorCorrectionLevel.M:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n\n    case errorCorrectionLevel.Q:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n\n    case errorCorrectionLevel.H:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n\n    default:\n      return undefined;\n  }\n};\n/**\n * Returns the number of error correction codewords to use for the specified\n * version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction codewords\n */\n\n\nvar getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel$1) {\n  switch (errorCorrectionLevel$1) {\n    case errorCorrectionLevel.L:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n\n    case errorCorrectionLevel.M:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n\n    case errorCorrectionLevel.Q:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n\n    case errorCorrectionLevel.H:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n\n    default:\n      return undefined;\n  }\n};\n\nvar errorCorrectionCode = {\n  getBlocksCount: getBlocksCount,\n  getTotalCodewordsCount: getTotalCodewordsCount\n};\nvar EXP_TABLE = typedarrayBuffer.alloc(512);\nvar LOG_TABLE = typedarrayBuffer.alloc(256);\n\n(function initTables() {\n  var x = 1;\n\n  for (var i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x;\n    LOG_TABLE[x] = i;\n    x <<= 1; // multiply by 2\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n\n    if (x & 0x100) {\n      // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D;\n    }\n  } // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n\n\n  for (i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255];\n  }\n})();\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\n\n\nvar log = function log(n) {\n  if (n < 1) throw new Error('log(' + n + ')');\n  return LOG_TABLE[n];\n};\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\n\n\nvar exp = function exp(n) {\n  return EXP_TABLE[n];\n};\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\n\n\nvar mul = function mul(x, y) {\n  if (x === 0 || y === 0) return 0; // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];\n};\n\nvar galoisField = {\n  log: log,\n  exp: exp,\n  mul: mul\n};\nvar polynomial = createCommonjsModule(function (module, exports) {\n  /**\n   * Multiplies two polynomials inside Galois Field\n   *\n   * @param  {Buffer} p1 Polynomial\n   * @param  {Buffer} p2 Polynomial\n   * @return {Buffer}    Product of p1 and p2\n   */\n  exports.mul = function mul(p1, p2) {\n    var coeff = typedarrayBuffer.alloc(p1.length + p2.length - 1);\n\n    for (var i = 0; i < p1.length; i++) {\n      for (var j = 0; j < p2.length; j++) {\n        coeff[i + j] ^= galoisField.mul(p1[i], p2[j]);\n      }\n    }\n\n    return coeff;\n  };\n  /**\n   * Calculate the remainder of polynomials division\n   *\n   * @param  {Buffer} divident Polynomial\n   * @param  {Buffer} divisor  Polynomial\n   * @return {Buffer}          Remainder\n   */\n\n\n  exports.mod = function mod(divident, divisor) {\n    var result = typedarrayBuffer.from(divident);\n\n    while (result.length - divisor.length >= 0) {\n      var coeff = result[0];\n\n      for (var i = 0; i < divisor.length; i++) {\n        result[i] ^= galoisField.mul(divisor[i], coeff);\n      } // remove all zeros from buffer head\n\n\n      var offset = 0;\n\n      while (offset < result.length && result[offset] === 0) offset++;\n\n      result = result.slice(offset);\n    }\n\n    return result;\n  };\n  /**\n   * Generate an irreducible generator polynomial of specified degree\n   * (used by Reed-Solomon encoder)\n   *\n   * @param  {Number} degree Degree of the generator polynomial\n   * @return {Buffer}        Buffer containing polynomial coefficients\n   */\n\n\n  exports.generateECPolynomial = function generateECPolynomial(degree) {\n    var poly = typedarrayBuffer.from([1]);\n\n    for (var i = 0; i < degree; i++) {\n      poly = exports.mul(poly, [1, galoisField.exp(i)]);\n    }\n\n    return poly;\n  };\n});\nvar Buffer$1 = buffer.Buffer;\n\nfunction ReedSolomonEncoder(degree) {\n  this.genPoly = undefined;\n  this.degree = degree;\n  if (this.degree) this.initialize(this.degree);\n}\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\n\n\nReedSolomonEncoder.prototype.initialize = function initialize(degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree;\n  this.genPoly = polynomial.generateECPolynomial(this.degree);\n};\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\n\n\nReedSolomonEncoder.prototype.encode = function encode(data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized');\n  } // Calculate EC for this data block\n  // extends data size to data+genPoly size\n\n\n  var pad = typedarrayBuffer.alloc(this.degree);\n  var paddedData = Buffer$1.concat([data, pad], data.length + this.degree); // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n\n  var remainder = polynomial.mod(paddedData, this.genPoly); // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n\n  var start = this.degree - remainder.length;\n\n  if (start > 0) {\n    var buff = typedarrayBuffer.alloc(this.degree);\n    remainder.copy(buff, start);\n    return buff;\n  }\n\n  return remainder;\n};\n\nvar reedSolomonEncoder = ReedSolomonEncoder;\n/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\n\nvar isValid = function isValid(version) {\n  return !isNaN(version) && version >= 1 && version <= 40;\n};\n\nvar versionCheck = {\n  isValid: isValid\n};\nvar numeric = '[0-9]+';\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+';\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' + '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' + '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' + '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\nkanji = kanji.replace(/u/g, '\\\\u');\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+';\nvar KANJI = new RegExp(kanji, 'g');\nvar BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\nvar BYTE = new RegExp(byte, 'g');\nvar NUMERIC = new RegExp(numeric, 'g');\nvar ALPHANUMERIC = new RegExp(alphanumeric, 'g');\nvar TEST_KANJI = new RegExp('^' + kanji + '$');\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$');\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\n\nvar testKanji = function testKanji(str) {\n  return TEST_KANJI.test(str);\n};\n\nvar testNumeric = function testNumeric(str) {\n  return TEST_NUMERIC.test(str);\n};\n\nvar testAlphanumeric = function testAlphanumeric(str) {\n  return TEST_ALPHANUMERIC.test(str);\n};\n\nvar regex = {\n  KANJI: KANJI,\n  BYTE_KANJI: BYTE_KANJI,\n  BYTE: BYTE,\n  NUMERIC: NUMERIC,\n  ALPHANUMERIC: ALPHANUMERIC,\n  testKanji: testKanji,\n  testNumeric: testNumeric,\n  testAlphanumeric: testAlphanumeric\n};\nvar mode = createCommonjsModule(function (module, exports) {\n  /**\n   * Numeric mode encodes data from the decimal digit set (0 - 9)\n   * (byte values 30HEX to 39HEX).\n   * Normally, 3 data characters are represented by 10 bits.\n   *\n   * @type {Object}\n   */\n  exports.NUMERIC = {\n    id: 'Numeric',\n    bit: 1 << 0,\n    ccBits: [10, 12, 14]\n  };\n  /**\n   * Alphanumeric mode encodes data from a set of 45 characters,\n   * i.e. 10 numeric digits (0 - 9),\n   *      26 alphabetic characters (A - Z),\n   *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n   * Normally, two input characters are represented by 11 bits.\n   *\n   * @type {Object}\n   */\n\n  exports.ALPHANUMERIC = {\n    id: 'Alphanumeric',\n    bit: 1 << 1,\n    ccBits: [9, 11, 13]\n  };\n  /**\n   * In byte mode, data is encoded at 8 bits per character.\n   *\n   * @type {Object}\n   */\n\n  exports.BYTE = {\n    id: 'Byte',\n    bit: 1 << 2,\n    ccBits: [8, 16, 16]\n  };\n  /**\n   * The Kanji mode efficiently encodes Kanji characters in accordance with\n   * the Shift JIS system based on JIS X 0208.\n   * The Shift JIS values are shifted from the JIS X 0208 values.\n   * JIS X 0208 gives details of the shift coded representation.\n   * Each two-byte character value is compacted to a 13-bit binary codeword.\n   *\n   * @type {Object}\n   */\n\n  exports.KANJI = {\n    id: 'Kanji',\n    bit: 1 << 3,\n    ccBits: [8, 10, 12]\n  };\n  /**\n   * Mixed mode will contain a sequences of data in a combination of any of\n   * the modes described above\n   *\n   * @type {Object}\n   */\n\n  exports.MIXED = {\n    bit: -1\n  };\n  /**\n   * Returns the number of bits needed to store the data length\n   * according to QR Code specifications.\n   *\n   * @param  {Mode}   mode    Data mode\n   * @param  {Number} version QR Code version\n   * @return {Number}         Number of bits\n   */\n\n  exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\n    if (!mode.ccBits) throw new Error('Invalid mode: ' + mode);\n\n    if (!versionCheck.isValid(version)) {\n      throw new Error('Invalid version: ' + version);\n    }\n\n    if (version >= 1 && version < 10) return mode.ccBits[0];else if (version < 27) return mode.ccBits[1];\n    return mode.ccBits[2];\n  };\n  /**\n   * Returns the most efficient mode to store the specified data\n   *\n   * @param  {String} dataStr Input data string\n   * @return {Mode}           Best mode\n   */\n\n\n  exports.getBestModeForData = function getBestModeForData(dataStr) {\n    if (regex.testNumeric(dataStr)) return exports.NUMERIC;else if (regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC;else if (regex.testKanji(dataStr)) return exports.KANJI;else return exports.BYTE;\n  };\n  /**\n   * Return mode name as string\n   *\n   * @param {Mode} mode Mode object\n   * @returns {String}  Mode name\n   */\n\n\n  exports.toString = function toString(mode) {\n    if (mode && mode.id) return mode.id;\n    throw new Error('Invalid mode');\n  };\n  /**\n   * Check if input param is a valid mode object\n   *\n   * @param   {Mode}    mode Mode object\n   * @returns {Boolean} True if valid mode, false otherwise\n   */\n\n\n  exports.isValid = function isValid(mode) {\n    return mode && mode.bit && mode.ccBits;\n  };\n  /**\n   * Get mode object from its name\n   *\n   * @param   {String} string Mode name\n   * @returns {Mode}          Mode object\n   */\n\n\n  function fromString(string) {\n    if (typeof string !== 'string') {\n      throw new Error('Param is not a string');\n    }\n\n    var lcStr = string.toLowerCase();\n\n    switch (lcStr) {\n      case 'numeric':\n        return exports.NUMERIC;\n\n      case 'alphanumeric':\n        return exports.ALPHANUMERIC;\n\n      case 'kanji':\n        return exports.KANJI;\n\n      case 'byte':\n        return exports.BYTE;\n\n      default:\n        throw new Error('Unknown mode: ' + string);\n    }\n  }\n  /**\n   * Returns mode from a value.\n   * If value is not a valid mode, returns defaultValue\n   *\n   * @param  {Mode|String} value        Encoding mode\n   * @param  {Mode}        defaultValue Fallback value\n   * @return {Mode}                     Encoding mode\n   */\n\n\n  exports.from = function from(value, defaultValue) {\n    if (exports.isValid(value)) {\n      return value;\n    }\n\n    try {\n      return fromString(value);\n    } catch (e) {\n      return defaultValue;\n    }\n  };\n});\nvar version = createCommonjsModule(function (module, exports) {\n  // Generator polynomial used to encode version information\n  var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\n  var G18_BCH = utils.getBCHDigit(G18);\n\n  function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\n    for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n      if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n        return currentVersion;\n      }\n    }\n\n    return undefined;\n  }\n\n  function getReservedBitsCount(mode$1, version) {\n    // Character count indicator + mode indicator bits\n    return mode.getCharCountIndicator(mode$1, version) + 4;\n  }\n\n  function getTotalBitsFromDataArray(segments, version) {\n    var totalBits = 0;\n    segments.forEach(function (data) {\n      var reservedBits = getReservedBitsCount(data.mode, version);\n      totalBits += reservedBits + data.getBitsLength();\n    });\n    return totalBits;\n  }\n\n  function getBestVersionForMixedData(segments, errorCorrectionLevel) {\n    for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n      var length = getTotalBitsFromDataArray(segments, currentVersion);\n\n      if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode.MIXED)) {\n        return currentVersion;\n      }\n    }\n\n    return undefined;\n  }\n  /**\n   * Returns version number from a value.\n   * If value is not a valid version, returns defaultValue\n   *\n   * @param  {Number|String} value        QR Code version\n   * @param  {Number}        defaultValue Fallback value\n   * @return {Number}                     QR Code version number\n   */\n\n\n  exports.from = function from(value, defaultValue) {\n    if (versionCheck.isValid(value)) {\n      return parseInt(value, 10);\n    }\n\n    return defaultValue;\n  };\n  /**\n   * Returns how much data can be stored with the specified QR code version\n   * and error correction level\n   *\n   * @param  {Number} version              QR Code version (1-40)\n   * @param  {Number} errorCorrectionLevel Error correction level\n   * @param  {Mode}   mode                 Data mode\n   * @return {Number}                      Quantity of storable data\n   */\n\n\n  exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode$1) {\n    if (!versionCheck.isValid(version)) {\n      throw new Error('Invalid QR Code version');\n    } // Use Byte mode as default\n\n\n    if (typeof mode$1 === 'undefined') mode$1 = mode.BYTE; // Total codewords for this QR code version (Data + Error correction)\n\n    var totalCodewords = utils.getSymbolTotalCodewords(version); // Total number of error correction codewords\n\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel); // Total number of data codewords\n\n    var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n    if (mode$1 === mode.MIXED) return dataTotalCodewordsBits;\n    var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode$1, version); // Return max number of storable codewords\n\n    switch (mode$1) {\n      case mode.NUMERIC:\n        return Math.floor(usableBits / 10 * 3);\n\n      case mode.ALPHANUMERIC:\n        return Math.floor(usableBits / 11 * 2);\n\n      case mode.KANJI:\n        return Math.floor(usableBits / 13);\n\n      case mode.BYTE:\n      default:\n        return Math.floor(usableBits / 8);\n    }\n  };\n  /**\n   * Returns the minimum version needed to contain the amount of data\n   *\n   * @param  {Segment} data                    Segment of data\n   * @param  {Number} [errorCorrectionLevel=H] Error correction level\n   * @param  {Mode} mode                       Data mode\n   * @return {Number}                          QR Code version\n   */\n\n\n  exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel$1) {\n    var seg;\n    var ecl = errorCorrectionLevel.from(errorCorrectionLevel$1, errorCorrectionLevel.M);\n\n    if (isarray(data)) {\n      if (data.length > 1) {\n        return getBestVersionForMixedData(data, ecl);\n      }\n\n      if (data.length === 0) {\n        return 1;\n      }\n\n      seg = data[0];\n    } else {\n      seg = data;\n    }\n\n    return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\n  };\n  /**\n   * Returns version information with relative error correction bits\n   *\n   * The version information is included in QR Code symbols of version 7 or larger.\n   * It consists of an 18-bit sequence containing 6 data bits,\n   * with 12 error correction bits calculated using the (18, 6) Golay code.\n   *\n   * @param  {Number} version QR Code version\n   * @return {Number}         Encoded version info bits\n   */\n\n\n  exports.getEncodedBits = function getEncodedBits(version) {\n    if (!versionCheck.isValid(version) || version < 7) {\n      throw new Error('Invalid QR Code version');\n    }\n\n    var d = version << 12;\n\n    while (utils.getBCHDigit(d) - G18_BCH >= 0) {\n      d ^= G18 << utils.getBCHDigit(d) - G18_BCH;\n    }\n\n    return version << 12 | d;\n  };\n});\nvar G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\nvar G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\nvar G15_BCH = utils.getBCHDigit(G15);\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\n\nvar getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {\n  var data = errorCorrectionLevel.bit << 3 | mask;\n  var d = data << 10;\n\n  while (utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= G15 << utils.getBCHDigit(d) - G15_BCH;\n  } // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n\n\n  return (data << 10 | d) ^ G15_MASK;\n};\n\nvar formatInfo = {\n  getEncodedBits: getEncodedBits\n};\n\nfunction NumericData(data) {\n  this.mode = mode.NUMERIC;\n  this.data = data.toString();\n}\n\nNumericData.getBitsLength = function getBitsLength(length) {\n  return 10 * Math.floor(length / 3) + (length % 3 ? length % 3 * 3 + 1 : 0);\n};\n\nNumericData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\n\nNumericData.prototype.getBitsLength = function getBitsLength() {\n  return NumericData.getBitsLength(this.data.length);\n};\n\nNumericData.prototype.write = function write(bitBuffer) {\n  var i, group, value; // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3);\n    value = parseInt(group, 10);\n    bitBuffer.put(value, 10);\n  } // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n\n\n  var remainingNum = this.data.length - i;\n\n  if (remainingNum > 0) {\n    group = this.data.substr(i);\n    value = parseInt(group, 10);\n    bitBuffer.put(value, remainingNum * 3 + 1);\n  }\n};\n\nvar numericData = NumericData;\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\n\nvar ALPHA_NUM_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', '$', '%', '*', '+', '-', '.', '/', ':'];\n\nfunction AlphanumericData(data) {\n  this.mode = mode.ALPHANUMERIC;\n  this.data = data;\n}\n\nAlphanumericData.getBitsLength = function getBitsLength(length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2);\n};\n\nAlphanumericData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength() {\n  return AlphanumericData.getBitsLength(this.data.length);\n};\n\nAlphanumericData.prototype.write = function write(bitBuffer) {\n  var i; // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45; // The character value of the second digit is added to the product\n\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]); // The sum is then stored as 11-bit binary number\n\n    bitBuffer.put(value, 11);\n  } // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n\n\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n  }\n};\n\nvar alphanumericData = AlphanumericData;\n\nfunction ByteData(data) {\n  this.mode = mode.BYTE;\n  this.data = typedarrayBuffer.from(data);\n}\n\nByteData.getBitsLength = function getBitsLength(length) {\n  return length * 8;\n};\n\nByteData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\n\nByteData.prototype.getBitsLength = function getBitsLength() {\n  return ByteData.getBitsLength(this.data.length);\n};\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8);\n  }\n};\n\nvar byteData = ByteData;\n\nfunction KanjiData(data) {\n  this.mode = mode.KANJI;\n  this.data = data;\n}\n\nKanjiData.getBitsLength = function getBitsLength(length) {\n  return length * 13;\n};\n\nKanjiData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\n\nKanjiData.prototype.getBitsLength = function getBitsLength() {\n  return KanjiData.getBitsLength(this.data.length);\n};\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i; // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n\n  for (i = 0; i < this.data.length; i++) {\n    var value = utils.toSJIS(this.data[i]); // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140; // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140;\n    } else {\n      throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' + 'Make sure your charset is UTF-8');\n    } // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n\n\n    value = (value >>> 8 & 0xff) * 0xC0 + (value & 0xff); // Convert result to a 13-bit binary string\n\n    bitBuffer.put(value, 13);\n  }\n};\n\nvar kanjiData = KanjiData;\nvar dijkstra_1 = createCommonjsModule(function (module) {\n  /******************************************************************************\n   * Created 2008-08-19.\n   *\n   * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n   *\n   * Copyright (C) 2008\n   *   Wyatt Baldwin <self@wyattbaldwin.com>\n   *   All rights reserved\n   *\n   * Licensed under the MIT license.\n   *\n   *   http://www.opensource.org/licenses/mit-license.php\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n   * THE SOFTWARE.\n   *****************************************************************************/\n  var dijkstra = {\n    single_source_shortest_paths: function (graph, s, d) {\n      // Predecessor map for each node that has been encountered.\n      // node ID => predecessor node ID\n      var predecessors = {}; // Costs of shortest paths from s to all nodes encountered.\n      // node ID => cost\n\n      var costs = {};\n      costs[s] = 0; // Costs of shortest paths from s to all nodes encountered; differs from\n      // `costs` in that it provides easy access to the node that currently has\n      // the known shortest path from s.\n      // XXX: Do we actually need both `costs` and `open`?\n\n      var open = dijkstra.PriorityQueue.make();\n      open.push(s, 0);\n      var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;\n\n      while (!open.empty()) {\n        // In the nodes remaining in graph that have a known cost from s,\n        // find the node, u, that currently has the shortest path from s.\n        closest = open.pop();\n        u = closest.value;\n        cost_of_s_to_u = closest.cost; // Get nodes adjacent to u...\n\n        adjacent_nodes = graph[u] || {}; // ...and explore the edges that connect u to those nodes, updating\n        // the cost of the shortest paths to any or all of those nodes as\n        // necessary. v is the node across the current edge from u.\n\n        for (v in adjacent_nodes) {\n          if (adjacent_nodes.hasOwnProperty(v)) {\n            // Get the cost of the edge running from u to v.\n            cost_of_e = adjacent_nodes[v]; // Cost of s to u plus the cost of u to v across e--this is *a*\n            // cost from s to v that may or may not be less than the current\n            // known cost to v.\n\n            cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e; // If we haven't visited v yet OR if the current known cost from s to\n            // v is greater than the new cost we just found (cost of s to u plus\n            // cost of u to v across e), update v's cost in the cost list and\n            // update v's predecessor in the predecessor list (it's now u).\n\n            cost_of_s_to_v = costs[v];\n            first_visit = typeof costs[v] === 'undefined';\n\n            if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n              costs[v] = cost_of_s_to_u_plus_cost_of_e;\n              open.push(v, cost_of_s_to_u_plus_cost_of_e);\n              predecessors[v] = u;\n            }\n          }\n        }\n      }\n\n      if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n        var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n        throw new Error(msg);\n      }\n\n      return predecessors;\n    },\n    extract_shortest_path_from_predecessor_list: function (predecessors, d) {\n      var nodes = [];\n      var u = d;\n\n      while (u) {\n        nodes.push(u);\n        u = predecessors[u];\n      }\n\n      nodes.reverse();\n      return nodes;\n    },\n    find_path: function (graph, s, d) {\n      var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n      return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);\n    },\n\n    /**\n     * A very naive priority queue implementation.\n     */\n    PriorityQueue: {\n      make: function (opts) {\n        var T = dijkstra.PriorityQueue,\n            t = {},\n            key;\n        opts = opts || {};\n\n        for (key in T) {\n          if (T.hasOwnProperty(key)) {\n            t[key] = T[key];\n          }\n        }\n\n        t.queue = [];\n        t.sorter = opts.sorter || T.default_sorter;\n        return t;\n      },\n      default_sorter: function (a, b) {\n        return a.cost - b.cost;\n      },\n\n      /**\n       * Add a new item to the queue and ensure the highest priority element\n       * is at the front of the queue.\n       */\n      push: function (value, cost) {\n        var item = {\n          value: value,\n          cost: cost\n        };\n        this.queue.push(item);\n        this.queue.sort(this.sorter);\n      },\n\n      /**\n       * Return the highest priority element in the queue.\n       */\n      pop: function () {\n        return this.queue.shift();\n      },\n      empty: function () {\n        return this.queue.length === 0;\n      }\n    }\n  }; // node.js module exports\n\n  {\n    module.exports = dijkstra;\n  }\n});\nvar segments = createCommonjsModule(function (module, exports) {\n  /**\n   * Returns UTF8 byte length\n   *\n   * @param  {String} str Input string\n   * @return {Number}     Number of byte\n   */\n  function getStringByteLength(str) {\n    return unescape(encodeURIComponent(str)).length;\n  }\n  /**\n   * Get a list of segments of the specified mode\n   * from a string\n   *\n   * @param  {Mode}   mode Segment mode\n   * @param  {String} str  String to process\n   * @return {Array}       Array of object with segments data\n   */\n\n\n  function getSegments(regex, mode, str) {\n    var segments = [];\n    var result;\n\n    while ((result = regex.exec(str)) !== null) {\n      segments.push({\n        data: result[0],\n        index: result.index,\n        mode: mode,\n        length: result[0].length\n      });\n    }\n\n    return segments;\n  }\n  /**\n   * Extracts a series of segments with the appropriate\n   * modes from a string\n   *\n   * @param  {String} dataStr Input string\n   * @return {Array}          Array of object with segments data\n   */\n\n\n  function getSegmentsFromString(dataStr) {\n    var numSegs = getSegments(regex.NUMERIC, mode.NUMERIC, dataStr);\n    var alphaNumSegs = getSegments(regex.ALPHANUMERIC, mode.ALPHANUMERIC, dataStr);\n    var byteSegs;\n    var kanjiSegs;\n\n    if (utils.isKanjiModeEnabled()) {\n      byteSegs = getSegments(regex.BYTE, mode.BYTE, dataStr);\n      kanjiSegs = getSegments(regex.KANJI, mode.KANJI, dataStr);\n    } else {\n      byteSegs = getSegments(regex.BYTE_KANJI, mode.BYTE, dataStr);\n      kanjiSegs = [];\n    }\n\n    var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\n    return segs.sort(function (s1, s2) {\n      return s1.index - s2.index;\n    }).map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      };\n    });\n  }\n  /**\n   * Returns how many bits are needed to encode a string of\n   * specified length with the specified mode\n   *\n   * @param  {Number} length String length\n   * @param  {Mode} mode     Segment mode\n   * @return {Number}        Bit length\n   */\n\n\n  function getSegmentBitsLength(length, mode$1) {\n    switch (mode$1) {\n      case mode.NUMERIC:\n        return numericData.getBitsLength(length);\n\n      case mode.ALPHANUMERIC:\n        return alphanumericData.getBitsLength(length);\n\n      case mode.KANJI:\n        return kanjiData.getBitsLength(length);\n\n      case mode.BYTE:\n        return byteData.getBitsLength(length);\n    }\n  }\n  /**\n   * Merges adjacent segments which have the same mode\n   *\n   * @param  {Array} segs Array of object with segments data\n   * @return {Array}      Array of object with segments data\n   */\n\n\n  function mergeSegments(segs) {\n    return segs.reduce(function (acc, curr) {\n      var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\n\n      if (prevSeg && prevSeg.mode === curr.mode) {\n        acc[acc.length - 1].data += curr.data;\n        return acc;\n      }\n\n      acc.push(curr);\n      return acc;\n    }, []);\n  }\n  /**\n   * Generates a list of all possible nodes combination which\n   * will be used to build a segments graph.\n   *\n   * Nodes are divided by groups. Each group will contain a list of all the modes\n   * in which is possible to encode the given text.\n   *\n   * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n   * The group for '12345' will contain then 3 objects, one for each\n   * possible encoding mode.\n   *\n   * Each node represents a possible segment.\n   *\n   * @param  {Array} segs Array of object with segments data\n   * @return {Array}      Array of object with segments data\n   */\n\n\n  function buildNodes(segs) {\n    var nodes = [];\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      switch (seg.mode) {\n        case mode.NUMERIC:\n          nodes.push([seg, {\n            data: seg.data,\n            mode: mode.ALPHANUMERIC,\n            length: seg.length\n          }, {\n            data: seg.data,\n            mode: mode.BYTE,\n            length: seg.length\n          }]);\n          break;\n\n        case mode.ALPHANUMERIC:\n          nodes.push([seg, {\n            data: seg.data,\n            mode: mode.BYTE,\n            length: seg.length\n          }]);\n          break;\n\n        case mode.KANJI:\n          nodes.push([seg, {\n            data: seg.data,\n            mode: mode.BYTE,\n            length: getStringByteLength(seg.data)\n          }]);\n          break;\n\n        case mode.BYTE:\n          nodes.push([{\n            data: seg.data,\n            mode: mode.BYTE,\n            length: getStringByteLength(seg.data)\n          }]);\n      }\n    }\n\n    return nodes;\n  }\n  /**\n   * Builds a graph from a list of nodes.\n   * All segments in each node group will be connected with all the segments of\n   * the next group and so on.\n   *\n   * At each connection will be assigned a weight depending on the\n   * segment's byte length.\n   *\n   * @param  {Array} nodes    Array of object with segments data\n   * @param  {Number} version QR Code version\n   * @return {Object}         Graph of all possible segments\n   */\n\n\n  function buildGraph(nodes, version) {\n    var table = {};\n    var graph = {\n      'start': {}\n    };\n    var prevNodeIds = ['start'];\n\n    for (var i = 0; i < nodes.length; i++) {\n      var nodeGroup = nodes[i];\n      var currentNodeIds = [];\n\n      for (var j = 0; j < nodeGroup.length; j++) {\n        var node = nodeGroup[j];\n        var key = '' + i + j;\n        currentNodeIds.push(key);\n        table[key] = {\n          node: node,\n          lastCount: 0\n        };\n        graph[key] = {};\n\n        for (var n = 0; n < prevNodeIds.length; n++) {\n          var prevNodeId = prevNodeIds[n];\n\n          if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n            graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\n            table[prevNodeId].lastCount += node.length;\n          } else {\n            if (table[prevNodeId]) table[prevNodeId].lastCount = node.length;\n            graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + mode.getCharCountIndicator(node.mode, version); // switch cost\n          }\n        }\n      }\n\n      prevNodeIds = currentNodeIds;\n    }\n\n    for (n = 0; n < prevNodeIds.length; n++) {\n      graph[prevNodeIds[n]]['end'] = 0;\n    }\n\n    return {\n      map: graph,\n      table: table\n    };\n  }\n  /**\n   * Builds a segment from a specified data and mode.\n   * If a mode is not specified, the more suitable will be used.\n   *\n   * @param  {String} data             Input data\n   * @param  {Mode | String} modesHint Data mode\n   * @return {Segment}                 Segment\n   */\n\n\n  function buildSingleSegment(data, modesHint) {\n    var mode$1;\n    var bestMode = mode.getBestModeForData(data);\n    mode$1 = mode.from(modesHint, bestMode); // Make sure data can be encoded\n\n    if (mode$1 !== mode.BYTE && mode$1.bit < bestMode.bit) {\n      throw new Error('\"' + data + '\"' + ' cannot be encoded with mode ' + mode.toString(mode$1) + '.\\n Suggested mode is: ' + mode.toString(bestMode));\n    } // Use Mode.BYTE if Kanji support is disabled\n\n\n    if (mode$1 === mode.KANJI && !utils.isKanjiModeEnabled()) {\n      mode$1 = mode.BYTE;\n    }\n\n    switch (mode$1) {\n      case mode.NUMERIC:\n        return new numericData(data);\n\n      case mode.ALPHANUMERIC:\n        return new alphanumericData(data);\n\n      case mode.KANJI:\n        return new kanjiData(data);\n\n      case mode.BYTE:\n        return new byteData(data);\n    }\n  }\n  /**\n   * Builds a list of segments from an array.\n   * Array can contain Strings or Objects with segment's info.\n   *\n   * For each item which is a string, will be generated a segment with the given\n   * string and the more appropriate encoding mode.\n   *\n   * For each item which is an object, will be generated a segment with the given\n   * data and mode.\n   * Objects must contain at least the property \"data\".\n   * If property \"mode\" is not present, the more suitable mode will be used.\n   *\n   * @param  {Array} array Array of objects with segments data\n   * @return {Array}       Array of Segments\n   */\n\n\n  exports.fromArray = function fromArray(array) {\n    return array.reduce(function (acc, seg) {\n      if (typeof seg === 'string') {\n        acc.push(buildSingleSegment(seg, null));\n      } else if (seg.data) {\n        acc.push(buildSingleSegment(seg.data, seg.mode));\n      }\n\n      return acc;\n    }, []);\n  };\n  /**\n   * Builds an optimized sequence of segments from a string,\n   * which will produce the shortest possible bitstream.\n   *\n   * @param  {String} data    Input string\n   * @param  {Number} version QR Code version\n   * @return {Array}          Array of segments\n   */\n\n\n  exports.fromString = function fromString(data, version) {\n    var segs = getSegmentsFromString(data, utils.isKanjiModeEnabled());\n    var nodes = buildNodes(segs);\n    var graph = buildGraph(nodes, version);\n    var path = dijkstra_1.find_path(graph.map, 'start', 'end');\n    var optimizedSegs = [];\n\n    for (var i = 1; i < path.length - 1; i++) {\n      optimizedSegs.push(graph.table[path[i]].node);\n    }\n\n    return exports.fromArray(mergeSegments(optimizedSegs));\n  };\n  /**\n   * Splits a string in various segments with the modes which\n   * best represent their content.\n   * The produced segments are far from being optimized.\n   * The output of this function is only used to estimate a QR Code version\n   * which may contain the data.\n   *\n   * @param  {string} data Input string\n   * @return {Array}       Array of segments\n   */\n\n\n  exports.rawSplit = function rawSplit(data) {\n    return exports.fromArray(getSegmentsFromString(data, utils.isKanjiModeEnabled()));\n  };\n});\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\n\nfunction setupFinderPattern(matrix, version) {\n  var size = matrix.size;\n  var pos = finderPattern.getPositions(version);\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0];\n    var col = pos[i][1];\n\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue;\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue;\n\n        if (r >= 0 && r <= 6 && (c === 0 || c === 6) || c >= 0 && c <= 6 && (r === 0 || r === 6) || r >= 2 && r <= 4 && c >= 2 && c <= 4) {\n          matrix.set(row + r, col + c, true, true);\n        } else {\n          matrix.set(row + r, col + c, false, true);\n        }\n      }\n    }\n  }\n}\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\n\n\nfunction setupTimingPattern(matrix) {\n  var size = matrix.size;\n\n  for (var r = 8; r < size - 8; r++) {\n    var value = r % 2 === 0;\n    matrix.set(r, 6, value, true);\n    matrix.set(6, r, value, true);\n  }\n}\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\n\n\nfunction setupAlignmentPattern(matrix, version) {\n  var pos = alignmentPattern.getPositions(version);\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0];\n    var col = pos[i][1];\n\n    for (var r = -2; r <= 2; r++) {\n      for (var c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 || r === 0 && c === 0) {\n          matrix.set(row + r, col + c, true, true);\n        } else {\n          matrix.set(row + r, col + c, false, true);\n        }\n      }\n    }\n  }\n}\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\n\n\nfunction setupVersionInfo(matrix, version$1) {\n  var size = matrix.size;\n  var bits = version.getEncodedBits(version$1);\n  var row, col, mod;\n\n  for (var i = 0; i < 18; i++) {\n    row = Math.floor(i / 3);\n    col = i % 3 + size - 8 - 3;\n    mod = (bits >> i & 1) === 1;\n    matrix.set(row, col, mod, true);\n    matrix.set(col, row, mod, true);\n  }\n}\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\n\n\nfunction setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\n  var size = matrix.size;\n  var bits = formatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);\n  var i, mod;\n\n  for (i = 0; i < 15; i++) {\n    mod = (bits >> i & 1) === 1; // vertical\n\n    if (i < 6) {\n      matrix.set(i, 8, mod, true);\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true);\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true);\n    } // horizontal\n\n\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true);\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true);\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true);\n    }\n  } // fixed module\n\n\n  matrix.set(size - 8, 8, 1, true);\n}\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\n\n\nfunction setupData(matrix, data) {\n  var size = matrix.size;\n  var inc = -1;\n  var row = size - 1;\n  var bitIndex = 7;\n  var byteIndex = 0;\n\n  for (var col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--;\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          var dark = false;\n\n          if (byteIndex < data.length) {\n            dark = (data[byteIndex] >>> bitIndex & 1) === 1;\n          }\n\n          matrix.set(row, col - c, dark);\n          bitIndex--;\n\n          if (bitIndex === -1) {\n            byteIndex++;\n            bitIndex = 7;\n          }\n        }\n      }\n\n      row += inc;\n\n      if (row < 0 || size <= row) {\n        row -= inc;\n        inc = -inc;\n        break;\n      }\n    }\n  }\n}\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\n\n\nfunction createData(version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  var buffer = new bitBuffer();\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4); // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n\n    buffer.put(data.getLength(), mode.getCharCountIndicator(data.mode, version)); // add binary data sequence to buffer\n\n    data.write(buffer);\n  }); // Calculate required number of bits\n\n  var totalCodewords = utils.getSymbolTotalCodewords(version);\n  var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8; // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4);\n  } // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n\n\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0);\n  } // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n\n\n  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\n\n  for (var i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8);\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel);\n}\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\n\n\nfunction createCodewords(bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = utils.getSymbolTotalCodewords(version); // Total number of error correction codewords\n\n  var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel); // Total number of data codewords\n\n  var dataTotalCodewords = totalCodewords - ecTotalCodewords; // Total number of blocks\n\n  var ecTotalBlocks = errorCorrectionCode.getBlocksCount(version, errorCorrectionLevel); // Calculate how many blocks each group should contain\n\n  var blocksInGroup2 = totalCodewords % ecTotalBlocks;\n  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\n  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\n  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\n  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1; // Number of EC codewords is the same for both groups\n\n  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1; // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n\n  var rs = new reedSolomonEncoder(ecCount);\n  var offset = 0;\n  var dcData = new Array(ecTotalBlocks);\n  var ecData = new Array(ecTotalBlocks);\n  var maxDataSize = 0;\n  var buffer = typedarrayBuffer.from(bitBuffer.buffer); // Divide the buffer into the required number of blocks\n\n  for (var b = 0; b < ecTotalBlocks; b++) {\n    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2; // extract a block of data from buffer\n\n    dcData[b] = buffer.slice(offset, offset + dataSize); // Calculate EC codewords for this data block\n\n    ecData[b] = rs.encode(dcData[b]);\n    offset += dataSize;\n    maxDataSize = Math.max(maxDataSize, dataSize);\n  } // Create final data\n  // Interleave the data and error correction codewords from each block\n\n\n  var data = typedarrayBuffer.alloc(totalCodewords);\n  var index = 0;\n  var i, r; // Add data codewords\n\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i];\n      }\n    }\n  } // Apped EC codewords\n\n\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i];\n    }\n  }\n\n  return data;\n}\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\n\n\nfunction createSymbol(data, version$1, errorCorrectionLevel, maskPattern$1) {\n  var segments$1;\n\n  if (isarray(data)) {\n    segments$1 = segments.fromArray(data);\n  } else if (typeof data === 'string') {\n    var estimatedVersion = version$1;\n\n    if (!estimatedVersion) {\n      var rawSegments = segments.rawSplit(data); // Estimate best version that can contain raw splitted segments\n\n      estimatedVersion = version.getBestVersionForData(rawSegments, errorCorrectionLevel);\n    } // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n\n\n    segments$1 = segments.fromString(data, estimatedVersion || 40);\n  } else {\n    throw new Error('Invalid data');\n  } // Get the min version that can contain data\n\n\n  var bestVersion = version.getBestVersionForData(segments$1, errorCorrectionLevel); // If no version is found, data cannot be stored\n\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code');\n  } // If not specified, use min version as default\n\n\n  if (!version$1) {\n    version$1 = bestVersion; // Check if the specified version can contain the data\n  } else if (version$1 < bestVersion) {\n    throw new Error('\\n' + 'The chosen QR Code version cannot contain this amount of data.\\n' + 'Minimum version required to store current data is: ' + bestVersion + '.\\n');\n  }\n\n  var dataBits = createData(version$1, errorCorrectionLevel, segments$1); // Allocate matrix buffer\n\n  var moduleCount = utils.getSymbolSize(version$1);\n  var modules = new bitMatrix(moduleCount); // Add function modules\n\n  setupFinderPattern(modules, version$1);\n  setupTimingPattern(modules);\n  setupAlignmentPattern(modules, version$1); // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n\n  setupFormatInfo(modules, errorCorrectionLevel, 0);\n\n  if (version$1 >= 7) {\n    setupVersionInfo(modules, version$1);\n  } // Add data codewords\n\n\n  setupData(modules, dataBits);\n\n  if (isNaN(maskPattern$1)) {\n    // Find best mask pattern\n    maskPattern$1 = maskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));\n  } // Apply mask pattern\n\n\n  maskPattern.applyMask(maskPattern$1, modules); // Replace format info bits with correct values\n\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern$1);\n  return {\n    modules: modules,\n    version: version$1,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern$1,\n    segments: segments$1\n  };\n}\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\n\n\nvar create = function create(data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text');\n  }\n\n  var errorCorrectionLevel$1 = errorCorrectionLevel.M;\n  var version$1;\n  var mask;\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel$1 = errorCorrectionLevel.from(options.errorCorrectionLevel, errorCorrectionLevel.M);\n    version$1 = version.from(options.version);\n    mask = maskPattern.from(options.maskPattern);\n\n    if (options.toSJISFunc) {\n      utils.setToSJISFunction(options.toSJISFunc);\n    }\n  }\n\n  return createSymbol(data, version$1, errorCorrectionLevel$1, mask);\n};\n\nvar qrcode = {\n  create: create\n};\nvar utils$1 = createCommonjsModule(function (module, exports) {\n  function hex2rgba(hex) {\n    if (typeof hex === 'number') {\n      hex = hex.toString();\n    }\n\n    if (typeof hex !== 'string') {\n      throw new Error('Color should be defined as hex string');\n    }\n\n    var hexCode = hex.slice().replace('#', '').split('');\n\n    if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n      throw new Error('Invalid hex color: ' + hex);\n    } // Convert from short to long form (fff -> ffffff)\n\n\n    if (hexCode.length === 3 || hexCode.length === 4) {\n      hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n        return [c, c];\n      }));\n    } // Add default alpha value\n\n\n    if (hexCode.length === 6) hexCode.push('F', 'F');\n    var hexValue = parseInt(hexCode.join(''), 16);\n    return {\n      r: hexValue >> 24 & 255,\n      g: hexValue >> 16 & 255,\n      b: hexValue >> 8 & 255,\n      a: hexValue & 255,\n      hex: '#' + hexCode.slice(0, 6).join('')\n    };\n  }\n\n  exports.getOptions = function getOptions(options) {\n    if (!options) options = {};\n    if (!options.color) options.color = {};\n    var margin = typeof options.margin === 'undefined' || options.margin === null || options.margin < 0 ? 4 : options.margin;\n    var width = options.width && options.width >= 21 ? options.width : undefined;\n    var scale = options.scale || 4;\n    return {\n      width: width,\n      scale: width ? 4 : scale,\n      margin: margin,\n      color: {\n        dark: hex2rgba(options.color.dark || '#000000ff'),\n        light: hex2rgba(options.color.light || '#ffffffff')\n      },\n      type: options.type,\n      rendererOpts: options.rendererOpts || {}\n    };\n  };\n\n  exports.getScale = function getScale(qrSize, opts) {\n    return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;\n  };\n\n  exports.getImageWidth = function getImageWidth(qrSize, opts) {\n    var scale = exports.getScale(qrSize, opts);\n    return Math.floor((qrSize + opts.margin * 2) * scale);\n  };\n\n  exports.qrToImageData = function qrToImageData(imgData, qr, opts) {\n    var size = qr.modules.size;\n    var data = qr.modules.data;\n    var scale = exports.getScale(size, opts);\n    var symbolSize = Math.floor((size + opts.margin * 2) * scale);\n    var scaledMargin = opts.margin * scale;\n    var palette = [opts.color.light, opts.color.dark];\n\n    for (var i = 0; i < symbolSize; i++) {\n      for (var j = 0; j < symbolSize; j++) {\n        var posDst = (i * symbolSize + j) * 4;\n        var pxColor = opts.color.light;\n\n        if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n          var iSrc = Math.floor((i - scaledMargin) / scale);\n          var jSrc = Math.floor((j - scaledMargin) / scale);\n          pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n        }\n\n        imgData[posDst++] = pxColor.r;\n        imgData[posDst++] = pxColor.g;\n        imgData[posDst++] = pxColor.b;\n        imgData[posDst] = pxColor.a;\n      }\n    }\n  };\n});\nvar canvas = createCommonjsModule(function (module, exports) {\n  function clearCanvas(ctx, canvas, size) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (!canvas.style) canvas.style = {};\n    canvas.height = size;\n    canvas.width = size;\n    canvas.style.height = size + 'px';\n    canvas.style.width = size + 'px';\n  }\n\n  function getCanvasElement() {\n    try {\n      return document.createElement('canvas');\n    } catch (e) {\n      throw new Error('You need to specify a canvas element');\n    }\n  }\n\n  exports.render = function render(qrData, canvas, options) {\n    var opts = options;\n    var canvasEl = canvas;\n\n    if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n      opts = canvas;\n      canvas = undefined;\n    }\n\n    if (!canvas) {\n      canvasEl = getCanvasElement();\n    }\n\n    opts = utils$1.getOptions(opts);\n    var size = utils$1.getImageWidth(qrData.modules.size, opts);\n    var ctx = canvasEl.getContext('2d');\n    var image = ctx.createImageData(size, size);\n    utils$1.qrToImageData(image.data, qrData, opts);\n    clearCanvas(ctx, canvasEl, size);\n    ctx.putImageData(image, 0, 0);\n    return canvasEl;\n  };\n\n  exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\n    var opts = options;\n\n    if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n      opts = canvas;\n      canvas = undefined;\n    }\n\n    if (!opts) opts = {};\n    var canvasEl = exports.render(qrData, canvas, opts);\n    var type = opts.type || 'image/png';\n    var rendererOpts = opts.rendererOpts || {};\n    return canvasEl.toDataURL(type, rendererOpts.quality);\n  };\n});\n\nfunction getColorAttrib(color, attrib) {\n  var alpha = color.a / 255;\n  var str = attrib + '=\"' + color.hex + '\"';\n  return alpha < 1 ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"' : str;\n}\n\nfunction svgCmd(cmd, x, y) {\n  var str = cmd + x;\n  if (typeof y !== 'undefined') str += ' ' + y;\n  return str;\n}\n\nfunction qrToPath(data, size, margin) {\n  var path = '';\n  var moveBy = 0;\n  var newRow = false;\n  var lineLength = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    var col = Math.floor(i % size);\n    var row = Math.floor(i / size);\n    if (!col && !newRow) newRow = true;\n\n    if (data[i]) {\n      lineLength++;\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow ? svgCmd('M', col + margin, 0.5 + row + margin) : svgCmd('m', moveBy, 0);\n        moveBy = 0;\n        newRow = false;\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength);\n        lineLength = 0;\n      }\n    } else {\n      moveBy++;\n    }\n  }\n\n  return path;\n}\n\nvar render = function render(qrData, options, cb) {\n  var opts = utils$1.getOptions(options);\n  var size = qrData.modules.size;\n  var data = qrData.modules.data;\n  var qrcodesize = size + opts.margin * 2;\n  var bg = !opts.color.light.a ? '' : '<path ' + getColorAttrib(opts.color.light, 'fill') + ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>';\n  var path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') + ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>';\n  var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"';\n  var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\n  var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n';\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag);\n  }\n\n  return svgTag;\n};\n\nvar svgTag = {\n  render: render\n};\n\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\n  var args = [].slice.call(arguments, 1);\n  var argsNum = args.length;\n  var isLastArgCb = typeof args[argsNum - 1] === 'function';\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument');\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided');\n    }\n\n    if (argsNum === 2) {\n      cb = text;\n      text = canvas;\n      canvas = opts = undefined;\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts;\n        opts = undefined;\n      } else {\n        cb = opts;\n        opts = text;\n        text = canvas;\n        canvas = undefined;\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided');\n    }\n\n    if (argsNum === 1) {\n      text = canvas;\n      canvas = opts = undefined;\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text;\n      text = canvas;\n      canvas = undefined;\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var data = qrcode.create(text, opts);\n        resolve(renderFunc(data, canvas, opts));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  try {\n    var data = qrcode.create(text, opts);\n    cb(null, renderFunc(data, canvas, opts));\n  } catch (e) {\n    cb(e);\n  }\n}\n\nvar create$1 = qrcode.create;\nvar toCanvas = renderCanvas.bind(null, canvas.render);\nvar toDataURL = renderCanvas.bind(null, canvas.renderToDataURL); // only svg for now.\n\nvar toString_1 = renderCanvas.bind(null, function (data, _, opts) {\n  return svgTag.render(data, opts);\n});\nvar browser = {\n  create: create$1,\n  toCanvas: toCanvas,\n  toDataURL: toDataURL,\n  toString: toString_1\n};\nvar amplifyTotpSetupCss = \".totp-setup{text-align:center;margin-bottom:30px}.totp-setup img{height:128px;width:128px}\";\nvar logger = new Logger('TOTP');\n\nvar AmplifyTOTPSetup =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    registerInstance(this, hostRef);\n    this.inputProps = {\n      autoFocus: true\n    };\n    /** Auth state change handler for this component */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n    /** Used for header text in totp setup component */\n\n    this.headerText = Translations.TOTP_HEADER_TEXT;\n    /** Used for customizing the issuer string in the qr code image */\n\n    this.issuer = Translations.TOTP_ISSUER;\n    this.code = null;\n    this.setupMessage = null;\n    this.qrCodeInput = null;\n    this.loading = false;\n  }\n\n  class_1.prototype.componentWillLoad = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            /**\n             * We didn't use `@Watch` here because it doesn't fire when we go from require-new-password to totp-setup.\n             * That is because `Auth.completeNewPassword` only changes `user` in place and Watch doesn't detect changes\n             * unless we make a clone.\n             */\n            this.removeHubListener = onAuthUIStateChange(function (authState) {\n              if (authState === AuthState.TOTPSetup) _this.setup();\n            });\n            return [4\n            /*yield*/\n            , this.setup()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.disconnectedCallback = function () {\n    this.removeHubListener && this.removeHubListener(); // stop listening to `onAuthUIStateChange`\n  };\n\n  class_1.prototype.buildOtpAuthPath = function (user, issuer, secretKey) {\n    return \"otpauth://totp/\" + issuer + \":\" + user.username + \"?secret=\" + secretKey + \"&issuer=\" + issuer;\n  };\n\n  class_1.prototype.onTOTPEvent = function (event, data, user) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('on totp event', event, data);\n            if (!(event === SETUP_TOTP && data === SUCCESS)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , checkContact(user, this.handleAuthStateChange)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.handleTotpInputChange = function (event) {\n    this.setupMessage = null;\n    this.qrCodeInput = event.target.value;\n  };\n\n  class_1.prototype.generateQRCode = function (codeFromTotp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, error_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            _a = this;\n            return [4\n            /*yield*/\n            , browser.toDataURL(codeFromTotp)];\n\n          case 1:\n            _a.qrCodeImageSource = _b.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_1 = _b.sent();\n            dispatchToastHubEvent(error_1);\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.setup = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var encodedIssuer, secretKey, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // ensure setup is only run once after totp setup is available\n            if (!this.user || this.user.challengeName !== 'MFA_SETUP' || this.loading) return [2\n            /*return*/\n            ];\n            this.setupMessage = null;\n            encodedIssuer = encodeURI(I18n.get(this.issuer));\n\n            if (!Auth || typeof Auth.setupTOTP !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , Auth.setupTOTP(this.user)];\n\n          case 2:\n            secretKey = _a.sent();\n            logger.debug('secret key', secretKey);\n            this.code = this.buildOtpAuthPath(this.user, encodedIssuer, secretKey);\n            this.generateQRCode(this.code);\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            error_2 = _a.sent();\n            dispatchToastHubEvent(error_2);\n            logger.debug(I18n.get(Translations.TOTP_SETUP_FAILURE), error_2);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.verifyTotpToken = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var user, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (event) {\n              event.preventDefault();\n            }\n\n            if (!this.qrCodeInput) {\n              logger.debug('No TOTP Code provided');\n              return [2\n              /*return*/\n              ];\n            }\n\n            user = this.user;\n\n            if (!Auth || typeof Auth.verifyTotpToken !== 'function' || typeof Auth.setPreferredMFA !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , Auth.verifyTotpToken(user, this.qrCodeInput)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , Auth.setPreferredMFA(user, MfaOption.TOTP)];\n\n          case 3:\n            _a.sent();\n\n            this.setupMessage = I18n.get(Translations.TOTP_SUCCESS_MESSAGE);\n            logger.debug(I18n.get(Translations.TOTP_SUCCESS_MESSAGE));\n            return [4\n            /*yield*/\n            , this.onTOTPEvent(SETUP_TOTP, SUCCESS, user)];\n\n          case 4:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            error_3 = _a.sent();\n            this.setupMessage = I18n.get(Translations.TOTP_SETUP_FAILURE);\n            logger.error(error_3);\n            return [3\n            /*break*/\n            , 6];\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.render = function () {\n    var _this = this;\n\n    return h(Host, null, h(\"amplify-form-section\", {\n      headerText: I18n.get(this.headerText),\n      submitButtonText: I18n.get(Translations.TOTP_SUBMIT_BUTTON_TEXT),\n      handleSubmit: function (event) {\n        return _this.verifyTotpToken(event);\n      },\n      loading: this.loading\n    }, h(\"div\", {\n      class: \"totp-setup\"\n    }, this.qrCodeImageSource && h(\"img\", {\n      src: this.qrCodeImageSource,\n      alt: I18n.get(Translations.QR_CODE_ALT)\n    }), h(\"amplify-form-field\", {\n      label: I18n.get(Translations.TOTP_LABEL),\n      inputProps: this.inputProps,\n      fieldId: \"totpCode\",\n      name: \"totpCode\",\n      handleInputChange: function (event) {\n        return _this.handleTotpInputChange(event);\n      }\n    }))));\n  };\n\n  return class_1;\n}();\n\nAmplifyTOTPSetup.style = amplifyTotpSetupCss;\nexport { AmplifyRadioButton as amplify_radio_button, AmplifyTOTPSetup as amplify_totp_setup };","map":{"version":3,"sources":["C:/Users/Kaustubh Sinha/Desktop/bookkart/node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-radio-button_2.entry.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","r","registerInstance","h","H","Host","Logger","I18n","M","MfaOption","A","AuthState","Auth","T","Translations","S","SETUP_TOTP","i","SUCCESS","N","NO_AUTH_MODULE_FOUND","d","dispatchAuthStateChangeEvent","o","onAuthUIStateChange","a","dispatchToastHubEvent","c","checkContact","buffer","amplifyRadioButtonCss","AmplifyRadioButton","hostRef","placeholder","checked","disabled","prototype","render","class","Object","assign","type","name","onInput","handleInputChange","id","fieldId","inputProps","htmlFor","style","canPromise","toString","isarray","Array","isArray","arr","typedArraySupport","Uint8Array","__proto__","foo","Buffer","TYPED_ARRAY_SUPPORT","K_MAX_LENGTH","arg","offset","allocUnsafe","from","species","defineProperty","configurable","enumerable","writable","RangeError","isnan","val","createBuffer","that","buf","size","fromString","string","byteLength","actual","write","slice","fromArrayLike","array","fromArrayBuffer","byteOffset","undefined","fromObject","obj","isBuffer","len","copy","ArrayBuffer","data","utf8ToBytes","units","Infinity","codePoint","leadSurrogate","bytes","charCodeAt","Error","isView","blitBuffer","src","dst","utf8Write","isFinite","remaining","start","end","newBuf","subarray","sliceLen","target","targetStart","set","fill","code","concat","list","pos","_isBuffer","b","alloc","from_1","typedarrayBuffer","toSJISFunction","CODEWORDS_COUNT","getSymbolSize","version","getSymbolTotalCodewords","getBCHDigit","digit","setToSJISFunction","isKanjiModeEnabled","toSJIS","kanji","utils","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","errorCorrectionLevel","L","bit","Q","lcStr","toLowerCase","isValid","level","defaultValue","BitBuffer","get","index","bufIndex","Math","floor","put","num","putBit","getLengthInBits","bitBuffer","BitMatrix","reservedBit","row","col","reserved","xor","isReserved","bitMatrix","alignmentPattern","getRowColCoords","posCount","intervals","ceil","positions","reverse","getPositions","coords","posLength","j","getSymbolSize$1","FINDER_PATTERN_SIZE","finderPattern","maskPattern","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","N1","N2","N3","N4","mask","isNaN","parseInt","getPenaltyN1","points","sameCountCol","sameCountRow","lastCol","lastRow","getPenaltyN2","last","getPenaltyN3","bitsCol","bitsRow","getPenaltyN4","darkCount","modulesCount","k","abs","getMaskAt","applyMask","pattern","getBestMask","setupFormatFunc","numPatterns","keys","bestPattern","lowerPenalty","p","penalty","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","getBlocksCount","errorCorrectionLevel$1","getTotalCodewordsCount","errorCorrectionCode","EXP_TABLE","LOG_TABLE","initTables","x","log","exp","mul","galoisField","polynomial","p1","p2","coeff","mod","divident","divisor","generateECPolynomial","degree","poly","Buffer$1","ReedSolomonEncoder","genPoly","initialize","encode","pad","paddedData","remainder","buff","reedSolomonEncoder","versionCheck","numeric","alphanumeric","replace","byte","KANJI","RegExp","BYTE_KANJI","BYTE","NUMERIC","ALPHANUMERIC","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","testKanji","str","test","testNumeric","testAlphanumeric","regex","mode","ccBits","MIXED","getCharCountIndicator","getBestModeForData","dataStr","G18","G18_BCH","getBestVersionForDataLength","currentVersion","getCapacity","getReservedBitsCount","mode$1","getTotalBitsFromDataArray","segments","totalBits","forEach","reservedBits","getBitsLength","getBestVersionForMixedData","totalCodewords","ecTotalCodewords","dataTotalCodewordsBits","usableBits","getBestVersionForData","seg","ecl","getLength","getEncodedBits","G15","G15_MASK","G15_BCH","formatInfo","NumericData","group","substr","remainingNum","numericData","ALPHA_NUM_CHARS","AlphanumericData","indexOf","alphanumericData","ByteData","l","byteData","KanjiData","kanjiData","dijkstra_1","dijkstra","single_source_shortest_paths","graph","s","predecessors","costs","open","PriorityQueue","make","closest","u","cost_of_s_to_u","adjacent_nodes","cost_of_e","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","first_visit","empty","cost","hasOwnProperty","msg","join","extract_shortest_path_from_predecessor_list","nodes","find_path","opts","key","queue","sorter","default_sorter","item","sort","shift","getStringByteLength","unescape","encodeURIComponent","getSegments","exec","getSegmentsFromString","numSegs","alphaNumSegs","byteSegs","kanjiSegs","segs","s1","s2","map","getSegmentBitsLength","mergeSegments","reduce","acc","curr","prevSeg","buildNodes","buildGraph","table","prevNodeIds","nodeGroup","currentNodeIds","node","lastCount","prevNodeId","buildSingleSegment","modesHint","bestMode","fromArray","optimizedSegs","rawSplit","setupFinderPattern","matrix","setupTimingPattern","setupAlignmentPattern","setupVersionInfo","version$1","bits","setupFormatInfo","setupData","inc","bitIndex","byteIndex","dark","createData","remainingByte","createCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup2","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","max","createSymbol","maskPattern$1","segments$1","estimatedVersion","rawSegments","bestVersion","dataBits","moduleCount","modules","bind","create","options","toSJISFunc","qrcode","utils$1","hex2rgba","hex","hexCode","split","hexValue","getOptions","color","margin","width","scale","light","rendererOpts","getScale","qrSize","getImageWidth","qrToImageData","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","iSrc","jSrc","canvas","clearCanvas","ctx","clearRect","height","getCanvasElement","document","createElement","qrData","canvasEl","getContext","image","createImageData","putImageData","renderToDataURL","toDataURL","quality","getColorAttrib","attrib","alpha","toFixed","svgCmd","cmd","qrToPath","moveBy","newRow","lineLength","cb","qrcodesize","bg","viewBox","svgTag","renderCanvas","renderFunc","text","args","arguments","argsNum","isLastArgCb","create$1","toCanvas","toString_1","browser","amplifyTotpSetupCss","logger","AmplifyTOTPSetup","class_1","autoFocus","handleAuthStateChange","headerText","TOTP_HEADER_TEXT","issuer","TOTP_ISSUER","setupMessage","qrCodeInput","loading","componentWillLoad","_this","_a","removeHubListener","authState","TOTPSetup","setup","disconnectedCallback","buildOtpAuthPath","user","secretKey","username","onTOTPEvent","event","debug","handleTotpInputChange","generateQRCode","codeFromTotp","error_1","_b","qrCodeImageSource","encodedIssuer","error_2","challengeName","encodeURI","setupTOTP","TOTP_SETUP_FAILURE","verifyTotpToken","error_3","preventDefault","setPreferredMFA","TOTP","TOTP_SUCCESS_MESSAGE","error","submitButtonText","TOTP_SUBMIT_BUTTON_TEXT","handleSubmit","alt","QR_CODE_ALT","TOTP_LABEL","amplify_radio_button","amplify_totp_setup"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { r as registerInstance, h, H as Host } from './index-3fb5c139.js';\nimport { Logger, I18n } from '@aws-amplify/core';\nimport { M as MfaOption, A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport { S as SETUP_TOTP, i as SUCCESS, N as NO_AUTH_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { d as dispatchAuthStateChangeEvent, o as onAuthUIStateChange, a as dispatchToastHubEvent } from './helpers-4f61e5ff.js';\nimport { c as checkContact } from './auth-helpers-bd096ca7.js';\nimport buffer from 'buffer';\nvar amplifyRadioButtonCss = \":host{--font-family:var(--amplify-font-family)}.radio-button{display:block;width:100%;padding:16px;font-size:var(--amplify-text-sm);font-family:var(--font-family)}.radio-button input{margin-right:12px}\";\nvar AmplifyRadioButton = /** @class */ (function () {\n    function AmplifyRadioButton(hostRef) {\n        registerInstance(this, hostRef);\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n        /** If `true`, the radio button is selected. */\n        this.checked = false;\n        /** If `true`, the checkbox is disabled */\n        this.disabled = false;\n    }\n    AmplifyRadioButton.prototype.render = function () {\n        return (h(\"span\", { class: \"radio-button\" }, h(\"input\", Object.assign({ type: \"radio\", name: this.name, value: this.value, onInput: this.handleInputChange, placeholder: this.placeholder, id: this.fieldId, checked: this.checked, disabled: this.disabled }, this.inputProps)), h(\"amplify-label\", { htmlFor: this.fieldId }, this.label)));\n    };\n    return AmplifyRadioButton;\n}());\nAmplifyRadioButton.style = amplifyRadioButtonCss;\n// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\nvar canPromise = function () {\n    return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;\n};\nvar toString = {}.toString;\nvar isarray = Array.isArray || function (arr) {\n    return toString.call(arr) == '[object Array]';\n};\nfunction typedArraySupport() {\n    // Can typed array instances be augmented?\n    try {\n        var arr = new Uint8Array(1);\n        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42; } };\n        return arr.foo() === 42;\n    }\n    catch (e) {\n        return false;\n    }\n}\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff;\nfunction Buffer(arg, offset, length) {\n    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, offset, length);\n    }\n    if (typeof arg === 'number') {\n        return allocUnsafe(this, arg);\n    }\n    return from(this, arg, offset, length);\n}\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n    Buffer.prototype.__proto__ = Uint8Array.prototype;\n    Buffer.__proto__ = Uint8Array;\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    if (typeof Symbol !== 'undefined' && Symbol.species &&\n        Buffer[Symbol.species] === Buffer) {\n        Object.defineProperty(Buffer, Symbol.species, {\n            value: null,\n            configurable: true,\n            enumerable: false,\n            writable: false\n        });\n    }\n}\nfunction checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n            'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n    return length | 0;\n}\nfunction isnan(val) {\n    return val !== val; // eslint-disable-line no-self-compare\n}\nfunction createBuffer(that, length) {\n    var buf;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        buf = new Uint8Array(length);\n        buf.__proto__ = Buffer.prototype;\n    }\n    else {\n        // Fallback: Return an object instance of the Buffer class\n        buf = that;\n        if (buf === null) {\n            buf = new Buffer(length);\n        }\n        buf.length = length;\n    }\n    return buf;\n}\nfunction allocUnsafe(that, size) {\n    var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n    if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n            buf[i] = 0;\n        }\n    }\n    return buf;\n}\nfunction fromString(that, string) {\n    var length = byteLength(string) | 0;\n    var buf = createBuffer(that, length);\n    var actual = buf.write(string);\n    if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        buf = buf.slice(0, actual);\n    }\n    return buf;\n}\nfunction fromArrayLike(that, array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(that, length);\n    for (var i = 0; i < length; i += 1) {\n        buf[i] = array[i] & 255;\n    }\n    return buf;\n}\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\\'offset\\' is out of bounds');\n    }\n    if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\\'length\\' is out of bounds');\n    }\n    var buf;\n    if (byteOffset === undefined && length === undefined) {\n        buf = new Uint8Array(array);\n    }\n    else if (length === undefined) {\n        buf = new Uint8Array(array, byteOffset);\n    }\n    else {\n        buf = new Uint8Array(array, byteOffset, length);\n    }\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        buf.__proto__ = Buffer.prototype;\n    }\n    else {\n        // Fallback: Return an object instance of the Buffer class\n        buf = fromArrayLike(that, buf);\n    }\n    return buf;\n}\nfunction fromObject(that, obj) {\n    if (Buffer.isBuffer(obj)) {\n        var len = checked(obj.length) | 0;\n        var buf = createBuffer(that, len);\n        if (buf.length === 0) {\n            return buf;\n        }\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj) {\n        if ((typeof ArrayBuffer !== 'undefined' &&\n            obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n            if (typeof obj.length !== 'number' || isnan(obj.length)) {\n                return createBuffer(that, 0);\n            }\n            return fromArrayLike(that, obj);\n        }\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n            return fromArrayLike(that, obj.data);\n        }\n    }\n    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\nfunction utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n    for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1)\n                        bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1)\n                        bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1)\n                    bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        }\n        else if (leadSurrogate) {\n            // valid bmp char, but last char was a lead\n            if ((units -= 3) > -1)\n                bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0)\n                break;\n            bytes.push(codePoint);\n        }\n        else if (codePoint < 0x800) {\n            if ((units -= 2) < 0)\n                break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        }\n        else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0)\n                break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        }\n        else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0)\n                break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        }\n        else {\n            throw new Error('Invalid code point');\n        }\n    }\n    return bytes;\n}\nfunction byteLength(string) {\n    if (Buffer.isBuffer(string)) {\n        return string.length;\n    }\n    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n        return string.byteLength;\n    }\n    if (typeof string !== 'string') {\n        string = '' + string;\n    }\n    var len = string.length;\n    if (len === 0)\n        return 0;\n    return utf8ToBytes(string).length;\n}\nfunction blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n        if ((i + offset >= dst.length) || (i >= src.length))\n            break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction from(that, value, offset, length) {\n    if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number');\n    }\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, offset, length);\n    }\n    if (typeof value === 'string') {\n        return fromString(that, value);\n    }\n    return fromObject(that, value);\n}\nBuffer.prototype.write = function write(string, offset, length) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, encoding)\n    }\n    else if (length === undefined && typeof offset === 'string') {\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, offset[, length])\n    }\n    else if (isFinite(offset)) {\n        offset = offset | 0;\n        if (isFinite(length)) {\n            length = length | 0;\n        }\n        else {\n            length = undefined;\n        }\n    }\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining)\n        length = remaining;\n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n        throw new RangeError('Attempt to write outside buffer bounds');\n    }\n    return utf8Write(this, string, offset, length);\n};\nBuffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0)\n            start = 0;\n    }\n    else if (start > len) {\n        start = len;\n    }\n    if (end < 0) {\n        end += len;\n        if (end < 0)\n            end = 0;\n    }\n    else if (end > len) {\n        end = len;\n    }\n    if (end < start)\n        end = start;\n    var newBuf;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end);\n        // Return an augmented `Uint8Array` instance\n        newBuf.__proto__ = Buffer.prototype;\n    }\n    else {\n        var sliceLen = end - start;\n        newBuf = new Buffer(sliceLen, undefined);\n        for (var i = 0; i < sliceLen; ++i) {\n            newBuf[i] = this[i + start];\n        }\n    }\n    return newBuf;\n};\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!start)\n        start = 0;\n    if (!end && end !== 0)\n        end = this.length;\n    if (targetStart >= target.length)\n        targetStart = target.length;\n    if (!targetStart)\n        targetStart = 0;\n    if (end > 0 && end < start)\n        end = start;\n    // Copy 0 bytes; we're done\n    if (end === start)\n        return 0;\n    if (target.length === 0 || this.length === 0)\n        return 0;\n    // Fatal error conditions\n    if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds');\n    }\n    if (start < 0 || start >= this.length)\n        throw new RangeError('sourceStart out of bounds');\n    if (end < 0)\n        throw new RangeError('sourceEnd out of bounds');\n    // Are we oob?\n    if (end > this.length)\n        end = this.length;\n    if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n    }\n    var len = end - start;\n    var i;\n    if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n            target[i + targetStart] = this[i + start];\n        }\n    }\n    else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n            target[i + targetStart] = this[i + start];\n        }\n    }\n    else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n    }\n    return len;\n};\nBuffer.prototype.fill = function fill(val, start, end) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n        if (typeof start === 'string') {\n            start = 0;\n            end = this.length;\n        }\n        else if (typeof end === 'string') {\n            end = this.length;\n        }\n        if (val.length === 1) {\n            var code = val.charCodeAt(0);\n            if (code < 256) {\n                val = code;\n            }\n        }\n    }\n    else if (typeof val === 'number') {\n        val = val & 255;\n    }\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index');\n    }\n    if (end <= start) {\n        return this;\n    }\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val)\n        val = 0;\n    var i;\n    if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n            this[i] = val;\n        }\n    }\n    else {\n        var bytes = Buffer.isBuffer(val)\n            ? val\n            : new Buffer(val);\n        var len = bytes.length;\n        for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len];\n        }\n    }\n    return this;\n};\nBuffer.concat = function concat(list, length) {\n    if (!isarray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n    if (list.length === 0) {\n        return createBuffer(null, 0);\n    }\n    var i;\n    if (length === undefined) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n            length += list[i].length;\n        }\n    }\n    var buffer = allocUnsafe(null, length);\n    var pos = 0;\n    for (i = 0; i < list.length; ++i) {\n        var buf = list[i];\n        if (!Buffer.isBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nBuffer.byteLength = byteLength;\nBuffer.prototype._isBuffer = true;\nBuffer.isBuffer = function isBuffer(b) {\n    return !!(b != null && b._isBuffer);\n};\nvar alloc = function (size) {\n    var buffer = new Buffer(size);\n    buffer.fill(0);\n    return buffer;\n};\nvar from_1 = function (data) {\n    return new Buffer(data);\n};\nvar typedarrayBuffer = {\n    alloc: alloc,\n    from: from_1\n};\nvar toSJISFunction;\nvar CODEWORDS_COUNT = [\n    0,\n    26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n    404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n    1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n    2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n];\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nvar getSymbolSize = function getSymbolSize(version) {\n    if (!version)\n        throw new Error('\"version\" cannot be null or undefined');\n    if (version < 1 || version > 40)\n        throw new Error('\"version\" should be in range from 1 to 40');\n    return version * 4 + 17;\n};\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nvar getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {\n    return CODEWORDS_COUNT[version];\n};\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nvar getBCHDigit = function (data) {\n    var digit = 0;\n    while (data !== 0) {\n        digit++;\n        data >>>= 1;\n    }\n    return digit;\n};\nvar setToSJISFunction = function setToSJISFunction(f) {\n    if (typeof f !== 'function') {\n        throw new Error('\"toSJISFunc\" is not a valid function.');\n    }\n    toSJISFunction = f;\n};\nvar isKanjiModeEnabled = function () {\n    return typeof toSJISFunction !== 'undefined';\n};\nvar toSJIS = function toSJIS(kanji) {\n    return toSJISFunction(kanji);\n};\nvar utils = {\n    getSymbolSize: getSymbolSize,\n    getSymbolTotalCodewords: getSymbolTotalCodewords,\n    getBCHDigit: getBCHDigit,\n    setToSJISFunction: setToSJISFunction,\n    isKanjiModeEnabled: isKanjiModeEnabled,\n    toSJIS: toSJIS\n};\nfunction createCommonjsModule(fn, basedir, module) {\n    return module = {\n        path: basedir,\n        exports: {},\n        require: function (path, base) {\n            return commonjsRequire();\n        }\n    }, fn(module, module.exports), module.exports;\n}\nfunction commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\nvar errorCorrectionLevel = createCommonjsModule(function (module, exports) {\n    exports.L = { bit: 1 };\n    exports.M = { bit: 0 };\n    exports.Q = { bit: 3 };\n    exports.H = { bit: 2 };\n    function fromString(string) {\n        if (typeof string !== 'string') {\n            throw new Error('Param is not a string');\n        }\n        var lcStr = string.toLowerCase();\n        switch (lcStr) {\n            case 'l':\n            case 'low':\n                return exports.L;\n            case 'm':\n            case 'medium':\n                return exports.M;\n            case 'q':\n            case 'quartile':\n                return exports.Q;\n            case 'h':\n            case 'high':\n                return exports.H;\n            default:\n                throw new Error('Unknown EC Level: ' + string);\n        }\n    }\n    exports.isValid = function isValid(level) {\n        return level && typeof level.bit !== 'undefined' &&\n            level.bit >= 0 && level.bit < 4;\n    };\n    exports.from = function from(value, defaultValue) {\n        if (exports.isValid(value)) {\n            return value;\n        }\n        try {\n            return fromString(value);\n        }\n        catch (e) {\n            return defaultValue;\n        }\n    };\n});\nfunction BitBuffer() {\n    this.buffer = [];\n    this.length = 0;\n}\nBitBuffer.prototype = {\n    get: function (index) {\n        var bufIndex = Math.floor(index / 8);\n        return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1;\n    },\n    put: function (num, length) {\n        for (var i = 0; i < length; i++) {\n            this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n        }\n    },\n    getLengthInBits: function () {\n        return this.length;\n    },\n    putBit: function (bit) {\n        var bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n        }\n        this.length++;\n    }\n};\nvar bitBuffer = BitBuffer;\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix(size) {\n    if (!size || size < 1) {\n        throw new Error('BitMatrix size must be defined and greater than 0');\n    }\n    this.size = size;\n    this.data = typedarrayBuffer.alloc(size * size);\n    this.reservedBit = typedarrayBuffer.alloc(size * size);\n}\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n    var index = row * this.size + col;\n    this.data[index] = value;\n    if (reserved)\n        this.reservedBit[index] = true;\n};\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n    return this.data[row * this.size + col];\n};\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n    this.data[row * this.size + col] ^= value;\n};\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n    return this.reservedBit[row * this.size + col];\n};\nvar bitMatrix = BitMatrix;\nvar alignmentPattern = createCommonjsModule(function (module, exports) {\n    /**\n     * Alignment pattern are fixed reference pattern in defined positions\n     * in a matrix symbology, which enables the decode software to re-synchronise\n     * the coordinate mapping of the image modules in the event of moderate amounts\n     * of distortion of the image.\n     *\n     * Alignment patterns are present only in QR Code symbols of version 2 or larger\n     * and their number depends on the symbol version.\n     */\n    var getSymbolSize = utils.getSymbolSize;\n    /**\n     * Calculate the row/column coordinates of the center module of each alignment pattern\n     * for the specified QR Code version.\n     *\n     * The alignment patterns are positioned symmetrically on either side of the diagonal\n     * running from the top left corner of the symbol to the bottom right corner.\n     *\n     * Since positions are simmetrical only half of the coordinates are returned.\n     * Each item of the array will represent in turn the x and y coordinate.\n     * @see {@link getPositions}\n     *\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of coordinate\n     */\n    exports.getRowColCoords = function getRowColCoords(version) {\n        if (version === 1)\n            return [];\n        var posCount = Math.floor(version / 7) + 2;\n        var size = getSymbolSize(version);\n        var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\n        var positions = [size - 7]; // Last coord is always (size - 7)\n        for (var i = 1; i < posCount - 1; i++) {\n            positions[i] = positions[i - 1] - intervals;\n        }\n        positions.push(6); // First coord is always 6\n        return positions.reverse();\n    };\n    /**\n     * Returns an array containing the positions of each alignment pattern.\n     * Each array's element represent the center point of the pattern as (x, y) coordinates\n     *\n     * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n     * and filtering out the items that overlaps with finder pattern\n     *\n     * @example\n     * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n     * The alignment patterns, therefore, are to be centered on (row, column)\n     * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n     * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n     * and are not therefore used for alignment patterns.\n     *\n     * var pos = getPositions(7)\n     * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n     *\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of coordinates\n     */\n    exports.getPositions = function getPositions(version) {\n        var coords = [];\n        var pos = exports.getRowColCoords(version);\n        var posLength = pos.length;\n        for (var i = 0; i < posLength; i++) {\n            for (var j = 0; j < posLength; j++) {\n                // Skip if position is occupied by finder patterns\n                if ((i === 0 && j === 0) || // top-left\n                    (i === 0 && j === posLength - 1) || // bottom-left\n                    (i === posLength - 1 && j === 0)) { // top-right\n                    continue;\n                }\n                coords.push([pos[i], pos[j]]);\n            }\n        }\n        return coords;\n    };\n});\nvar getSymbolSize$1 = utils.getSymbolSize;\nvar FINDER_PATTERN_SIZE = 7;\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nvar getPositions = function getPositions(version) {\n    var size = getSymbolSize$1(version);\n    return [\n        // top-left\n        [0, 0],\n        // top-right\n        [size - FINDER_PATTERN_SIZE, 0],\n        // bottom-left\n        [0, size - FINDER_PATTERN_SIZE]\n    ];\n};\nvar finderPattern = {\n    getPositions: getPositions\n};\nvar maskPattern = createCommonjsModule(function (module, exports) {\n    /**\n     * Data mask pattern reference\n     * @type {Object}\n     */\n    exports.Patterns = {\n        PATTERN000: 0,\n        PATTERN001: 1,\n        PATTERN010: 2,\n        PATTERN011: 3,\n        PATTERN100: 4,\n        PATTERN101: 5,\n        PATTERN110: 6,\n        PATTERN111: 7\n    };\n    /**\n     * Weighted penalty scores for the undesirable features\n     * @type {Object}\n     */\n    var PenaltyScores = {\n        N1: 3,\n        N2: 3,\n        N3: 40,\n        N4: 10\n    };\n    /**\n     * Check if mask pattern value is valid\n     *\n     * @param  {Number}  mask    Mask pattern\n     * @return {Boolean}         true if valid, false otherwise\n     */\n    exports.isValid = function isValid(mask) {\n        return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\n    };\n    /**\n     * Returns mask pattern from a value.\n     * If value is not valid, returns undefined\n     *\n     * @param  {Number|String} value        Mask pattern value\n     * @return {Number}                     Valid mask pattern or undefined\n     */\n    exports.from = function from(value) {\n        return exports.isValid(value) ? parseInt(value, 10) : undefined;\n    };\n    /**\n    * Find adjacent modules in row/column with the same color\n    * and assign a penalty value.\n    *\n    * Points: N1 + i\n    * i is the amount by which the number of adjacent modules of the same color exceeds 5\n    */\n    exports.getPenaltyN1 = function getPenaltyN1(data) {\n        var size = data.size;\n        var points = 0;\n        var sameCountCol = 0;\n        var sameCountRow = 0;\n        var lastCol = null;\n        var lastRow = null;\n        for (var row = 0; row < size; row++) {\n            sameCountCol = sameCountRow = 0;\n            lastCol = lastRow = null;\n            for (var col = 0; col < size; col++) {\n                var module = data.get(row, col);\n                if (module === lastCol) {\n                    sameCountCol++;\n                }\n                else {\n                    if (sameCountCol >= 5)\n                        points += PenaltyScores.N1 + (sameCountCol - 5);\n                    lastCol = module;\n                    sameCountCol = 1;\n                }\n                module = data.get(col, row);\n                if (module === lastRow) {\n                    sameCountRow++;\n                }\n                else {\n                    if (sameCountRow >= 5)\n                        points += PenaltyScores.N1 + (sameCountRow - 5);\n                    lastRow = module;\n                    sameCountRow = 1;\n                }\n            }\n            if (sameCountCol >= 5)\n                points += PenaltyScores.N1 + (sameCountCol - 5);\n            if (sameCountRow >= 5)\n                points += PenaltyScores.N1 + (sameCountRow - 5);\n        }\n        return points;\n    };\n    /**\n     * Find 2x2 blocks with the same color and assign a penalty value\n     *\n     * Points: N2 * (m - 1) * (n - 1)\n     */\n    exports.getPenaltyN2 = function getPenaltyN2(data) {\n        var size = data.size;\n        var points = 0;\n        for (var row = 0; row < size - 1; row++) {\n            for (var col = 0; col < size - 1; col++) {\n                var last = data.get(row, col) +\n                    data.get(row, col + 1) +\n                    data.get(row + 1, col) +\n                    data.get(row + 1, col + 1);\n                if (last === 4 || last === 0)\n                    points++;\n            }\n        }\n        return points * PenaltyScores.N2;\n    };\n    /**\n     * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n     * preceded or followed by light area 4 modules wide\n     *\n     * Points: N3 * number of pattern found\n     */\n    exports.getPenaltyN3 = function getPenaltyN3(data) {\n        var size = data.size;\n        var points = 0;\n        var bitsCol = 0;\n        var bitsRow = 0;\n        for (var row = 0; row < size; row++) {\n            bitsCol = bitsRow = 0;\n            for (var col = 0; col < size; col++) {\n                bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col);\n                if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D))\n                    points++;\n                bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row);\n                if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D))\n                    points++;\n            }\n        }\n        return points * PenaltyScores.N3;\n    };\n    /**\n     * Calculate proportion of dark modules in entire symbol\n     *\n     * Points: N4 * k\n     *\n     * k is the rating of the deviation of the proportion of dark modules\n     * in the symbol from 50% in steps of 5%\n     */\n    exports.getPenaltyN4 = function getPenaltyN4(data) {\n        var darkCount = 0;\n        var modulesCount = data.data.length;\n        for (var i = 0; i < modulesCount; i++)\n            darkCount += data.data[i];\n        var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10);\n        return k * PenaltyScores.N4;\n    };\n    /**\n     * Return mask value at given position\n     *\n     * @param  {Number} maskPattern Pattern reference value\n     * @param  {Number} i           Row\n     * @param  {Number} j           Column\n     * @return {Boolean}            Mask value\n     */\n    function getMaskAt(maskPattern, i, j) {\n        switch (maskPattern) {\n            case exports.Patterns.PATTERN000: return (i + j) % 2 === 0;\n            case exports.Patterns.PATTERN001: return i % 2 === 0;\n            case exports.Patterns.PATTERN010: return j % 3 === 0;\n            case exports.Patterns.PATTERN011: return (i + j) % 3 === 0;\n            case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n            case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0;\n            case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0;\n            case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0;\n            default: throw new Error('bad maskPattern:' + maskPattern);\n        }\n    }\n    /**\n     * Apply a mask pattern to a BitMatrix\n     *\n     * @param  {Number}    pattern Pattern reference number\n     * @param  {BitMatrix} data    BitMatrix data\n     */\n    exports.applyMask = function applyMask(pattern, data) {\n        var size = data.size;\n        for (var col = 0; col < size; col++) {\n            for (var row = 0; row < size; row++) {\n                if (data.isReserved(row, col))\n                    continue;\n                data.xor(row, col, getMaskAt(pattern, row, col));\n            }\n        }\n    };\n    /**\n     * Returns the best mask pattern for data\n     *\n     * @param  {BitMatrix} data\n     * @return {Number} Mask pattern reference number\n     */\n    exports.getBestMask = function getBestMask(data, setupFormatFunc) {\n        var numPatterns = Object.keys(exports.Patterns).length;\n        var bestPattern = 0;\n        var lowerPenalty = Infinity;\n        for (var p = 0; p < numPatterns; p++) {\n            setupFormatFunc(p);\n            exports.applyMask(p, data);\n            // Calculate penalty\n            var penalty = exports.getPenaltyN1(data) +\n                exports.getPenaltyN2(data) +\n                exports.getPenaltyN3(data) +\n                exports.getPenaltyN4(data);\n            // Undo previously applied mask\n            exports.applyMask(p, data);\n            if (penalty < lowerPenalty) {\n                lowerPenalty = penalty;\n                bestPattern = p;\n            }\n        }\n        return bestPattern;\n    };\n});\nvar EC_BLOCKS_TABLE = [\n    // L  M  Q  H\n    1, 1, 1, 1,\n    1, 1, 1, 1,\n    1, 1, 2, 2,\n    1, 2, 2, 4,\n    1, 2, 4, 4,\n    2, 4, 4, 4,\n    2, 4, 6, 5,\n    2, 4, 6, 6,\n    2, 5, 8, 8,\n    4, 5, 8, 8,\n    4, 5, 8, 11,\n    4, 8, 10, 11,\n    4, 9, 12, 16,\n    4, 9, 16, 16,\n    6, 10, 12, 18,\n    6, 10, 17, 16,\n    6, 11, 16, 19,\n    6, 13, 18, 21,\n    7, 14, 21, 25,\n    8, 16, 20, 25,\n    8, 17, 23, 25,\n    9, 17, 23, 34,\n    9, 18, 25, 30,\n    10, 20, 27, 32,\n    12, 21, 29, 35,\n    12, 23, 34, 37,\n    12, 25, 34, 40,\n    13, 26, 35, 42,\n    14, 28, 38, 45,\n    15, 29, 40, 48,\n    16, 31, 43, 51,\n    17, 33, 45, 54,\n    18, 35, 48, 57,\n    19, 37, 51, 60,\n    19, 38, 53, 63,\n    20, 40, 56, 66,\n    21, 43, 59, 70,\n    22, 45, 62, 74,\n    24, 47, 65, 77,\n    25, 49, 68, 81\n];\nvar EC_CODEWORDS_TABLE = [\n    // L  M  Q  H\n    7, 10, 13, 17,\n    10, 16, 22, 28,\n    15, 26, 36, 44,\n    20, 36, 52, 64,\n    26, 48, 72, 88,\n    36, 64, 96, 112,\n    40, 72, 108, 130,\n    48, 88, 132, 156,\n    60, 110, 160, 192,\n    72, 130, 192, 224,\n    80, 150, 224, 264,\n    96, 176, 260, 308,\n    104, 198, 288, 352,\n    120, 216, 320, 384,\n    132, 240, 360, 432,\n    144, 280, 408, 480,\n    168, 308, 448, 532,\n    180, 338, 504, 588,\n    196, 364, 546, 650,\n    224, 416, 600, 700,\n    224, 442, 644, 750,\n    252, 476, 690, 816,\n    270, 504, 750, 900,\n    300, 560, 810, 960,\n    312, 588, 870, 1050,\n    336, 644, 952, 1110,\n    360, 700, 1020, 1200,\n    390, 728, 1050, 1260,\n    420, 784, 1140, 1350,\n    450, 812, 1200, 1440,\n    480, 868, 1290, 1530,\n    510, 924, 1350, 1620,\n    540, 980, 1440, 1710,\n    570, 1036, 1530, 1800,\n    570, 1064, 1590, 1890,\n    600, 1120, 1680, 1980,\n    630, 1204, 1770, 2100,\n    660, 1260, 1860, 2220,\n    720, 1316, 1950, 2310,\n    750, 1372, 2040, 2430\n];\n/**\n * Returns the number of error correction block that the QR Code should contain\n * for the specified version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction blocks\n */\nvar getBlocksCount = function getBlocksCount(version, errorCorrectionLevel$1) {\n    switch (errorCorrectionLevel$1) {\n        case errorCorrectionLevel.L:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n        case errorCorrectionLevel.M:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n        case errorCorrectionLevel.Q:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n        case errorCorrectionLevel.H:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\n/**\n * Returns the number of error correction codewords to use for the specified\n * version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction codewords\n */\nvar getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel$1) {\n    switch (errorCorrectionLevel$1) {\n        case errorCorrectionLevel.L:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n        case errorCorrectionLevel.M:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n        case errorCorrectionLevel.Q:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n        case errorCorrectionLevel.H:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\nvar errorCorrectionCode = {\n    getBlocksCount: getBlocksCount,\n    getTotalCodewordsCount: getTotalCodewordsCount\n};\nvar EXP_TABLE = typedarrayBuffer.alloc(512);\nvar LOG_TABLE = typedarrayBuffer.alloc(256);\n(function initTables() {\n    var x = 1;\n    for (var i = 0; i < 255; i++) {\n        EXP_TABLE[i] = x;\n        LOG_TABLE[x] = i;\n        x <<= 1; // multiply by 2\n        // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n        // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n        if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n            x ^= 0x11D;\n        }\n    }\n    // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n    // stay inside the bounds (because we will mainly use this table for the multiplication of\n    // two GF numbers, no more).\n    // @see {@link mul}\n    for (i = 255; i < 512; i++) {\n        EXP_TABLE[i] = EXP_TABLE[i - 255];\n    }\n}());\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nvar log = function log(n) {\n    if (n < 1)\n        throw new Error('log(' + n + ')');\n    return LOG_TABLE[n];\n};\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nvar exp = function exp(n) {\n    return EXP_TABLE[n];\n};\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nvar mul = function mul(x, y) {\n    if (x === 0 || y === 0)\n        return 0;\n    // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n    // @see {@link initTables}\n    return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];\n};\nvar galoisField = {\n    log: log,\n    exp: exp,\n    mul: mul\n};\nvar polynomial = createCommonjsModule(function (module, exports) {\n    /**\n     * Multiplies two polynomials inside Galois Field\n     *\n     * @param  {Buffer} p1 Polynomial\n     * @param  {Buffer} p2 Polynomial\n     * @return {Buffer}    Product of p1 and p2\n     */\n    exports.mul = function mul(p1, p2) {\n        var coeff = typedarrayBuffer.alloc(p1.length + p2.length - 1);\n        for (var i = 0; i < p1.length; i++) {\n            for (var j = 0; j < p2.length; j++) {\n                coeff[i + j] ^= galoisField.mul(p1[i], p2[j]);\n            }\n        }\n        return coeff;\n    };\n    /**\n     * Calculate the remainder of polynomials division\n     *\n     * @param  {Buffer} divident Polynomial\n     * @param  {Buffer} divisor  Polynomial\n     * @return {Buffer}          Remainder\n     */\n    exports.mod = function mod(divident, divisor) {\n        var result = typedarrayBuffer.from(divident);\n        while ((result.length - divisor.length) >= 0) {\n            var coeff = result[0];\n            for (var i = 0; i < divisor.length; i++) {\n                result[i] ^= galoisField.mul(divisor[i], coeff);\n            }\n            // remove all zeros from buffer head\n            var offset = 0;\n            while (offset < result.length && result[offset] === 0)\n                offset++;\n            result = result.slice(offset);\n        }\n        return result;\n    };\n    /**\n     * Generate an irreducible generator polynomial of specified degree\n     * (used by Reed-Solomon encoder)\n     *\n     * @param  {Number} degree Degree of the generator polynomial\n     * @return {Buffer}        Buffer containing polynomial coefficients\n     */\n    exports.generateECPolynomial = function generateECPolynomial(degree) {\n        var poly = typedarrayBuffer.from([1]);\n        for (var i = 0; i < degree; i++) {\n            poly = exports.mul(poly, [1, galoisField.exp(i)]);\n        }\n        return poly;\n    };\n});\nvar Buffer$1 = buffer.Buffer;\nfunction ReedSolomonEncoder(degree) {\n    this.genPoly = undefined;\n    this.degree = degree;\n    if (this.degree)\n        this.initialize(this.degree);\n}\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize(degree) {\n    // create an irreducible generator polynomial\n    this.degree = degree;\n    this.genPoly = polynomial.generateECPolynomial(this.degree);\n};\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode(data) {\n    if (!this.genPoly) {\n        throw new Error('Encoder not initialized');\n    }\n    // Calculate EC for this data block\n    // extends data size to data+genPoly size\n    var pad = typedarrayBuffer.alloc(this.degree);\n    var paddedData = Buffer$1.concat([data, pad], data.length + this.degree);\n    // The error correction codewords are the remainder after dividing the data codewords\n    // by a generator polynomial\n    var remainder = polynomial.mod(paddedData, this.genPoly);\n    // return EC data blocks (last n byte, where n is the degree of genPoly)\n    // If coefficients number in remainder are less than genPoly degree,\n    // pad with 0s to the left to reach the needed number of coefficients\n    var start = this.degree - remainder.length;\n    if (start > 0) {\n        var buff = typedarrayBuffer.alloc(this.degree);\n        remainder.copy(buff, start);\n        return buff;\n    }\n    return remainder;\n};\nvar reedSolomonEncoder = ReedSolomonEncoder;\n/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nvar isValid = function isValid(version) {\n    return !isNaN(version) && version >= 1 && version <= 40;\n};\nvar versionCheck = {\n    isValid: isValid\n};\nvar numeric = '[0-9]+';\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+';\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n    '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n    '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n    '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\nkanji = kanji.replace(/u/g, '\\\\u');\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+';\nvar KANJI = new RegExp(kanji, 'g');\nvar BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\nvar BYTE = new RegExp(byte, 'g');\nvar NUMERIC = new RegExp(numeric, 'g');\nvar ALPHANUMERIC = new RegExp(alphanumeric, 'g');\nvar TEST_KANJI = new RegExp('^' + kanji + '$');\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$');\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\nvar testKanji = function testKanji(str) {\n    return TEST_KANJI.test(str);\n};\nvar testNumeric = function testNumeric(str) {\n    return TEST_NUMERIC.test(str);\n};\nvar testAlphanumeric = function testAlphanumeric(str) {\n    return TEST_ALPHANUMERIC.test(str);\n};\nvar regex = {\n    KANJI: KANJI,\n    BYTE_KANJI: BYTE_KANJI,\n    BYTE: BYTE,\n    NUMERIC: NUMERIC,\n    ALPHANUMERIC: ALPHANUMERIC,\n    testKanji: testKanji,\n    testNumeric: testNumeric,\n    testAlphanumeric: testAlphanumeric\n};\nvar mode = createCommonjsModule(function (module, exports) {\n    /**\n     * Numeric mode encodes data from the decimal digit set (0 - 9)\n     * (byte values 30HEX to 39HEX).\n     * Normally, 3 data characters are represented by 10 bits.\n     *\n     * @type {Object}\n     */\n    exports.NUMERIC = {\n        id: 'Numeric',\n        bit: 1 << 0,\n        ccBits: [10, 12, 14]\n    };\n    /**\n     * Alphanumeric mode encodes data from a set of 45 characters,\n     * i.e. 10 numeric digits (0 - 9),\n     *      26 alphabetic characters (A - Z),\n     *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n     * Normally, two input characters are represented by 11 bits.\n     *\n     * @type {Object}\n     */\n    exports.ALPHANUMERIC = {\n        id: 'Alphanumeric',\n        bit: 1 << 1,\n        ccBits: [9, 11, 13]\n    };\n    /**\n     * In byte mode, data is encoded at 8 bits per character.\n     *\n     * @type {Object}\n     */\n    exports.BYTE = {\n        id: 'Byte',\n        bit: 1 << 2,\n        ccBits: [8, 16, 16]\n    };\n    /**\n     * The Kanji mode efficiently encodes Kanji characters in accordance with\n     * the Shift JIS system based on JIS X 0208.\n     * The Shift JIS values are shifted from the JIS X 0208 values.\n     * JIS X 0208 gives details of the shift coded representation.\n     * Each two-byte character value is compacted to a 13-bit binary codeword.\n     *\n     * @type {Object}\n     */\n    exports.KANJI = {\n        id: 'Kanji',\n        bit: 1 << 3,\n        ccBits: [8, 10, 12]\n    };\n    /**\n     * Mixed mode will contain a sequences of data in a combination of any of\n     * the modes described above\n     *\n     * @type {Object}\n     */\n    exports.MIXED = {\n        bit: -1\n    };\n    /**\n     * Returns the number of bits needed to store the data length\n     * according to QR Code specifications.\n     *\n     * @param  {Mode}   mode    Data mode\n     * @param  {Number} version QR Code version\n     * @return {Number}         Number of bits\n     */\n    exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\n        if (!mode.ccBits)\n            throw new Error('Invalid mode: ' + mode);\n        if (!versionCheck.isValid(version)) {\n            throw new Error('Invalid version: ' + version);\n        }\n        if (version >= 1 && version < 10)\n            return mode.ccBits[0];\n        else if (version < 27)\n            return mode.ccBits[1];\n        return mode.ccBits[2];\n    };\n    /**\n     * Returns the most efficient mode to store the specified data\n     *\n     * @param  {String} dataStr Input data string\n     * @return {Mode}           Best mode\n     */\n    exports.getBestModeForData = function getBestModeForData(dataStr) {\n        if (regex.testNumeric(dataStr))\n            return exports.NUMERIC;\n        else if (regex.testAlphanumeric(dataStr))\n            return exports.ALPHANUMERIC;\n        else if (regex.testKanji(dataStr))\n            return exports.KANJI;\n        else\n            return exports.BYTE;\n    };\n    /**\n     * Return mode name as string\n     *\n     * @param {Mode} mode Mode object\n     * @returns {String}  Mode name\n     */\n    exports.toString = function toString(mode) {\n        if (mode && mode.id)\n            return mode.id;\n        throw new Error('Invalid mode');\n    };\n    /**\n     * Check if input param is a valid mode object\n     *\n     * @param   {Mode}    mode Mode object\n     * @returns {Boolean} True if valid mode, false otherwise\n     */\n    exports.isValid = function isValid(mode) {\n        return mode && mode.bit && mode.ccBits;\n    };\n    /**\n     * Get mode object from its name\n     *\n     * @param   {String} string Mode name\n     * @returns {Mode}          Mode object\n     */\n    function fromString(string) {\n        if (typeof string !== 'string') {\n            throw new Error('Param is not a string');\n        }\n        var lcStr = string.toLowerCase();\n        switch (lcStr) {\n            case 'numeric':\n                return exports.NUMERIC;\n            case 'alphanumeric':\n                return exports.ALPHANUMERIC;\n            case 'kanji':\n                return exports.KANJI;\n            case 'byte':\n                return exports.BYTE;\n            default:\n                throw new Error('Unknown mode: ' + string);\n        }\n    }\n    /**\n     * Returns mode from a value.\n     * If value is not a valid mode, returns defaultValue\n     *\n     * @param  {Mode|String} value        Encoding mode\n     * @param  {Mode}        defaultValue Fallback value\n     * @return {Mode}                     Encoding mode\n     */\n    exports.from = function from(value, defaultValue) {\n        if (exports.isValid(value)) {\n            return value;\n        }\n        try {\n            return fromString(value);\n        }\n        catch (e) {\n            return defaultValue;\n        }\n    };\n});\nvar version = createCommonjsModule(function (module, exports) {\n    // Generator polynomial used to encode version information\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G18_BCH = utils.getBCHDigit(G18);\n    function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n                return currentVersion;\n            }\n        }\n        return undefined;\n    }\n    function getReservedBitsCount(mode$1, version) {\n        // Character count indicator + mode indicator bits\n        return mode.getCharCountIndicator(mode$1, version) + 4;\n    }\n    function getTotalBitsFromDataArray(segments, version) {\n        var totalBits = 0;\n        segments.forEach(function (data) {\n            var reservedBits = getReservedBitsCount(data.mode, version);\n            totalBits += reservedBits + data.getBitsLength();\n        });\n        return totalBits;\n    }\n    function getBestVersionForMixedData(segments, errorCorrectionLevel) {\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n            var length = getTotalBitsFromDataArray(segments, currentVersion);\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode.MIXED)) {\n                return currentVersion;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns version number from a value.\n     * If value is not a valid version, returns defaultValue\n     *\n     * @param  {Number|String} value        QR Code version\n     * @param  {Number}        defaultValue Fallback value\n     * @return {Number}                     QR Code version number\n     */\n    exports.from = function from(value, defaultValue) {\n        if (versionCheck.isValid(value)) {\n            return parseInt(value, 10);\n        }\n        return defaultValue;\n    };\n    /**\n     * Returns how much data can be stored with the specified QR code version\n     * and error correction level\n     *\n     * @param  {Number} version              QR Code version (1-40)\n     * @param  {Number} errorCorrectionLevel Error correction level\n     * @param  {Mode}   mode                 Data mode\n     * @return {Number}                      Quantity of storable data\n     */\n    exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode$1) {\n        if (!versionCheck.isValid(version)) {\n            throw new Error('Invalid QR Code version');\n        }\n        // Use Byte mode as default\n        if (typeof mode$1 === 'undefined')\n            mode$1 = mode.BYTE;\n        // Total codewords for this QR code version (Data + Error correction)\n        var totalCodewords = utils.getSymbolTotalCodewords(version);\n        // Total number of error correction codewords\n        var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n        // Total number of data codewords\n        var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n        if (mode$1 === mode.MIXED)\n            return dataTotalCodewordsBits;\n        var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode$1, version);\n        // Return max number of storable codewords\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return Math.floor((usableBits / 10) * 3);\n            case mode.ALPHANUMERIC:\n                return Math.floor((usableBits / 11) * 2);\n            case mode.KANJI:\n                return Math.floor(usableBits / 13);\n            case mode.BYTE:\n            default:\n                return Math.floor(usableBits / 8);\n        }\n    };\n    /**\n     * Returns the minimum version needed to contain the amount of data\n     *\n     * @param  {Segment} data                    Segment of data\n     * @param  {Number} [errorCorrectionLevel=H] Error correction level\n     * @param  {Mode} mode                       Data mode\n     * @return {Number}                          QR Code version\n     */\n    exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel$1) {\n        var seg;\n        var ecl = errorCorrectionLevel.from(errorCorrectionLevel$1, errorCorrectionLevel.M);\n        if (isarray(data)) {\n            if (data.length > 1) {\n                return getBestVersionForMixedData(data, ecl);\n            }\n            if (data.length === 0) {\n                return 1;\n            }\n            seg = data[0];\n        }\n        else {\n            seg = data;\n        }\n        return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\n    };\n    /**\n     * Returns version information with relative error correction bits\n     *\n     * The version information is included in QR Code symbols of version 7 or larger.\n     * It consists of an 18-bit sequence containing 6 data bits,\n     * with 12 error correction bits calculated using the (18, 6) Golay code.\n     *\n     * @param  {Number} version QR Code version\n     * @return {Number}         Encoded version info bits\n     */\n    exports.getEncodedBits = function getEncodedBits(version) {\n        if (!versionCheck.isValid(version) || version < 7) {\n            throw new Error('Invalid QR Code version');\n        }\n        var d = version << 12;\n        while (utils.getBCHDigit(d) - G18_BCH >= 0) {\n            d ^= (G18 << (utils.getBCHDigit(d) - G18_BCH));\n        }\n        return (version << 12) | d;\n    };\n});\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\nvar G15_BCH = utils.getBCHDigit(G15);\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nvar getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {\n    var data = ((errorCorrectionLevel.bit << 3) | mask);\n    var d = data << 10;\n    while (utils.getBCHDigit(d) - G15_BCH >= 0) {\n        d ^= (G15 << (utils.getBCHDigit(d) - G15_BCH));\n    }\n    // xor final data with mask pattern in order to ensure that\n    // no combination of Error Correction Level and data mask pattern\n    // will result in an all-zero data string\n    return ((data << 10) | d) ^ G15_MASK;\n};\nvar formatInfo = {\n    getEncodedBits: getEncodedBits\n};\nfunction NumericData(data) {\n    this.mode = mode.NUMERIC;\n    this.data = data.toString();\n}\nNumericData.getBitsLength = function getBitsLength(length) {\n    return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0);\n};\nNumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nNumericData.prototype.getBitsLength = function getBitsLength() {\n    return NumericData.getBitsLength(this.data.length);\n};\nNumericData.prototype.write = function write(bitBuffer) {\n    var i, group, value;\n    // The input data string is divided into groups of three digits,\n    // and each group is converted to its 10-bit binary equivalent.\n    for (i = 0; i + 3 <= this.data.length; i += 3) {\n        group = this.data.substr(i, 3);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, 10);\n    }\n    // If the number of input digits is not an exact multiple of three,\n    // the final one or two digits are converted to 4 or 7 bits respectively.\n    var remainingNum = this.data.length - i;\n    if (remainingNum > 0) {\n        group = this.data.substr(i);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, remainingNum * 3 + 1);\n    }\n};\nvar numericData = NumericData;\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n    ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n];\nfunction AlphanumericData(data) {\n    this.mode = mode.ALPHANUMERIC;\n    this.data = data;\n}\nAlphanumericData.getBitsLength = function getBitsLength(length) {\n    return 11 * Math.floor(length / 2) + 6 * (length % 2);\n};\nAlphanumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nAlphanumericData.prototype.getBitsLength = function getBitsLength() {\n    return AlphanumericData.getBitsLength(this.data.length);\n};\nAlphanumericData.prototype.write = function write(bitBuffer) {\n    var i;\n    // Input data characters are divided into groups of two characters\n    // and encoded as 11-bit binary codes.\n    for (i = 0; i + 2 <= this.data.length; i += 2) {\n        // The character value of the first character is multiplied by 45\n        var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\n        // The character value of the second digit is added to the product\n        value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\n        // The sum is then stored as 11-bit binary number\n        bitBuffer.put(value, 11);\n    }\n    // If the number of input data characters is not a multiple of two,\n    // the character value of the final character is encoded as a 6-bit binary number.\n    if (this.data.length % 2) {\n        bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n    }\n};\nvar alphanumericData = AlphanumericData;\nfunction ByteData(data) {\n    this.mode = mode.BYTE;\n    this.data = typedarrayBuffer.from(data);\n}\nByteData.getBitsLength = function getBitsLength(length) {\n    return length * 8;\n};\nByteData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nByteData.prototype.getBitsLength = function getBitsLength() {\n    return ByteData.getBitsLength(this.data.length);\n};\nByteData.prototype.write = function (bitBuffer) {\n    for (var i = 0, l = this.data.length; i < l; i++) {\n        bitBuffer.put(this.data[i], 8);\n    }\n};\nvar byteData = ByteData;\nfunction KanjiData(data) {\n    this.mode = mode.KANJI;\n    this.data = data;\n}\nKanjiData.getBitsLength = function getBitsLength(length) {\n    return length * 13;\n};\nKanjiData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nKanjiData.prototype.getBitsLength = function getBitsLength() {\n    return KanjiData.getBitsLength(this.data.length);\n};\nKanjiData.prototype.write = function (bitBuffer) {\n    var i;\n    // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n    // These byte values are shifted from the JIS X 0208 values.\n    // JIS X 0208 gives details of the shift coded representation.\n    for (i = 0; i < this.data.length; i++) {\n        var value = utils.toSJIS(this.data[i]);\n        // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n        if (value >= 0x8140 && value <= 0x9FFC) {\n            // Subtract 0x8140 from Shift JIS value\n            value -= 0x8140;\n            // For characters with Shift JIS values from 0xE040 to 0xEBBF\n        }\n        else if (value >= 0xE040 && value <= 0xEBBF) {\n            // Subtract 0xC140 from Shift JIS value\n            value -= 0xC140;\n        }\n        else {\n            throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' +\n                'Make sure your charset is UTF-8');\n        }\n        // Multiply most significant byte of result by 0xC0\n        // and add least significant byte to product\n        value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff);\n        // Convert result to a 13-bit binary string\n        bitBuffer.put(value, 13);\n    }\n};\nvar kanjiData = KanjiData;\nvar dijkstra_1 = createCommonjsModule(function (module) {\n    /******************************************************************************\n     * Created 2008-08-19.\n     *\n     * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n     *\n     * Copyright (C) 2008\n     *   Wyatt Baldwin <self@wyattbaldwin.com>\n     *   All rights reserved\n     *\n     * Licensed under the MIT license.\n     *\n     *   http://www.opensource.org/licenses/mit-license.php\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     *****************************************************************************/\n    var dijkstra = {\n        single_source_shortest_paths: function (graph, s, d) {\n            // Predecessor map for each node that has been encountered.\n            // node ID => predecessor node ID\n            var predecessors = {};\n            // Costs of shortest paths from s to all nodes encountered.\n            // node ID => cost\n            var costs = {};\n            costs[s] = 0;\n            // Costs of shortest paths from s to all nodes encountered; differs from\n            // `costs` in that it provides easy access to the node that currently has\n            // the known shortest path from s.\n            // XXX: Do we actually need both `costs` and `open`?\n            var open = dijkstra.PriorityQueue.make();\n            open.push(s, 0);\n            var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;\n            while (!open.empty()) {\n                // In the nodes remaining in graph that have a known cost from s,\n                // find the node, u, that currently has the shortest path from s.\n                closest = open.pop();\n                u = closest.value;\n                cost_of_s_to_u = closest.cost;\n                // Get nodes adjacent to u...\n                adjacent_nodes = graph[u] || {};\n                // ...and explore the edges that connect u to those nodes, updating\n                // the cost of the shortest paths to any or all of those nodes as\n                // necessary. v is the node across the current edge from u.\n                for (v in adjacent_nodes) {\n                    if (adjacent_nodes.hasOwnProperty(v)) {\n                        // Get the cost of the edge running from u to v.\n                        cost_of_e = adjacent_nodes[v];\n                        // Cost of s to u plus the cost of u to v across e--this is *a*\n                        // cost from s to v that may or may not be less than the current\n                        // known cost to v.\n                        cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n                        // If we haven't visited v yet OR if the current known cost from s to\n                        // v is greater than the new cost we just found (cost of s to u plus\n                        // cost of u to v across e), update v's cost in the cost list and\n                        // update v's predecessor in the predecessor list (it's now u).\n                        cost_of_s_to_v = costs[v];\n                        first_visit = (typeof costs[v] === 'undefined');\n                        if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n                            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n                            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n                            predecessors[v] = u;\n                        }\n                    }\n                }\n            }\n            if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n                var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n                throw new Error(msg);\n            }\n            return predecessors;\n        },\n        extract_shortest_path_from_predecessor_list: function (predecessors, d) {\n            var nodes = [];\n            var u = d;\n            while (u) {\n                nodes.push(u);\n                u = predecessors[u];\n            }\n            nodes.reverse();\n            return nodes;\n        },\n        find_path: function (graph, s, d) {\n            var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n            return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);\n        },\n        /**\n         * A very naive priority queue implementation.\n         */\n        PriorityQueue: {\n            make: function (opts) {\n                var T = dijkstra.PriorityQueue, t = {}, key;\n                opts = opts || {};\n                for (key in T) {\n                    if (T.hasOwnProperty(key)) {\n                        t[key] = T[key];\n                    }\n                }\n                t.queue = [];\n                t.sorter = opts.sorter || T.default_sorter;\n                return t;\n            },\n            default_sorter: function (a, b) {\n                return a.cost - b.cost;\n            },\n            /**\n             * Add a new item to the queue and ensure the highest priority element\n             * is at the front of the queue.\n             */\n            push: function (value, cost) {\n                var item = { value: value, cost: cost };\n                this.queue.push(item);\n                this.queue.sort(this.sorter);\n            },\n            /**\n             * Return the highest priority element in the queue.\n             */\n            pop: function () {\n                return this.queue.shift();\n            },\n            empty: function () {\n                return this.queue.length === 0;\n            }\n        }\n    };\n    // node.js module exports\n    {\n        module.exports = dijkstra;\n    }\n});\nvar segments = createCommonjsModule(function (module, exports) {\n    /**\n     * Returns UTF8 byte length\n     *\n     * @param  {String} str Input string\n     * @return {Number}     Number of byte\n     */\n    function getStringByteLength(str) {\n        return unescape(encodeURIComponent(str)).length;\n    }\n    /**\n     * Get a list of segments of the specified mode\n     * from a string\n     *\n     * @param  {Mode}   mode Segment mode\n     * @param  {String} str  String to process\n     * @return {Array}       Array of object with segments data\n     */\n    function getSegments(regex, mode, str) {\n        var segments = [];\n        var result;\n        while ((result = regex.exec(str)) !== null) {\n            segments.push({\n                data: result[0],\n                index: result.index,\n                mode: mode,\n                length: result[0].length\n            });\n        }\n        return segments;\n    }\n    /**\n     * Extracts a series of segments with the appropriate\n     * modes from a string\n     *\n     * @param  {String} dataStr Input string\n     * @return {Array}          Array of object with segments data\n     */\n    function getSegmentsFromString(dataStr) {\n        var numSegs = getSegments(regex.NUMERIC, mode.NUMERIC, dataStr);\n        var alphaNumSegs = getSegments(regex.ALPHANUMERIC, mode.ALPHANUMERIC, dataStr);\n        var byteSegs;\n        var kanjiSegs;\n        if (utils.isKanjiModeEnabled()) {\n            byteSegs = getSegments(regex.BYTE, mode.BYTE, dataStr);\n            kanjiSegs = getSegments(regex.KANJI, mode.KANJI, dataStr);\n        }\n        else {\n            byteSegs = getSegments(regex.BYTE_KANJI, mode.BYTE, dataStr);\n            kanjiSegs = [];\n        }\n        var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\n        return segs\n            .sort(function (s1, s2) {\n            return s1.index - s2.index;\n        })\n            .map(function (obj) {\n            return {\n                data: obj.data,\n                mode: obj.mode,\n                length: obj.length\n            };\n        });\n    }\n    /**\n     * Returns how many bits are needed to encode a string of\n     * specified length with the specified mode\n     *\n     * @param  {Number} length String length\n     * @param  {Mode} mode     Segment mode\n     * @return {Number}        Bit length\n     */\n    function getSegmentBitsLength(length, mode$1) {\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return numericData.getBitsLength(length);\n            case mode.ALPHANUMERIC:\n                return alphanumericData.getBitsLength(length);\n            case mode.KANJI:\n                return kanjiData.getBitsLength(length);\n            case mode.BYTE:\n                return byteData.getBitsLength(length);\n        }\n    }\n    /**\n     * Merges adjacent segments which have the same mode\n     *\n     * @param  {Array} segs Array of object with segments data\n     * @return {Array}      Array of object with segments data\n     */\n    function mergeSegments(segs) {\n        return segs.reduce(function (acc, curr) {\n            var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\n            if (prevSeg && prevSeg.mode === curr.mode) {\n                acc[acc.length - 1].data += curr.data;\n                return acc;\n            }\n            acc.push(curr);\n            return acc;\n        }, []);\n    }\n    /**\n     * Generates a list of all possible nodes combination which\n     * will be used to build a segments graph.\n     *\n     * Nodes are divided by groups. Each group will contain a list of all the modes\n     * in which is possible to encode the given text.\n     *\n     * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n     * The group for '12345' will contain then 3 objects, one for each\n     * possible encoding mode.\n     *\n     * Each node represents a possible segment.\n     *\n     * @param  {Array} segs Array of object with segments data\n     * @return {Array}      Array of object with segments data\n     */\n    function buildNodes(segs) {\n        var nodes = [];\n        for (var i = 0; i < segs.length; i++) {\n            var seg = segs[i];\n            switch (seg.mode) {\n                case mode.NUMERIC:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.ALPHANUMERIC, length: seg.length },\n                        { data: seg.data, mode: mode.BYTE, length: seg.length }\n                    ]);\n                    break;\n                case mode.ALPHANUMERIC:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.BYTE, length: seg.length }\n                    ]);\n                    break;\n                case mode.KANJI:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.BYTE, length: getStringByteLength(seg.data) }\n                    ]);\n                    break;\n                case mode.BYTE:\n                    nodes.push([\n                        { data: seg.data, mode: mode.BYTE, length: getStringByteLength(seg.data) }\n                    ]);\n            }\n        }\n        return nodes;\n    }\n    /**\n     * Builds a graph from a list of nodes.\n     * All segments in each node group will be connected with all the segments of\n     * the next group and so on.\n     *\n     * At each connection will be assigned a weight depending on the\n     * segment's byte length.\n     *\n     * @param  {Array} nodes    Array of object with segments data\n     * @param  {Number} version QR Code version\n     * @return {Object}         Graph of all possible segments\n     */\n    function buildGraph(nodes, version) {\n        var table = {};\n        var graph = { 'start': {} };\n        var prevNodeIds = ['start'];\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeGroup = nodes[i];\n            var currentNodeIds = [];\n            for (var j = 0; j < nodeGroup.length; j++) {\n                var node = nodeGroup[j];\n                var key = '' + i + j;\n                currentNodeIds.push(key);\n                table[key] = { node: node, lastCount: 0 };\n                graph[key] = {};\n                for (var n = 0; n < prevNodeIds.length; n++) {\n                    var prevNodeId = prevNodeIds[n];\n                    if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n                        graph[prevNodeId][key] =\n                            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n                                getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\n                        table[prevNodeId].lastCount += node.length;\n                    }\n                    else {\n                        if (table[prevNodeId])\n                            table[prevNodeId].lastCount = node.length;\n                        graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n                            4 + mode.getCharCountIndicator(node.mode, version); // switch cost\n                    }\n                }\n            }\n            prevNodeIds = currentNodeIds;\n        }\n        for (n = 0; n < prevNodeIds.length; n++) {\n            graph[prevNodeIds[n]]['end'] = 0;\n        }\n        return { map: graph, table: table };\n    }\n    /**\n     * Builds a segment from a specified data and mode.\n     * If a mode is not specified, the more suitable will be used.\n     *\n     * @param  {String} data             Input data\n     * @param  {Mode | String} modesHint Data mode\n     * @return {Segment}                 Segment\n     */\n    function buildSingleSegment(data, modesHint) {\n        var mode$1;\n        var bestMode = mode.getBestModeForData(data);\n        mode$1 = mode.from(modesHint, bestMode);\n        // Make sure data can be encoded\n        if (mode$1 !== mode.BYTE && mode$1.bit < bestMode.bit) {\n            throw new Error('\"' + data + '\"' +\n                ' cannot be encoded with mode ' + mode.toString(mode$1) +\n                '.\\n Suggested mode is: ' + mode.toString(bestMode));\n        }\n        // Use Mode.BYTE if Kanji support is disabled\n        if (mode$1 === mode.KANJI && !utils.isKanjiModeEnabled()) {\n            mode$1 = mode.BYTE;\n        }\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return new numericData(data);\n            case mode.ALPHANUMERIC:\n                return new alphanumericData(data);\n            case mode.KANJI:\n                return new kanjiData(data);\n            case mode.BYTE:\n                return new byteData(data);\n        }\n    }\n    /**\n     * Builds a list of segments from an array.\n     * Array can contain Strings or Objects with segment's info.\n     *\n     * For each item which is a string, will be generated a segment with the given\n     * string and the more appropriate encoding mode.\n     *\n     * For each item which is an object, will be generated a segment with the given\n     * data and mode.\n     * Objects must contain at least the property \"data\".\n     * If property \"mode\" is not present, the more suitable mode will be used.\n     *\n     * @param  {Array} array Array of objects with segments data\n     * @return {Array}       Array of Segments\n     */\n    exports.fromArray = function fromArray(array) {\n        return array.reduce(function (acc, seg) {\n            if (typeof seg === 'string') {\n                acc.push(buildSingleSegment(seg, null));\n            }\n            else if (seg.data) {\n                acc.push(buildSingleSegment(seg.data, seg.mode));\n            }\n            return acc;\n        }, []);\n    };\n    /**\n     * Builds an optimized sequence of segments from a string,\n     * which will produce the shortest possible bitstream.\n     *\n     * @param  {String} data    Input string\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of segments\n     */\n    exports.fromString = function fromString(data, version) {\n        var segs = getSegmentsFromString(data, utils.isKanjiModeEnabled());\n        var nodes = buildNodes(segs);\n        var graph = buildGraph(nodes, version);\n        var path = dijkstra_1.find_path(graph.map, 'start', 'end');\n        var optimizedSegs = [];\n        for (var i = 1; i < path.length - 1; i++) {\n            optimizedSegs.push(graph.table[path[i]].node);\n        }\n        return exports.fromArray(mergeSegments(optimizedSegs));\n    };\n    /**\n     * Splits a string in various segments with the modes which\n     * best represent their content.\n     * The produced segments are far from being optimized.\n     * The output of this function is only used to estimate a QR Code version\n     * which may contain the data.\n     *\n     * @param  {string} data Input string\n     * @return {Array}       Array of segments\n     */\n    exports.rawSplit = function rawSplit(data) {\n        return exports.fromArray(getSegmentsFromString(data, utils.isKanjiModeEnabled()));\n    };\n});\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern(matrix, version) {\n    var size = matrix.size;\n    var pos = finderPattern.getPositions(version);\n    for (var i = 0; i < pos.length; i++) {\n        var row = pos[i][0];\n        var col = pos[i][1];\n        for (var r = -1; r <= 7; r++) {\n            if (row + r <= -1 || size <= row + r)\n                continue;\n            for (var c = -1; c <= 7; c++) {\n                if (col + c <= -1 || size <= col + c)\n                    continue;\n                if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n                    (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n                    (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n                    matrix.set(row + r, col + c, true, true);\n                }\n                else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern(matrix) {\n    var size = matrix.size;\n    for (var r = 8; r < size - 8; r++) {\n        var value = r % 2 === 0;\n        matrix.set(r, 6, value, true);\n        matrix.set(6, r, value, true);\n    }\n}\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern(matrix, version) {\n    var pos = alignmentPattern.getPositions(version);\n    for (var i = 0; i < pos.length; i++) {\n        var row = pos[i][0];\n        var col = pos[i][1];\n        for (var r = -2; r <= 2; r++) {\n            for (var c = -2; c <= 2; c++) {\n                if (r === -2 || r === 2 || c === -2 || c === 2 ||\n                    (r === 0 && c === 0)) {\n                    matrix.set(row + r, col + c, true, true);\n                }\n                else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo(matrix, version$1) {\n    var size = matrix.size;\n    var bits = version.getEncodedBits(version$1);\n    var row, col, mod;\n    for (var i = 0; i < 18; i++) {\n        row = Math.floor(i / 3);\n        col = i % 3 + size - 8 - 3;\n        mod = ((bits >> i) & 1) === 1;\n        matrix.set(row, col, mod, true);\n        matrix.set(col, row, mod, true);\n    }\n}\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\n    var size = matrix.size;\n    var bits = formatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);\n    var i, mod;\n    for (i = 0; i < 15; i++) {\n        mod = ((bits >> i) & 1) === 1;\n        // vertical\n        if (i < 6) {\n            matrix.set(i, 8, mod, true);\n        }\n        else if (i < 8) {\n            matrix.set(i + 1, 8, mod, true);\n        }\n        else {\n            matrix.set(size - 15 + i, 8, mod, true);\n        }\n        // horizontal\n        if (i < 8) {\n            matrix.set(8, size - i - 1, mod, true);\n        }\n        else if (i < 9) {\n            matrix.set(8, 15 - i - 1 + 1, mod, true);\n        }\n        else {\n            matrix.set(8, 15 - i - 1, mod, true);\n        }\n    }\n    // fixed module\n    matrix.set(size - 8, 8, 1, true);\n}\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData(matrix, data) {\n    var size = matrix.size;\n    var inc = -1;\n    var row = size - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n    for (var col = size - 1; col > 0; col -= 2) {\n        if (col === 6)\n            col--;\n        while (true) {\n            for (var c = 0; c < 2; c++) {\n                if (!matrix.isReserved(row, col - c)) {\n                    var dark = false;\n                    if (byteIndex < data.length) {\n                        dark = (((data[byteIndex] >>> bitIndex) & 1) === 1);\n                    }\n                    matrix.set(row, col - c, dark);\n                    bitIndex--;\n                    if (bitIndex === -1) {\n                        byteIndex++;\n                        bitIndex = 7;\n                    }\n                }\n            }\n            row += inc;\n            if (row < 0 || size <= row) {\n                row -= inc;\n                inc = -inc;\n                break;\n            }\n        }\n    }\n}\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData(version, errorCorrectionLevel, segments) {\n    // Prepare data buffer\n    var buffer = new bitBuffer();\n    segments.forEach(function (data) {\n        // prefix data with mode indicator (4 bits)\n        buffer.put(data.mode.bit, 4);\n        // Prefix data with character count indicator.\n        // The character count indicator is a string of bits that represents the\n        // number of characters that are being encoded.\n        // The character count indicator must be placed after the mode indicator\n        // and must be a certain number of bits long, depending on the QR version\n        // and data mode\n        // @see {@link Mode.getCharCountIndicator}.\n        buffer.put(data.getLength(), mode.getCharCountIndicator(data.mode, version));\n        // add binary data sequence to buffer\n        data.write(buffer);\n    });\n    // Calculate required number of bits\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n    // Add a terminator.\n    // If the bit string is shorter than the total number of required bits,\n    // a terminator of up to four 0s must be added to the right side of the string.\n    // If the bit string is more than four bits shorter than the required number of bits,\n    // add four 0s to the end.\n    if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n        buffer.put(0, 4);\n    }\n    // If the bit string is fewer than four bits shorter, add only the number of 0s that\n    // are needed to reach the required number of bits.\n    // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n    // pad the string on the right with 0s to make the string's length a multiple of 8.\n    while (buffer.getLengthInBits() % 8 !== 0) {\n        buffer.putBit(0);\n    }\n    // Add pad bytes if the string is still shorter than the total number of required bits.\n    // Extend the buffer to fill the data capacity of the symbol corresponding to\n    // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n    // and 00010001 (0x11) alternately.\n    var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\n    for (var i = 0; i < remainingByte; i++) {\n        buffer.put(i % 2 ? 0x11 : 0xEC, 8);\n    }\n    return createCodewords(buffer, version, errorCorrectionLevel);\n}\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords(bitBuffer, version, errorCorrectionLevel) {\n    // Total codewords for this QR code version (Data + Error correction)\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\n    // Total number of error correction codewords\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    // Total number of data codewords\n    var dataTotalCodewords = totalCodewords - ecTotalCodewords;\n    // Total number of blocks\n    var ecTotalBlocks = errorCorrectionCode.getBlocksCount(version, errorCorrectionLevel);\n    // Calculate how many blocks each group should contain\n    var blocksInGroup2 = totalCodewords % ecTotalBlocks;\n    var blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\n    var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\n    var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\n    var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;\n    // Number of EC codewords is the same for both groups\n    var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;\n    // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n    var rs = new reedSolomonEncoder(ecCount);\n    var offset = 0;\n    var dcData = new Array(ecTotalBlocks);\n    var ecData = new Array(ecTotalBlocks);\n    var maxDataSize = 0;\n    var buffer = typedarrayBuffer.from(bitBuffer.buffer);\n    // Divide the buffer into the required number of blocks\n    for (var b = 0; b < ecTotalBlocks; b++) {\n        var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;\n        // extract a block of data from buffer\n        dcData[b] = buffer.slice(offset, offset + dataSize);\n        // Calculate EC codewords for this data block\n        ecData[b] = rs.encode(dcData[b]);\n        offset += dataSize;\n        maxDataSize = Math.max(maxDataSize, dataSize);\n    }\n    // Create final data\n    // Interleave the data and error correction codewords from each block\n    var data = typedarrayBuffer.alloc(totalCodewords);\n    var index = 0;\n    var i, r;\n    // Add data codewords\n    for (i = 0; i < maxDataSize; i++) {\n        for (r = 0; r < ecTotalBlocks; r++) {\n            if (i < dcData[r].length) {\n                data[index++] = dcData[r][i];\n            }\n        }\n    }\n    // Apped EC codewords\n    for (i = 0; i < ecCount; i++) {\n        for (r = 0; r < ecTotalBlocks; r++) {\n            data[index++] = ecData[r][i];\n        }\n    }\n    return data;\n}\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol(data, version$1, errorCorrectionLevel, maskPattern$1) {\n    var segments$1;\n    if (isarray(data)) {\n        segments$1 = segments.fromArray(data);\n    }\n    else if (typeof data === 'string') {\n        var estimatedVersion = version$1;\n        if (!estimatedVersion) {\n            var rawSegments = segments.rawSplit(data);\n            // Estimate best version that can contain raw splitted segments\n            estimatedVersion = version.getBestVersionForData(rawSegments, errorCorrectionLevel);\n        }\n        // Build optimized segments\n        // If estimated version is undefined, try with the highest version\n        segments$1 = segments.fromString(data, estimatedVersion || 40);\n    }\n    else {\n        throw new Error('Invalid data');\n    }\n    // Get the min version that can contain data\n    var bestVersion = version.getBestVersionForData(segments$1, errorCorrectionLevel);\n    // If no version is found, data cannot be stored\n    if (!bestVersion) {\n        throw new Error('The amount of data is too big to be stored in a QR Code');\n    }\n    // If not specified, use min version as default\n    if (!version$1) {\n        version$1 = bestVersion;\n        // Check if the specified version can contain the data\n    }\n    else if (version$1 < bestVersion) {\n        throw new Error('\\n' +\n            'The chosen QR Code version cannot contain this amount of data.\\n' +\n            'Minimum version required to store current data is: ' + bestVersion + '.\\n');\n    }\n    var dataBits = createData(version$1, errorCorrectionLevel, segments$1);\n    // Allocate matrix buffer\n    var moduleCount = utils.getSymbolSize(version$1);\n    var modules = new bitMatrix(moduleCount);\n    // Add function modules\n    setupFinderPattern(modules, version$1);\n    setupTimingPattern(modules);\n    setupAlignmentPattern(modules, version$1);\n    // Add temporary dummy bits for format info just to set them as reserved.\n    // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n    // since the masking operation must be performed only on the encoding region.\n    // These blocks will be replaced with correct values later in code.\n    setupFormatInfo(modules, errorCorrectionLevel, 0);\n    if (version$1 >= 7) {\n        setupVersionInfo(modules, version$1);\n    }\n    // Add data codewords\n    setupData(modules, dataBits);\n    if (isNaN(maskPattern$1)) {\n        // Find best mask pattern\n        maskPattern$1 = maskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));\n    }\n    // Apply mask pattern\n    maskPattern.applyMask(maskPattern$1, modules);\n    // Replace format info bits with correct values\n    setupFormatInfo(modules, errorCorrectionLevel, maskPattern$1);\n    return {\n        modules: modules,\n        version: version$1,\n        errorCorrectionLevel: errorCorrectionLevel,\n        maskPattern: maskPattern$1,\n        segments: segments$1\n    };\n}\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nvar create = function create(data, options) {\n    if (typeof data === 'undefined' || data === '') {\n        throw new Error('No input text');\n    }\n    var errorCorrectionLevel$1 = errorCorrectionLevel.M;\n    var version$1;\n    var mask;\n    if (typeof options !== 'undefined') {\n        // Use higher error correction level as default\n        errorCorrectionLevel$1 = errorCorrectionLevel.from(options.errorCorrectionLevel, errorCorrectionLevel.M);\n        version$1 = version.from(options.version);\n        mask = maskPattern.from(options.maskPattern);\n        if (options.toSJISFunc) {\n            utils.setToSJISFunction(options.toSJISFunc);\n        }\n    }\n    return createSymbol(data, version$1, errorCorrectionLevel$1, mask);\n};\nvar qrcode = {\n    create: create\n};\nvar utils$1 = createCommonjsModule(function (module, exports) {\n    function hex2rgba(hex) {\n        if (typeof hex === 'number') {\n            hex = hex.toString();\n        }\n        if (typeof hex !== 'string') {\n            throw new Error('Color should be defined as hex string');\n        }\n        var hexCode = hex.slice().replace('#', '').split('');\n        if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n            throw new Error('Invalid hex color: ' + hex);\n        }\n        // Convert from short to long form (fff -> ffffff)\n        if (hexCode.length === 3 || hexCode.length === 4) {\n            hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n                return [c, c];\n            }));\n        }\n        // Add default alpha value\n        if (hexCode.length === 6)\n            hexCode.push('F', 'F');\n        var hexValue = parseInt(hexCode.join(''), 16);\n        return {\n            r: (hexValue >> 24) & 255,\n            g: (hexValue >> 16) & 255,\n            b: (hexValue >> 8) & 255,\n            a: hexValue & 255,\n            hex: '#' + hexCode.slice(0, 6).join('')\n        };\n    }\n    exports.getOptions = function getOptions(options) {\n        if (!options)\n            options = {};\n        if (!options.color)\n            options.color = {};\n        var margin = typeof options.margin === 'undefined' ||\n            options.margin === null ||\n            options.margin < 0 ? 4 : options.margin;\n        var width = options.width && options.width >= 21 ? options.width : undefined;\n        var scale = options.scale || 4;\n        return {\n            width: width,\n            scale: width ? 4 : scale,\n            margin: margin,\n            color: {\n                dark: hex2rgba(options.color.dark || '#000000ff'),\n                light: hex2rgba(options.color.light || '#ffffffff')\n            },\n            type: options.type,\n            rendererOpts: options.rendererOpts || {}\n        };\n    };\n    exports.getScale = function getScale(qrSize, opts) {\n        return opts.width && opts.width >= qrSize + opts.margin * 2\n            ? opts.width / (qrSize + opts.margin * 2)\n            : opts.scale;\n    };\n    exports.getImageWidth = function getImageWidth(qrSize, opts) {\n        var scale = exports.getScale(qrSize, opts);\n        return Math.floor((qrSize + opts.margin * 2) * scale);\n    };\n    exports.qrToImageData = function qrToImageData(imgData, qr, opts) {\n        var size = qr.modules.size;\n        var data = qr.modules.data;\n        var scale = exports.getScale(size, opts);\n        var symbolSize = Math.floor((size + opts.margin * 2) * scale);\n        var scaledMargin = opts.margin * scale;\n        var palette = [opts.color.light, opts.color.dark];\n        for (var i = 0; i < symbolSize; i++) {\n            for (var j = 0; j < symbolSize; j++) {\n                var posDst = (i * symbolSize + j) * 4;\n                var pxColor = opts.color.light;\n                if (i >= scaledMargin && j >= scaledMargin &&\n                    i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n                    var iSrc = Math.floor((i - scaledMargin) / scale);\n                    var jSrc = Math.floor((j - scaledMargin) / scale);\n                    pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n                }\n                imgData[posDst++] = pxColor.r;\n                imgData[posDst++] = pxColor.g;\n                imgData[posDst++] = pxColor.b;\n                imgData[posDst] = pxColor.a;\n            }\n        }\n    };\n});\nvar canvas = createCommonjsModule(function (module, exports) {\n    function clearCanvas(ctx, canvas, size) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        if (!canvas.style)\n            canvas.style = {};\n        canvas.height = size;\n        canvas.width = size;\n        canvas.style.height = size + 'px';\n        canvas.style.width = size + 'px';\n    }\n    function getCanvasElement() {\n        try {\n            return document.createElement('canvas');\n        }\n        catch (e) {\n            throw new Error('You need to specify a canvas element');\n        }\n    }\n    exports.render = function render(qrData, canvas, options) {\n        var opts = options;\n        var canvasEl = canvas;\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n            opts = canvas;\n            canvas = undefined;\n        }\n        if (!canvas) {\n            canvasEl = getCanvasElement();\n        }\n        opts = utils$1.getOptions(opts);\n        var size = utils$1.getImageWidth(qrData.modules.size, opts);\n        var ctx = canvasEl.getContext('2d');\n        var image = ctx.createImageData(size, size);\n        utils$1.qrToImageData(image.data, qrData, opts);\n        clearCanvas(ctx, canvasEl, size);\n        ctx.putImageData(image, 0, 0);\n        return canvasEl;\n    };\n    exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\n        var opts = options;\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n            opts = canvas;\n            canvas = undefined;\n        }\n        if (!opts)\n            opts = {};\n        var canvasEl = exports.render(qrData, canvas, opts);\n        var type = opts.type || 'image/png';\n        var rendererOpts = opts.rendererOpts || {};\n        return canvasEl.toDataURL(type, rendererOpts.quality);\n    };\n});\nfunction getColorAttrib(color, attrib) {\n    var alpha = color.a / 255;\n    var str = attrib + '=\"' + color.hex + '\"';\n    return alpha < 1\n        ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n        : str;\n}\nfunction svgCmd(cmd, x, y) {\n    var str = cmd + x;\n    if (typeof y !== 'undefined')\n        str += ' ' + y;\n    return str;\n}\nfunction qrToPath(data, size, margin) {\n    var path = '';\n    var moveBy = 0;\n    var newRow = false;\n    var lineLength = 0;\n    for (var i = 0; i < data.length; i++) {\n        var col = Math.floor(i % size);\n        var row = Math.floor(i / size);\n        if (!col && !newRow)\n            newRow = true;\n        if (data[i]) {\n            lineLength++;\n            if (!(i > 0 && col > 0 && data[i - 1])) {\n                path += newRow\n                    ? svgCmd('M', col + margin, 0.5 + row + margin)\n                    : svgCmd('m', moveBy, 0);\n                moveBy = 0;\n                newRow = false;\n            }\n            if (!(col + 1 < size && data[i + 1])) {\n                path += svgCmd('h', lineLength);\n                lineLength = 0;\n            }\n        }\n        else {\n            moveBy++;\n        }\n    }\n    return path;\n}\nvar render = function render(qrData, options, cb) {\n    var opts = utils$1.getOptions(options);\n    var size = qrData.modules.size;\n    var data = qrData.modules.data;\n    var qrcodesize = size + opts.margin * 2;\n    var bg = !opts.color.light.a\n        ? ''\n        : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n            ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>';\n    var path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n        ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>';\n    var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"';\n    var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\n    var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n';\n    if (typeof cb === 'function') {\n        cb(null, svgTag);\n    }\n    return svgTag;\n};\nvar svgTag = {\n    render: render\n};\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\n    var args = [].slice.call(arguments, 1);\n    var argsNum = args.length;\n    var isLastArgCb = typeof args[argsNum - 1] === 'function';\n    if (!isLastArgCb && !canPromise()) {\n        throw new Error('Callback required as last argument');\n    }\n    if (isLastArgCb) {\n        if (argsNum < 2) {\n            throw new Error('Too few arguments provided');\n        }\n        if (argsNum === 2) {\n            cb = text;\n            text = canvas;\n            canvas = opts = undefined;\n        }\n        else if (argsNum === 3) {\n            if (canvas.getContext && typeof cb === 'undefined') {\n                cb = opts;\n                opts = undefined;\n            }\n            else {\n                cb = opts;\n                opts = text;\n                text = canvas;\n                canvas = undefined;\n            }\n        }\n    }\n    else {\n        if (argsNum < 1) {\n            throw new Error('Too few arguments provided');\n        }\n        if (argsNum === 1) {\n            text = canvas;\n            canvas = opts = undefined;\n        }\n        else if (argsNum === 2 && !canvas.getContext) {\n            opts = text;\n            text = canvas;\n            canvas = undefined;\n        }\n        return new Promise(function (resolve, reject) {\n            try {\n                var data = qrcode.create(text, opts);\n                resolve(renderFunc(data, canvas, opts));\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    try {\n        var data = qrcode.create(text, opts);\n        cb(null, renderFunc(data, canvas, opts));\n    }\n    catch (e) {\n        cb(e);\n    }\n}\nvar create$1 = qrcode.create;\nvar toCanvas = renderCanvas.bind(null, canvas.render);\nvar toDataURL = renderCanvas.bind(null, canvas.renderToDataURL);\n// only svg for now.\nvar toString_1 = renderCanvas.bind(null, function (data, _, opts) {\n    return svgTag.render(data, opts);\n});\nvar browser = {\n    create: create$1,\n    toCanvas: toCanvas,\n    toDataURL: toDataURL,\n    toString: toString_1\n};\nvar amplifyTotpSetupCss = \".totp-setup{text-align:center;margin-bottom:30px}.totp-setup img{height:128px;width:128px}\";\nvar logger = new Logger('TOTP');\nvar AmplifyTOTPSetup = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputProps = {\n            autoFocus: true,\n        };\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Used for header text in totp setup component */\n        this.headerText = Translations.TOTP_HEADER_TEXT;\n        /** Used for customizing the issuer string in the qr code image */\n        this.issuer = Translations.TOTP_ISSUER;\n        this.code = null;\n        this.setupMessage = null;\n        this.qrCodeInput = null;\n        this.loading = false;\n    }\n    class_1.prototype.componentWillLoad = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        /**\n                         * We didn't use `@Watch` here because it doesn't fire when we go from require-new-password to totp-setup.\n                         * That is because `Auth.completeNewPassword` only changes `user` in place and Watch doesn't detect changes\n                         * unless we make a clone.\n                         */\n                        this.removeHubListener = onAuthUIStateChange(function (authState) {\n                            if (authState === AuthState.TOTPSetup)\n                                _this.setup();\n                        });\n                        return [4 /*yield*/, this.setup()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        this.removeHubListener && this.removeHubListener(); // stop listening to `onAuthUIStateChange`\n    };\n    class_1.prototype.buildOtpAuthPath = function (user, issuer, secretKey) {\n        return \"otpauth://totp/\" + issuer + \":\" + user.username + \"?secret=\" + secretKey + \"&issuer=\" + issuer;\n    };\n    class_1.prototype.onTOTPEvent = function (event, data, user) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('on totp event', event, data);\n                        if (!(event === SETUP_TOTP && data === SUCCESS)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, checkContact(user, this.handleAuthStateChange)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.handleTotpInputChange = function (event) {\n        this.setupMessage = null;\n        this.qrCodeInput = event.target.value;\n    };\n    class_1.prototype.generateQRCode = function (codeFromTotp) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, error_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        _a = this;\n                        return [4 /*yield*/, browser.toDataURL(codeFromTotp)];\n                    case 1:\n                        _a.qrCodeImageSource = _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_1 = _b.sent();\n                        dispatchToastHubEvent(error_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.setup = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var encodedIssuer, secretKey, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // ensure setup is only run once after totp setup is available\n                        if (!this.user || this.user.challengeName !== 'MFA_SETUP' || this.loading)\n                            return [2 /*return*/];\n                        this.setupMessage = null;\n                        encodedIssuer = encodeURI(I18n.get(this.issuer));\n                        if (!Auth || typeof Auth.setupTOTP !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, Auth.setupTOTP(this.user)];\n                    case 2:\n                        secretKey = _a.sent();\n                        logger.debug('secret key', secretKey);\n                        this.code = this.buildOtpAuthPath(this.user, encodedIssuer, secretKey);\n                        this.generateQRCode(this.code);\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_2 = _a.sent();\n                        dispatchToastHubEvent(error_2);\n                        logger.debug(I18n.get(Translations.TOTP_SETUP_FAILURE), error_2);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.verifyTotpToken = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var user, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!this.qrCodeInput) {\n                            logger.debug('No TOTP Code provided');\n                            return [2 /*return*/];\n                        }\n                        user = this.user;\n                        if (!Auth || typeof Auth.verifyTotpToken !== 'function' || typeof Auth.setPreferredMFA !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 5, , 6]);\n                        return [4 /*yield*/, Auth.verifyTotpToken(user, this.qrCodeInput)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, Auth.setPreferredMFA(user, MfaOption.TOTP)];\n                    case 3:\n                        _a.sent();\n                        this.setupMessage = I18n.get(Translations.TOTP_SUCCESS_MESSAGE);\n                        logger.debug(I18n.get(Translations.TOTP_SUCCESS_MESSAGE));\n                        return [4 /*yield*/, this.onTOTPEvent(SETUP_TOTP, SUCCESS, user)];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        error_3 = _a.sent();\n                        this.setupMessage = I18n.get(Translations.TOTP_SETUP_FAILURE);\n                        logger.error(error_3);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.render = function () {\n        var _this = this;\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), submitButtonText: I18n.get(Translations.TOTP_SUBMIT_BUTTON_TEXT), handleSubmit: function (event) { return _this.verifyTotpToken(event); }, loading: this.loading }, h(\"div\", { class: \"totp-setup\" }, this.qrCodeImageSource && h(\"img\", { src: this.qrCodeImageSource, alt: I18n.get(Translations.QR_CODE_ALT) }), h(\"amplify-form-field\", { label: I18n.get(Translations.TOTP_LABEL), inputProps: this.inputProps, fieldId: \"totpCode\", name: \"totpCode\", handleInputChange: function (event) { return _this.handleTotpInputChange(event); } })))));\n    };\n    return class_1;\n}());\nAmplifyTOTPSetup.style = amplifyTotpSetupCss;\nexport { AmplifyRadioButton as amplify_radio_button, AmplifyTOTPSetup as amplify_totp_setup };\n"]},"metadata":{},"sourceType":"module"}