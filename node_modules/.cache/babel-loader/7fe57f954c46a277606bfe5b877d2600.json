{"ast":null,"code":"/**\n * @private\n */\nexport var waiterServiceDefaults = {\n  minDelay: 2,\n  maxDelay: 120\n};\nexport var WaiterState;\n\n(function (WaiterState) {\n  WaiterState[\"ABORTED\"] = \"ABORTED\";\n  WaiterState[\"FAILURE\"] = \"FAILURE\";\n  WaiterState[\"SUCCESS\"] = \"SUCCESS\";\n  WaiterState[\"RETRY\"] = \"RETRY\";\n  WaiterState[\"TIMEOUT\"] = \"TIMEOUT\";\n})(WaiterState || (WaiterState = {}));","map":{"version":3,"sources":["../../src/waiter.ts"],"names":[],"mappings":"AAiCA;;AAEG;AACH,OAAO,IAAM,qBAAqB,GAAG;AACnC,EAAA,QAAQ,EAAE,CADyB;AAEnC,EAAA,QAAQ,EAAE;AAFyB,CAA9B;AAWP,OAAA,IAAY,WAAZ;;AAAA,CAAA,UAAY,WAAZ,EAAuB;AACrB,EAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,WAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACD,CAND,EAAY,WAAW,KAAX,WAAW,GAAA,EAAA,CAAvB","sourcesContent":["import { AbortController } from \"@aws-sdk/types\";\n\nexport interface WaiterConfiguration<Client> {\n  /**\n   * Required service client\n   */\n  client: Client;\n\n  /**\n   * The amount of time in seconds a user is willing to wait for a waiter to complete.\n   */\n  maxWaitTime: number;\n\n  /**\n   * Abort controller. Used for ending the waiter early.\n   */\n  abortController?: AbortController;\n\n  /**\n   * The minimum amount of time to delay between retries in seconds. This is the\n   * floor of the exponential backoff. This value defaults to service default\n   * if not specified. This value MUST be less than or equal to maxDelay and greater than 0.\n   */\n  minDelay?: number;\n\n  /**\n   * The maximum amount of time to delay between retries in seconds. This is the\n   * ceiling of the exponential backoff. This value defaults to service default\n   * if not specified. If specified, this value MUST be greater than or equal to 1.\n   */\n  maxDelay?: number;\n}\n\n/**\n * @private\n */\nexport const waiterServiceDefaults = {\n  minDelay: 2,\n  maxDelay: 120,\n};\n\n/**\n * @private\n */\nexport type WaiterOptions<Client> = WaiterConfiguration<Client> &\n  Required<Pick<WaiterConfiguration<Client>, \"minDelay\" | \"maxDelay\">>;\n\nexport enum WaiterState {\n  ABORTED = \"ABORTED\",\n  FAILURE = \"FAILURE\",\n  SUCCESS = \"SUCCESS\",\n  RETRY = \"RETRY\",\n  TIMEOUT = \"TIMEOUT\",\n}\n\nexport type WaiterResult = {\n  state: WaiterState;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}