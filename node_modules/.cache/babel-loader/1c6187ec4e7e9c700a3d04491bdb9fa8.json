{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { Credentials, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { AbstractInterpretPredictionsProvider } from '../types/Providers';\nimport { InterpretTextCategories } from '../types';\nimport { ComprehendClient, DetectSyntaxCommand, DetectEntitiesCommand, DetectDominantLanguageCommand, DetectKeyPhrasesCommand, DetectSentimentCommand } from '@aws-sdk/client-comprehend';\n\nvar AmazonAIInterpretPredictionsProvider =\n/** @class */\nfunction (_super) {\n  __extends(AmazonAIInterpretPredictionsProvider, _super);\n\n  function AmazonAIInterpretPredictionsProvider() {\n    return _super.call(this) || this;\n  }\n\n  AmazonAIInterpretPredictionsProvider.prototype.getProviderName = function () {\n    return 'AmazonAIInterpretPredictionsProvider';\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.interpretText = function (input) {\n    var _this = this;\n\n    return new Promise(function (res, rej) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var credentials, _a, _b, _c, region, _d, _e, interpretTypeConfig, _f, _g, _h, _j, text, _k, interpretType, _l, _m, _o, language, comprehendClient, doAll, languagePromise, languageDetectionParams, entitiesPromise, LanguageCode, _p, entitiesDetectionParams, sentimentPromise, LanguageCode, _q, sentimentParams, syntaxPromise, LanguageCode, _r, syntaxParams, keyPhrasesPromise, LanguageCode, _s, keyPhrasesParams, results, err_1;\n\n        return __generator(this, function (_t) {\n          switch (_t.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , Credentials.get()];\n\n            case 1:\n              credentials = _t.sent();\n              if (!credentials) return [2\n              /*return*/\n              , rej('No credentials')];\n              _a = this._config.interpretText, _b = _a === void 0 ? {} : _a, _c = _b.region, region = _c === void 0 ? '' : _c, _d = _b.defaults, _e = (_d === void 0 ? {} : _d).type, interpretTypeConfig = _e === void 0 ? '' : _e;\n              _f = input.text, _g = _f === void 0 ? {} : _f, _h = _g.source, _j = (_h === void 0 ? {} : _h).text, text = _j === void 0 ? '' : _j, _k = _g.type, interpretType = _k === void 0 ? interpretTypeConfig : _k;\n              _l = input.text, _m = (_l === void 0 ? {} : _l).source, _o = (_m === void 0 ? {} : _m).language, language = _o === void 0 ? undefined : _o;\n              comprehendClient = new ComprehendClient({\n                credentials: credentials,\n                region: region,\n                customUserAgent: getAmplifyUserAgent()\n              });\n              doAll = interpretType === InterpretTextCategories.ALL;\n\n              if (doAll || interpretType === InterpretTextCategories.LANGUAGE) {\n                languageDetectionParams = {\n                  Text: text\n                };\n                languagePromise = this.detectLanguage(languageDetectionParams, comprehendClient);\n              }\n\n              if (!(doAll || interpretType === InterpretTextCategories.ENTITIES)) return [3\n              /*break*/\n              , 4];\n              _p = language;\n              if (_p) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , languagePromise];\n\n            case 2:\n              _p = _t.sent();\n              _t.label = 3;\n\n            case 3:\n              LanguageCode = _p;\n\n              if (!LanguageCode) {\n                return [2\n                /*return*/\n                , rej('language code is required on source for this selection')];\n              }\n\n              entitiesDetectionParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              entitiesPromise = this.detectEntities(entitiesDetectionParams, comprehendClient);\n              _t.label = 4;\n\n            case 4:\n              if (!(doAll || interpretType === InterpretTextCategories.SENTIMENT)) return [3\n              /*break*/\n              , 7];\n              _q = language;\n              if (_q) return [3\n              /*break*/\n              , 6];\n              return [4\n              /*yield*/\n              , languagePromise];\n\n            case 5:\n              _q = _t.sent();\n              _t.label = 6;\n\n            case 6:\n              LanguageCode = _q;\n\n              if (!LanguageCode) {\n                return [2\n                /*return*/\n                , rej('language code is required on source for this selection')];\n              }\n\n              sentimentParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              sentimentPromise = this.detectSentiment(sentimentParams, comprehendClient);\n              _t.label = 7;\n\n            case 7:\n              if (!(doAll || interpretType === InterpretTextCategories.SYNTAX)) return [3\n              /*break*/\n              , 10];\n              _r = language;\n              if (_r) return [3\n              /*break*/\n              , 9];\n              return [4\n              /*yield*/\n              , languagePromise];\n\n            case 8:\n              _r = _t.sent();\n              _t.label = 9;\n\n            case 9:\n              LanguageCode = _r;\n\n              if (!LanguageCode) {\n                return [2\n                /*return*/\n                , rej('language code is required on source for this selection')];\n              }\n\n              syntaxParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              syntaxPromise = this.detectSyntax(syntaxParams, comprehendClient);\n              _t.label = 10;\n\n            case 10:\n              if (!(doAll || interpretType === InterpretTextCategories.KEY_PHRASES)) return [3\n              /*break*/\n              , 13];\n              _s = language;\n              if (_s) return [3\n              /*break*/\n              , 12];\n              return [4\n              /*yield*/\n              , languagePromise];\n\n            case 11:\n              _s = _t.sent();\n              _t.label = 12;\n\n            case 12:\n              LanguageCode = _s;\n\n              if (!LanguageCode) {\n                return [2\n                /*return*/\n                , rej('language code is required on source for this selection')];\n              }\n\n              keyPhrasesParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              keyPhrasesPromise = this.detectKeyPhrases(keyPhrasesParams, comprehendClient);\n              _t.label = 13;\n\n            case 13:\n              _t.trys.push([13, 15,, 16]);\n\n              return [4\n              /*yield*/\n              , Promise.all([languagePromise, entitiesPromise, sentimentPromise, syntaxPromise, keyPhrasesPromise])];\n\n            case 14:\n              results = _t.sent();\n              res({\n                textInterpretation: {\n                  keyPhrases: results[4] || [],\n                  language: results[0] || '',\n                  sentiment: results[2],\n                  syntax: results[3] || [],\n                  textEntities: results[1] || []\n                }\n              });\n              return [3\n              /*break*/\n              , 16];\n\n            case 15:\n              err_1 = _t.sent();\n              rej(err_1);\n              return [3\n              /*break*/\n              , 16];\n\n            case 16:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectKeyPhrases = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectKeyPhrasesCommand, data, _a, KeyPhrases, err_2;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            detectKeyPhrasesCommand = new DetectKeyPhrasesCommand(params);\n            return [4\n            /*yield*/\n            , comprehend.send(detectKeyPhrasesCommand)];\n\n          case 1:\n            data = _b.sent();\n            _a = (data || {}).KeyPhrases, KeyPhrases = _a === void 0 ? [] : _a;\n            return [2\n            /*return*/\n            , KeyPhrases.map(function (_a) {\n              var text = _a.Text;\n              return {\n                text: text\n              };\n            })];\n\n          case 2:\n            err_2 = _b.sent();\n\n            if (err_2.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_2.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectSyntax = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectSyntaxCommand, data, _a, SyntaxTokens, err_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            detectSyntaxCommand = new DetectSyntaxCommand(params);\n            return [4\n            /*yield*/\n            , comprehend.send(detectSyntaxCommand)];\n\n          case 1:\n            data = _b.sent();\n            _a = (data || {}).SyntaxTokens, SyntaxTokens = _a === void 0 ? [] : _a;\n            return [2\n            /*return*/\n            , this.serializeSyntaxFromComprehend(SyntaxTokens)];\n\n          case 2:\n            err_3 = _b.sent();\n\n            if (err_3.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_3.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.serializeSyntaxFromComprehend = function (tokens) {\n    var response = [];\n\n    if (tokens && Array.isArray(tokens)) {\n      response = tokens.map(function (_a) {\n        var _b = _a.Text,\n            text = _b === void 0 ? '' : _b,\n            _c = _a.PartOfSpeech,\n            _d = (_c === void 0 ? {} : _c).Tag,\n            syntax = _d === void 0 ? '' : _d;\n        return {\n          text: text,\n          syntax: syntax\n        };\n      });\n    }\n\n    return response;\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectSentiment = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectSentimentCommand, data, _a, _b, predominant, _c, _d, _e, positive, _f, negative, _g, neutral, _h, mixed, err_4;\n\n      return __generator(this, function (_j) {\n        switch (_j.label) {\n          case 0:\n            _j.trys.push([0, 2,, 3]);\n\n            detectSentimentCommand = new DetectSentimentCommand(params);\n            return [4\n            /*yield*/\n            , comprehend.send(detectSentimentCommand)];\n\n          case 1:\n            data = _j.sent();\n            _a = data, _b = _a.Sentiment, predominant = _b === void 0 ? '' : _b, _c = _a.SentimentScore, _d = _c === void 0 ? {} : _c, _e = _d.Positive, positive = _e === void 0 ? 0 : _e, _f = _d.Negative, negative = _f === void 0 ? 0 : _f, _g = _d.Neutral, neutral = _g === void 0 ? 0 : _g, _h = _d.Mixed, mixed = _h === void 0 ? 0 : _h;\n            return [2\n            /*return*/\n            , {\n              predominant: predominant,\n              positive: positive,\n              negative: negative,\n              neutral: neutral,\n              mixed: mixed\n            }];\n\n          case 2:\n            err_4 = _j.sent();\n\n            if (err_4.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_4.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectEntities = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectEntitiesCommand, data, _a, Entities, err_5;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            detectEntitiesCommand = new DetectEntitiesCommand(params);\n            return [4\n            /*yield*/\n            , comprehend.send(detectEntitiesCommand)];\n\n          case 1:\n            data = _b.sent();\n            _a = (data || {}).Entities, Entities = _a === void 0 ? [] : _a;\n            return [2\n            /*return*/\n            , this.serializeEntitiesFromComprehend(Entities)];\n\n          case 2:\n            err_5 = _b.sent();\n\n            if (err_5.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_5.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.serializeEntitiesFromComprehend = function (data) {\n    var response = [];\n\n    if (data && Array.isArray(data)) {\n      response = data.map(function (_a) {\n        var type = _a.Type,\n            text = _a.Text;\n        return {\n          type: type,\n          text: text\n        };\n      });\n    }\n\n    return response;\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectLanguage = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectDominantLanguageCommand, data, _a, _b, LanguageCode, err_6;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 2,, 3]);\n\n            detectDominantLanguageCommand = new DetectDominantLanguageCommand(params);\n            return [4\n            /*yield*/\n            , comprehend.send(detectDominantLanguageCommand)];\n\n          case 1:\n            data = _c.sent();\n            _a = (data || {}).Languages, _b = __read(_a === void 0 ? [''] : _a, 1), LanguageCode = _b[0].LanguageCode;\n\n            if (!LanguageCode) {\n              Promise.reject('Language not detected');\n            }\n\n            return [2\n            /*return*/\n            , data.Languages[0].LanguageCode];\n\n          case 2:\n            err_6 = _c.sent();\n\n            if (err_6.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_6.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return AmazonAIInterpretPredictionsProvider;\n}(AbstractInterpretPredictionsProvider);\n\nexport { AmazonAIInterpretPredictionsProvider };\n/**\n * @deprecated use named import\n */\n\nexport default AmazonAIInterpretPredictionsProvider;","map":{"version":3,"sources":["../../src/Providers/AmazonAIInterpretPredictionsProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { Credentials, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { AbstractInterpretPredictionsProvider } from '../types/Providers';\nimport { InterpretTextCategories, } from '../types';\nimport { ComprehendClient, DetectSyntaxCommand, DetectEntitiesCommand, DetectDominantLanguageCommand, DetectKeyPhrasesCommand, DetectSentimentCommand, } from '@aws-sdk/client-comprehend';\nvar AmazonAIInterpretPredictionsProvider = /** @class */ (function (_super) {\n    __extends(AmazonAIInterpretPredictionsProvider, _super);\n    function AmazonAIInterpretPredictionsProvider() {\n        return _super.call(this) || this;\n    }\n    AmazonAIInterpretPredictionsProvider.prototype.getProviderName = function () {\n        return 'AmazonAIInterpretPredictionsProvider';\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.interpretText = function (input) {\n        var _this = this;\n        return new Promise(function (res, rej) { return __awaiter(_this, void 0, void 0, function () {\n            var credentials, _a, _b, _c, region, _d, _e, interpretTypeConfig, _f, _g, _h, _j, text, _k, interpretType, _l, _m, _o, language, comprehendClient, doAll, languagePromise, languageDetectionParams, entitiesPromise, LanguageCode, _p, entitiesDetectionParams, sentimentPromise, LanguageCode, _q, sentimentParams, syntaxPromise, LanguageCode, _r, syntaxParams, keyPhrasesPromise, LanguageCode, _s, keyPhrasesParams, results, err_1;\n            return __generator(this, function (_t) {\n                switch (_t.label) {\n                    case 0: return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _t.sent();\n                        if (!credentials)\n                            return [2 /*return*/, rej('No credentials')];\n                        _a = this._config.interpretText, _b = _a === void 0 ? {} : _a, _c = _b.region, region = _c === void 0 ? '' : _c, _d = _b.defaults, _e = (_d === void 0 ? {} : _d).type, interpretTypeConfig = _e === void 0 ? '' : _e;\n                        _f = (input).text, _g = _f === void 0 ? {} : _f, _h = _g.source, _j = (_h === void 0 ? {} : _h).text, text = _j === void 0 ? '' : _j, _k = _g.type, interpretType = _k === void 0 ? interpretTypeConfig : _k;\n                        _l = (input).text, _m = (_l === void 0 ? {} : _l).source, _o = (_m === void 0 ? {} : _m).language, language = _o === void 0 ? undefined : _o;\n                        comprehendClient = new ComprehendClient({\n                            credentials: credentials,\n                            region: region,\n                            customUserAgent: getAmplifyUserAgent(),\n                        });\n                        doAll = interpretType === InterpretTextCategories.ALL;\n                        if (doAll || interpretType === InterpretTextCategories.LANGUAGE) {\n                            languageDetectionParams = {\n                                Text: text,\n                            };\n                            languagePromise = this.detectLanguage(languageDetectionParams, comprehendClient);\n                        }\n                        if (!(doAll || interpretType === InterpretTextCategories.ENTITIES)) return [3 /*break*/, 4];\n                        _p = language;\n                        if (_p) return [3 /*break*/, 3];\n                        return [4 /*yield*/, languagePromise];\n                    case 2:\n                        _p = (_t.sent());\n                        _t.label = 3;\n                    case 3:\n                        LanguageCode = _p;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        entitiesDetectionParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        entitiesPromise = this.detectEntities(entitiesDetectionParams, comprehendClient);\n                        _t.label = 4;\n                    case 4:\n                        if (!(doAll || interpretType === InterpretTextCategories.SENTIMENT)) return [3 /*break*/, 7];\n                        _q = language;\n                        if (_q) return [3 /*break*/, 6];\n                        return [4 /*yield*/, languagePromise];\n                    case 5:\n                        _q = (_t.sent());\n                        _t.label = 6;\n                    case 6:\n                        LanguageCode = _q;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        sentimentParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        sentimentPromise = this.detectSentiment(sentimentParams, comprehendClient);\n                        _t.label = 7;\n                    case 7:\n                        if (!(doAll || interpretType === InterpretTextCategories.SYNTAX)) return [3 /*break*/, 10];\n                        _r = language;\n                        if (_r) return [3 /*break*/, 9];\n                        return [4 /*yield*/, languagePromise];\n                    case 8:\n                        _r = (_t.sent());\n                        _t.label = 9;\n                    case 9:\n                        LanguageCode = _r;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        syntaxParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        syntaxPromise = this.detectSyntax(syntaxParams, comprehendClient);\n                        _t.label = 10;\n                    case 10:\n                        if (!(doAll || interpretType === InterpretTextCategories.KEY_PHRASES)) return [3 /*break*/, 13];\n                        _s = language;\n                        if (_s) return [3 /*break*/, 12];\n                        return [4 /*yield*/, languagePromise];\n                    case 11:\n                        _s = (_t.sent());\n                        _t.label = 12;\n                    case 12:\n                        LanguageCode = _s;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        keyPhrasesParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        keyPhrasesPromise = this.detectKeyPhrases(keyPhrasesParams, comprehendClient);\n                        _t.label = 13;\n                    case 13:\n                        _t.trys.push([13, 15, , 16]);\n                        return [4 /*yield*/, Promise.all([\n                                languagePromise,\n                                entitiesPromise,\n                                sentimentPromise,\n                                syntaxPromise,\n                                keyPhrasesPromise,\n                            ])];\n                    case 14:\n                        results = _t.sent();\n                        res({\n                            textInterpretation: {\n                                keyPhrases: results[4] || [],\n                                language: results[0] || '',\n                                sentiment: results[2],\n                                syntax: results[3] || [],\n                                textEntities: results[1] || [],\n                            },\n                        });\n                        return [3 /*break*/, 16];\n                    case 15:\n                        err_1 = _t.sent();\n                        rej(err_1);\n                        return [3 /*break*/, 16];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectKeyPhrases = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectKeyPhrasesCommand, data, _a, KeyPhrases, err_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        detectKeyPhrasesCommand = new DetectKeyPhrasesCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectKeyPhrasesCommand)];\n                    case 1:\n                        data = _b.sent();\n                        _a = (data || {}).KeyPhrases, KeyPhrases = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, KeyPhrases.map(function (_a) {\n                                var text = _a.Text;\n                                return { text: text };\n                            })];\n                    case 2:\n                        err_2 = _b.sent();\n                        if (err_2.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_2.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectSyntax = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectSyntaxCommand, data, _a, SyntaxTokens, err_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        detectSyntaxCommand = new DetectSyntaxCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectSyntaxCommand)];\n                    case 1:\n                        data = _b.sent();\n                        _a = (data || {}).SyntaxTokens, SyntaxTokens = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, this.serializeSyntaxFromComprehend(SyntaxTokens)];\n                    case 2:\n                        err_3 = _b.sent();\n                        if (err_3.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_3.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.serializeSyntaxFromComprehend = function (tokens) {\n        var response = [];\n        if (tokens && Array.isArray(tokens)) {\n            response = tokens.map(function (_a) {\n                var _b = _a.Text, text = _b === void 0 ? '' : _b, _c = _a.PartOfSpeech, _d = (_c === void 0 ? {} : _c).Tag, syntax = _d === void 0 ? '' : _d;\n                return { text: text, syntax: syntax };\n            });\n        }\n        return response;\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectSentiment = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectSentimentCommand, data, _a, _b, predominant, _c, _d, _e, positive, _f, negative, _g, neutral, _h, mixed, err_4;\n            return __generator(this, function (_j) {\n                switch (_j.label) {\n                    case 0:\n                        _j.trys.push([0, 2, , 3]);\n                        detectSentimentCommand = new DetectSentimentCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectSentimentCommand)];\n                    case 1:\n                        data = _j.sent();\n                        _a = (data), _b = _a.Sentiment, predominant = _b === void 0 ? '' : _b, _c = _a.SentimentScore, _d = _c === void 0 ? {} : _c, _e = _d.Positive, positive = _e === void 0 ? 0 : _e, _f = _d.Negative, negative = _f === void 0 ? 0 : _f, _g = _d.Neutral, neutral = _g === void 0 ? 0 : _g, _h = _d.Mixed, mixed = _h === void 0 ? 0 : _h;\n                        return [2 /*return*/, { predominant: predominant, positive: positive, negative: negative, neutral: neutral, mixed: mixed }];\n                    case 2:\n                        err_4 = _j.sent();\n                        if (err_4.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_4.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectEntities = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectEntitiesCommand, data, _a, Entities, err_5;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        detectEntitiesCommand = new DetectEntitiesCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectEntitiesCommand)];\n                    case 1:\n                        data = _b.sent();\n                        _a = (data || {}).Entities, Entities = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, this.serializeEntitiesFromComprehend(Entities)];\n                    case 2:\n                        err_5 = _b.sent();\n                        if (err_5.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_5.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.serializeEntitiesFromComprehend = function (data) {\n        var response = [];\n        if (data && Array.isArray(data)) {\n            response = data.map(function (_a) {\n                var type = _a.Type, text = _a.Text;\n                return { type: type, text: text };\n            });\n        }\n        return response;\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectLanguage = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectDominantLanguageCommand, data, _a, _b, LanguageCode, err_6;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _c.trys.push([0, 2, , 3]);\n                        detectDominantLanguageCommand = new DetectDominantLanguageCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectDominantLanguageCommand)];\n                    case 1:\n                        data = _c.sent();\n                        _a = (data || {}).Languages, _b = __read(_a === void 0 ? [''] : _a, 1), LanguageCode = _b[0].LanguageCode;\n                        if (!LanguageCode) {\n                            Promise.reject('Language not detected');\n                        }\n                        return [2 /*return*/, data.Languages[0].LanguageCode];\n                    case 2:\n                        err_6 = _c.sent();\n                        if (err_6.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_6.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AmazonAIInterpretPredictionsProvider;\n}(AbstractInterpretPredictionsProvider));\nexport { AmazonAIInterpretPredictionsProvider };\n/**\n * @deprecated use named import\n */\nexport default AmazonAIInterpretPredictionsProvider;\n//# sourceMappingURL=AmazonAIInterpretPredictionsProvider.js.map"]},"metadata":{},"sourceType":"module"}