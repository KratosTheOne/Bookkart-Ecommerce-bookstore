{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction fromUtf8(input) {\n  return new TextEncoder().encode(input);\n}\n\nexports.fromUtf8 = fromUtf8;\n\nfunction toUtf8(input) {\n  return new TextDecoder(\"utf-8\").decode(input);\n}\n\nexports.toUtf8 = toUtf8;","map":{"version":3,"sources":["../src/whatwgEncodingApi.ts"],"names":[],"mappings":";;;;;;AA2CA,SAAgB,QAAhB,CAAyB,KAAzB,EAAsC;AACpC,SAAO,IAAI,WAAJ,GAAkB,MAAlB,CAAyB,KAAzB,CAAP;AACD;;AAFD,OAAA,CAAA,QAAA,GAAA,QAAA;;AAIA,SAAgB,MAAhB,CAAuB,KAAvB,EAAwC;AACtC,SAAO,IAAI,WAAJ,CAAgB,OAAhB,EAAyB,MAAzB,CAAgC,KAAhC,CAAP;AACD;;AAFD,OAAA,CAAA,MAAA,GAAA,MAAA","sourcesContent":["/**\n * A declaration of the global TextEncoder and TextDecoder constructors.\n *\n * @see https://encoding.spec.whatwg.org/\n */\nnamespace Encoding {\n  interface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n  }\n\n  interface TextDecodeOptions {\n    stream?: boolean;\n  }\n\n  interface TextDecoder {\n    readonly encoding: string;\n    readonly fatal: boolean;\n    readonly ignoreBOM: boolean;\n    decode(\n      input?: ArrayBuffer | ArrayBufferView,\n      options?: TextDecodeOptions\n    ): string;\n  }\n\n  export interface TextDecoderConstructor {\n    new (label?: string, options?: TextDecoderOptions): TextDecoder;\n  }\n\n  interface TextEncoder {\n    readonly encoding: \"utf-8\";\n    encode(input?: string): Uint8Array;\n  }\n\n  export interface TextEncoderConstructor {\n    new (): TextEncoder;\n  }\n}\n\ndeclare const TextDecoder: Encoding.TextDecoderConstructor;\n\ndeclare const TextEncoder: Encoding.TextEncoderConstructor;\n\nexport function fromUtf8(input: string): Uint8Array {\n  return new TextEncoder().encode(input);\n}\n\nexport function toUtf8(input: Uint8Array): string {\n  return new TextDecoder(\"utf-8\").decode(input);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}