{"ast":null,"code":"import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nexport function formatUrl(request) {\n  var port = request.port,\n      query = request.query;\n  var protocol = request.protocol,\n      path = request.path,\n      hostname = request.hostname;\n\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n\n  if (port) {\n    hostname += \":\" + port;\n  }\n\n  if (path && path.charAt(0) !== \"/\") {\n    path = \"/\" + path;\n  }\n\n  var queryString = query ? buildQueryString(query) : \"\";\n\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = \"?\" + queryString;\n  }\n\n  return protocol + \"//\" + hostname + path + queryString;\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,QAAiC,8BAAjC;AAGA,OAAM,SAAU,SAAV,CAAoB,OAApB,EAAoE;AAChE,MAAA,IAAI,GAAY,OAAO,CAAnB,IAAJ;AAAA,MAAM,KAAK,GAAK,OAAO,CAAZ,KAAX;AACF,MAAA,QAAQ,GAAqB,OAAO,CAA5B,QAAR;AAAA,MAAU,IAAI,GAAe,OAAO,CAAtB,IAAd;AAAA,MAAgB,QAAQ,GAAK,OAAO,CAAZ,QAAxB;;AACN,MAAI,QAAQ,IAAI,QAAQ,CAAC,MAAT,CAAgB,CAAC,CAAjB,MAAwB,GAAxC,EAA6C;AAC3C,IAAA,QAAQ,IAAI,GAAZ;AACD;;AACD,MAAI,IAAJ,EAAU;AACR,IAAA,QAAQ,IAAI,MAAI,IAAhB;AACD;;AACD,MAAI,IAAI,IAAI,IAAI,CAAC,MAAL,CAAY,CAAZ,MAAmB,GAA/B,EAAoC;AAClC,IAAA,IAAI,GAAG,MAAI,IAAX;AACD;;AACD,MAAI,WAAW,GAAG,KAAK,GAAG,gBAAgB,CAAC,KAAD,CAAnB,GAA6B,EAApD;;AACA,MAAI,WAAW,IAAI,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAtC,EAA2C;AACzC,IAAA,WAAW,GAAG,MAAI,WAAlB;AACD;;AACD,SAAU,QAAQ,GAAA,IAAR,GAAa,QAAb,GAAwB,IAAxB,GAA+B,WAAzC;AACD","sourcesContent":["import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { HttpRequest } from \"@aws-sdk/types\";\n\nexport function formatUrl(request: Omit<HttpRequest, \"headers\" | \"method\">): string {\n  const { port, query } = request;\n  let { protocol, path, hostname } = request;\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n  if (port) {\n    hostname += `:${port}`;\n  }\n  if (path && path.charAt(0) !== \"/\") {\n    path = `/${path}`;\n  }\n  let queryString = query ? buildQueryString(query) : \"\";\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = `?${queryString}`;\n  }\n  return `${protocol}//${hostname}${path}${queryString}`;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}