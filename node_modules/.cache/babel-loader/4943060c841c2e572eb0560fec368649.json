{"ast":null,"code":"import { __awaiter, __generator, __read, __spread } from \"tslib\";\nexport var retryMiddleware = function retryMiddleware(options) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var _a;\n\n        return __generator(this, function (_b) {\n          if ((_a = options === null || options === void 0 ? void 0 : options.retryStrategy) === null || _a === void 0 ? void 0 : _a.mode) context.userAgent = __spread(context.userAgent || [], [[\"cfg/retry-mode\", options.retryStrategy.mode]]);\n          return [2\n          /*return*/\n          , options.retryStrategy.retry(next, args)];\n        });\n      });\n    };\n  };\n};\nexport var retryMiddlewareOptions = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true\n};\nexport var getRetryPlugin = function getRetryPlugin(options) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"sources":["../../src/retryMiddleware.ts"],"names":[],"mappings":";AAaA,OAAO,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,OAAD,EAA6B;AAAK,SAAA,UAC/D,IAD+D,EAE/D,OAF+D,EAE/B;AACC,WAAA,UACjC,IADiC,EACE;AAAA,aAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;AAEnC,cAAA,CAAA,EAAA,GAAI,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,aAAb,MAA0B,IAA1B,IAA0B,EAAA,KAAA,KAAA,CAA1B,GAA0B,KAAA,CAA1B,GAA0B,EAAA,CAAE,IAA5B,EACE,OAAO,CAAC,SAAR,GAAiB,QAAA,CAAQ,OAAO,CAAC,SAAR,IAAqB,EAA7B,EAAgC,CAAE,CAAC,gBAAD,EAAmB,OAAO,CAAC,aAAR,CAAsB,IAAzC,CAAF,CAAhC,CAAjB;AACF,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,aAAR,CAAsB,KAAtB,CAA4B,IAA5B,EAAkC,IAAlC,CAAP,CAAA;;OAJmC,CAAA;AADF,KAAA;AAH8B,GAAA;AAShE,CATM;AAWP,OAAO,IAAM,sBAAsB,GAAqD;AACtF,EAAA,IAAI,EAAE,iBADgF;AAEtF,EAAA,IAAI,EAAE,CAAC,OAAD,CAFgF;AAGtF,EAAA,IAAI,EAAE,iBAHgF;AAItF,EAAA,QAAQ,EAAE,MAJ4E;AAKtF,EAAA,QAAQ,EAAE;AAL4E,CAAjF;AAQP,OAAO,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,OAAD,EAA6B;AAA0B,SAAC;AACpF,IAAA,YAAY,EAAE,sBAAC,WAAD,EAAY;AACxB,MAAA,WAAW,CAAC,GAAZ,CAAgB,eAAe,CAAC,OAAD,CAA/B,EAA0C,sBAA1C;AACD;AAHmF,GAAD;AAInF,CAJK","sourcesContent":["import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware = (options: RetryResolvedConfig) => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>,\n  context: HandlerExecutionContext\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  if (options?.retryStrategy?.mode)\n    context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", options.retryStrategy.mode]];\n  return options.retryStrategy.retry(next, args);\n};\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true,\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}