{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketLifecycleConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketLifecycleConfigurationCommand, serializeAws_restXmlPutBucketLifecycleConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle\n *          configuration. For information about lifecycle configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <note>\n *             <p>Bucket lifecycle configuration now supports specifying a lifecycle rule using an\n *             object key name prefix, one or more object tags, or a combination of both. Accordingly,\n *             this section describes the latest API. The previous version of the API supported\n *             filtering based only on an object key name prefix, which is supported for backward\n *             compatibility. For the related API description, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\">PutBucketLifecycle</a>.</p>\n *          </note>\n *\n *\n *\n *          <p>\n *             <b>Rules</b>\n *          </p>\n *          <p>You specify the lifecycle configuration in your request body. The lifecycle\n *          configuration is specified as XML consisting of one or more rules. Each rule consists of\n *          the following:</p>\n *\n *          <ul>\n *             <li>\n *                <p>Filter identifying a subset of objects to which the rule applies. The filter can\n *                be based on a key name prefix, object tags, or a combination of both.</p>\n *             </li>\n *             <li>\n *                <p>Status whether the rule is in effect.</p>\n *             </li>\n *             <li>\n *                <p>One or more lifecycle transition and expiration actions that you want Amazon S3 to\n *                perform on the objects identified by the filter. If the state of your bucket is\n *                versioning-enabled or versioning-suspended, you can have many versions of the same\n *                object (one current version and zero or more noncurrent versions). Amazon S3 provides\n *                predefined actions that you can specify for current and noncurrent object\n *                versions.</p>\n *             </li>\n *          </ul>\n *\n *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\">Object\n *             Lifecycle Management</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html\">Lifecycle Configuration Elements</a>.</p>\n *\n *\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *\n *\n *          <p>By default, all Amazon S3 resources are private, including buckets, objects, and related\n *          subresources (for example, lifecycle configuration and website configuration). Only the\n *          resource owner (that is, the AWS account that created it) can access the resource. The\n *          resource owner can optionally grant access permissions to others by writing an access\n *          policy. For this operation, a user must get the s3:PutLifecycleConfiguration\n *          permission.</p>\n *\n *          <p>You can also explicitly deny permissions. Explicit deny also supersedes any other\n *          permissions. If you want to block users or accounts from removing or deleting objects from\n *          your bucket, you must deny them permissions for the following actions:</p>\n *\n *          <ul>\n *             <li>\n *                <p>s3:DeleteObject</p>\n *             </li>\n *             <li>\n *                <p>s3:DeleteObjectVersion</p>\n *             </li>\n *             <li>\n *                <p>s3:PutLifecycleConfiguration</p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>The following are related to <code>PutBucketLifecycleConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-configuration-examples.html\">Examples of\n *                   Lifecycle Configuration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\">DeleteBucketLifecycle</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutBucketLifecycleConfigurationCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutBucketLifecycleConfigurationCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutBucketLifecycleConfigurationCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutBucketLifecycleConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketLifecycleConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketLifecycleConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutBucketLifecycleConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketLifecycleConfigurationCommand(input, context);\n  };\n\n  PutBucketLifecycleConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketLifecycleConfigurationCommand(output, context);\n  };\n\n  return PutBucketLifecycleConfigurationCommand;\n}($Command);\n\nexport { PutBucketLifecycleConfigurationCommand };","map":{"version":3,"sources":["../../../commands/PutBucketLifecycleConfigurationCommand.ts"],"names":[],"mappings":";AACA,SAAS,sCAAT,QAAuD,oBAAvD;AACA,SACE,4DADF,EAEE,0DAFF,QAGO,0BAHP;AAIA,SAAS,6BAAT,QAA8C,yCAA9C;AACA,SAAS,uBAAT,QAAwC,qCAAxC;AACA,SAAS,cAAT,QAA+B,2BAA/B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FG;;AACH,IAAA,sCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4D,EAAA,SAAA,CAAA,sCAAA,EAAA,MAAA,CAAA,CAA5D,CAKE;AACA;;;AAEA,WAAA,sCAAA,CAAqB,KAArB,EAAuE;AAAvE,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAAkD,CAGrE;AACD;AAED;;AAEG;;;AACH,EAAA,sCAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AACA,SAAK,eAAL,CAAqB,GAArB,CAAyB,uBAAuB,CAAC,aAAD,CAAhD;AACA,SAAK,eAAL,CAAqB,GAArB,CAAyB,6BAA6B,CAAC,aAAD,CAAtD;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,UAAnB;AACA,QAAM,WAAW,GAAG,wCAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,sCAAsC,CAAC,kBAJT;AAKvD,MAAA,wBAAwB,EAAE,UAAC,MAAD,EAAY;AAAK,eAAA,MAAA;AAAM;AALM,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GA3BD;;AA6BQ,EAAA,sCAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UACE,KADF,EAEE,OAFF,EAEyB;AAEvB,WAAO,0DAA0D,CAAC,KAAD,EAAQ,OAAR,CAAjE;AACD,GALO;;AAOA,EAAA,sCAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UACE,MADF,EAEE,OAFF,EAEyB;AAEvB,WAAO,4DAA4D,CAAC,MAAD,EAAS,OAAT,CAAnE;AACD,GALO;;AASV,SAAA,sCAAA;AAAC,CA9DD,CAA4D,QAA5D,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { PutBucketLifecycleConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketLifecycleConfigurationCommand, serializeAws_restXmlPutBucketLifecycleConfigurationCommand, } from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle\n *          configuration. For information about lifecycle configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <note>\n *             <p>Bucket lifecycle configuration now supports specifying a lifecycle rule using an\n *             object key name prefix, one or more object tags, or a combination of both. Accordingly,\n *             this section describes the latest API. The previous version of the API supported\n *             filtering based only on an object key name prefix, which is supported for backward\n *             compatibility. For the related API description, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\">PutBucketLifecycle</a>.</p>\n *          </note>\n *\n *\n *\n *          <p>\n *             <b>Rules</b>\n *          </p>\n *          <p>You specify the lifecycle configuration in your request body. The lifecycle\n *          configuration is specified as XML consisting of one or more rules. Each rule consists of\n *          the following:</p>\n *\n *          <ul>\n *             <li>\n *                <p>Filter identifying a subset of objects to which the rule applies. The filter can\n *                be based on a key name prefix, object tags, or a combination of both.</p>\n *             </li>\n *             <li>\n *                <p>Status whether the rule is in effect.</p>\n *             </li>\n *             <li>\n *                <p>One or more lifecycle transition and expiration actions that you want Amazon S3 to\n *                perform on the objects identified by the filter. If the state of your bucket is\n *                versioning-enabled or versioning-suspended, you can have many versions of the same\n *                object (one current version and zero or more noncurrent versions). Amazon S3 provides\n *                predefined actions that you can specify for current and noncurrent object\n *                versions.</p>\n *             </li>\n *          </ul>\n *\n *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\">Object\n *             Lifecycle Management</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html\">Lifecycle Configuration Elements</a>.</p>\n *\n *\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *\n *\n *          <p>By default, all Amazon S3 resources are private, including buckets, objects, and related\n *          subresources (for example, lifecycle configuration and website configuration). Only the\n *          resource owner (that is, the AWS account that created it) can access the resource. The\n *          resource owner can optionally grant access permissions to others by writing an access\n *          policy. For this operation, a user must get the s3:PutLifecycleConfiguration\n *          permission.</p>\n *\n *          <p>You can also explicitly deny permissions. Explicit deny also supersedes any other\n *          permissions. If you want to block users or accounts from removing or deleting objects from\n *          your bucket, you must deny them permissions for the following actions:</p>\n *\n *          <ul>\n *             <li>\n *                <p>s3:DeleteObject</p>\n *             </li>\n *             <li>\n *                <p>s3:DeleteObjectVersion</p>\n *             </li>\n *             <li>\n *                <p>s3:PutLifecycleConfiguration</p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>The following are related to <code>PutBucketLifecycleConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-configuration-examples.html\">Examples of\n *                   Lifecycle Configuration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\">DeleteBucketLifecycle</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutBucketLifecycleConfigurationCommand = /** @class */ (function (_super) {\n    __extends(PutBucketLifecycleConfigurationCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function PutBucketLifecycleConfigurationCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    PutBucketLifecycleConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n        this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"PutBucketLifecycleConfigurationCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: PutBucketLifecycleConfigurationRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: function (output) { return output; },\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    PutBucketLifecycleConfigurationCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlPutBucketLifecycleConfigurationCommand(input, context);\n    };\n    PutBucketLifecycleConfigurationCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlPutBucketLifecycleConfigurationCommand(output, context);\n    };\n    return PutBucketLifecycleConfigurationCommand;\n}($Command));\nexport { PutBucketLifecycleConfigurationCommand };\n//# sourceMappingURL=PutBucketLifecycleConfigurationCommand.js.map"]},"metadata":{},"sourceType":"module"}