{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { ModelPredicateCreator } from '../predicates';\nimport { QueryOne } from '../types';\nimport { SYNC, valuesEqual } from '../util';\nimport { TransformerMutationType } from './utils'; // TODO: Persist deleted ids\n\nvar MutationEventOutbox =\n/** @class */\nfunction () {\n  function MutationEventOutbox(schema, MutationEvent, modelInstanceCreator, ownSymbol) {\n    this.schema = schema;\n    this.MutationEvent = MutationEvent;\n    this.modelInstanceCreator = modelInstanceCreator;\n    this.ownSymbol = ownSymbol;\n  }\n\n  MutationEventOutbox.prototype.enqueue = function (storage, mutationEvent) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        storage.runExclusive(function (s) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var mutationEventModelDefinition, predicate, _a, first, incomingMutationType, merged_1, incomingConditionJSON, incomingCondition, merged;\n\n            var _this = this;\n\n            return __generator(this, function (_b) {\n              switch (_b.label) {\n                case 0:\n                  mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n                  predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n                    return c.modelId('eq', mutationEvent.modelId).id('ne', _this.inProgressMutationEventId);\n                  });\n                  return [4\n                  /*yield*/\n                  , s.query(this.MutationEvent, predicate)];\n\n                case 1:\n                  _a = __read.apply(void 0, [_b.sent(), 1]), first = _a[0];\n                  if (!(first === undefined)) return [3\n                  /*break*/\n                  , 3];\n                  return [4\n                  /*yield*/\n                  , s.save(mutationEvent, undefined, this.ownSymbol)];\n\n                case 2:\n                  _b.sent();\n\n                  return [2\n                  /*return*/\n                  ];\n\n                case 3:\n                  incomingMutationType = mutationEvent.operation;\n                  if (!(first.operation === TransformerMutationType.CREATE)) return [3\n                  /*break*/\n                  , 8];\n                  if (!(incomingMutationType === TransformerMutationType.DELETE)) return [3\n                  /*break*/\n                  , 5];\n                  return [4\n                  /*yield*/\n                  , s.delete(this.MutationEvent, predicate)];\n\n                case 4:\n                  _b.sent();\n\n                  return [3\n                  /*break*/\n                  , 7];\n\n                case 5:\n                  merged_1 = this.mergeUserFields(first, mutationEvent);\n                  return [4\n                  /*yield*/\n                  , s.save(this.MutationEvent.copyOf(first, function (draft) {\n                    draft.data = merged_1.data;\n                  }), undefined, this.ownSymbol)];\n\n                case 6:\n                  _b.sent();\n\n                  _b.label = 7;\n\n                case 7:\n                  return [3\n                  /*break*/\n                  , 12];\n\n                case 8:\n                  incomingConditionJSON = mutationEvent.condition;\n                  incomingCondition = JSON.parse(incomingConditionJSON);\n                  merged = void 0;\n                  if (!(Object.keys(incomingCondition).length === 0)) return [3\n                  /*break*/\n                  , 10];\n                  merged = this.mergeUserFields(first, mutationEvent); // delete all for model\n\n                  return [4\n                  /*yield*/\n                  , s.delete(this.MutationEvent, predicate)];\n\n                case 9:\n                  // delete all for model\n                  _b.sent();\n\n                  _b.label = 10;\n\n                case 10:\n                  merged = merged || mutationEvent; // Enqueue new one\n\n                  return [4\n                  /*yield*/\n                  , s.save(merged, undefined, this.ownSymbol)];\n\n                case 11:\n                  // Enqueue new one\n                  _b.sent();\n\n                  _b.label = 12;\n\n                case 12:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        });\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  MutationEventOutbox.prototype.dequeue = function (storage, record, recordOp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var head;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.peek(storage)];\n\n          case 1:\n            head = _a.sent();\n            if (!record) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.syncOutboxVersionsOnDequeue(storage, record, head, recordOp)];\n\n          case 2:\n            _a.sent();\n\n            _a.label = 3;\n\n          case 3:\n            return [4\n            /*yield*/\n            , storage.delete(head)];\n\n          case 4:\n            _a.sent();\n\n            this.inProgressMutationEventId = undefined;\n            return [2\n            /*return*/\n            , head];\n        }\n      });\n    });\n  };\n  /**\n   * Doing a peek() implies that the mutation goes \"inProgress\"\n   *\n   * @param storage\n   */\n\n\n  MutationEventOutbox.prototype.peek = function (storage) {\n    return __awaiter(this, void 0, void 0, function () {\n      var head;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , storage.queryOne(this.MutationEvent, QueryOne.FIRST)];\n\n          case 1:\n            head = _a.sent();\n            this.inProgressMutationEventId = head ? head.id : undefined;\n            return [2\n            /*return*/\n            , head];\n        }\n      });\n    });\n  };\n\n  MutationEventOutbox.prototype.getForModel = function (storage, model) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mutationEventModelDefinition, mutationEvents;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            mutationEventModelDefinition = this.schema.namespaces[SYNC].models.MutationEvent;\n            return [4\n            /*yield*/\n            , storage.query(this.MutationEvent, ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n              return c.modelId('eq', model.id);\n            }))];\n\n          case 1:\n            mutationEvents = _a.sent();\n            return [2\n            /*return*/\n            , mutationEvents];\n        }\n      });\n    });\n  };\n\n  MutationEventOutbox.prototype.getModelIds = function (storage) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mutationEvents, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , storage.query(this.MutationEvent)];\n\n          case 1:\n            mutationEvents = _a.sent();\n            result = new Set();\n            mutationEvents.forEach(function (_a) {\n              var modelId = _a.modelId;\n              return result.add(modelId);\n            });\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  }; // applies _version from the AppSync mutation response to other items\n  // in the mutation queue with the same id\n  // see https://github.com/aws-amplify/amplify-js/pull/7354 for more details\n\n\n  MutationEventOutbox.prototype.syncOutboxVersionsOnDequeue = function (storage, record, head, recordOp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _version, _lastChangedAt, _deleted, incomingData, data, __version, __lastChangedAt, __deleted, outgoingData, mutationEventModelDefinition, predicate, outdatedMutations, reconciledMutations;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (head.operation !== recordOp) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            _version = record._version, _lastChangedAt = record._lastChangedAt, _deleted = record._deleted, incomingData = __rest(record, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n            data = JSON.parse(head.data);\n\n            if (!data) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            __version = data._version, __lastChangedAt = data._lastChangedAt, __deleted = data._deleted, outgoingData = __rest(data, [\"_version\", \"_lastChangedAt\", \"_deleted\"]); // Don't sync the version when the data in the response does not match the data\n            // in the request, i.e., when there's a handled conflict\n\n            if (!valuesEqual(incomingData, outgoingData, true)) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n            predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n              return c.modelId('eq', record.id).id('ne', _this.inProgressMutationEventId);\n            });\n            return [4\n            /*yield*/\n            , storage.query(this.MutationEvent, predicate)];\n\n          case 1:\n            outdatedMutations = _a.sent();\n\n            if (!outdatedMutations.length) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            reconciledMutations = outdatedMutations.map(function (m) {\n              var oldData = JSON.parse(m.data);\n\n              var newData = __assign(__assign({}, oldData), {\n                _version: _version,\n                _lastChangedAt: _lastChangedAt\n              });\n\n              return _this.MutationEvent.copyOf(m, function (draft) {\n                draft.data = JSON.stringify(newData);\n              });\n            });\n            return [4\n            /*yield*/\n            , storage.delete(this.MutationEvent, predicate)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , Promise.all(reconciledMutations.map(function (m) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , storage.save(m, undefined, this.ownSymbol)];\n\n                    case 1:\n                      return [2\n                      /*return*/\n                      , _a.sent()];\n                  }\n                });\n              });\n            }))];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  MutationEventOutbox.prototype.mergeUserFields = function (previous, current) {\n    var _a = JSON.parse(previous.data),\n        _version = _a._version,\n        id = _a.id,\n        _lastChangedAt = _a._lastChangedAt,\n        _deleted = _a._deleted,\n        previousData = __rest(_a, [\"_version\", \"id\", \"_lastChangedAt\", \"_deleted\"]);\n\n    var _b = JSON.parse(current.data),\n        __id = _b.id,\n        __version = _b._version,\n        __lastChangedAt = _b._lastChangedAt,\n        __deleted = _b._deleted,\n        currentData = __rest(_b, [\"id\", \"_version\", \"_lastChangedAt\", \"_deleted\"]);\n\n    var data = JSON.stringify(__assign(__assign({\n      id: id,\n      _version: _version,\n      _lastChangedAt: _lastChangedAt,\n      _deleted: _deleted\n    }, previousData), currentData));\n    return this.modelInstanceCreator(this.MutationEvent, __assign(__assign({}, current), {\n      data: data\n    }));\n  };\n\n  return MutationEventOutbox;\n}();\n\nexport { MutationEventOutbox };","map":{"version":3,"sources":["../../src/sync/outbox.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { ModelPredicateCreator } from '../predicates';\nimport { QueryOne, } from '../types';\nimport { SYNC, valuesEqual } from '../util';\nimport { TransformerMutationType } from './utils';\n// TODO: Persist deleted ids\nvar MutationEventOutbox = /** @class */ (function () {\n    function MutationEventOutbox(schema, MutationEvent, modelInstanceCreator, ownSymbol) {\n        this.schema = schema;\n        this.MutationEvent = MutationEvent;\n        this.modelInstanceCreator = modelInstanceCreator;\n        this.ownSymbol = ownSymbol;\n    }\n    MutationEventOutbox.prototype.enqueue = function (storage, mutationEvent) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                storage.runExclusive(function (s) { return __awaiter(_this, void 0, void 0, function () {\n                    var mutationEventModelDefinition, predicate, _a, first, incomingMutationType, merged_1, incomingConditionJSON, incomingCondition, merged;\n                    var _this = this;\n                    return __generator(this, function (_b) {\n                        switch (_b.label) {\n                            case 0:\n                                mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n                                predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n                                    return c\n                                        .modelId('eq', mutationEvent.modelId)\n                                        .id('ne', _this.inProgressMutationEventId);\n                                });\n                                return [4 /*yield*/, s.query(this.MutationEvent, predicate)];\n                            case 1:\n                                _a = __read.apply(void 0, [_b.sent(), 1]), first = _a[0];\n                                if (!(first === undefined)) return [3 /*break*/, 3];\n                                return [4 /*yield*/, s.save(mutationEvent, undefined, this.ownSymbol)];\n                            case 2:\n                                _b.sent();\n                                return [2 /*return*/];\n                            case 3:\n                                incomingMutationType = mutationEvent.operation;\n                                if (!(first.operation === TransformerMutationType.CREATE)) return [3 /*break*/, 8];\n                                if (!(incomingMutationType === TransformerMutationType.DELETE)) return [3 /*break*/, 5];\n                                return [4 /*yield*/, s.delete(this.MutationEvent, predicate)];\n                            case 4:\n                                _b.sent();\n                                return [3 /*break*/, 7];\n                            case 5:\n                                merged_1 = this.mergeUserFields(first, mutationEvent);\n                                return [4 /*yield*/, s.save(this.MutationEvent.copyOf(first, function (draft) {\n                                        draft.data = merged_1.data;\n                                    }), undefined, this.ownSymbol)];\n                            case 6:\n                                _b.sent();\n                                _b.label = 7;\n                            case 7: return [3 /*break*/, 12];\n                            case 8:\n                                incomingConditionJSON = mutationEvent.condition;\n                                incomingCondition = JSON.parse(incomingConditionJSON);\n                                merged = void 0;\n                                if (!(Object.keys(incomingCondition).length === 0)) return [3 /*break*/, 10];\n                                merged = this.mergeUserFields(first, mutationEvent);\n                                // delete all for model\n                                return [4 /*yield*/, s.delete(this.MutationEvent, predicate)];\n                            case 9:\n                                // delete all for model\n                                _b.sent();\n                                _b.label = 10;\n                            case 10:\n                                merged = merged || mutationEvent;\n                                // Enqueue new one\n                                return [4 /*yield*/, s.save(merged, undefined, this.ownSymbol)];\n                            case 11:\n                                // Enqueue new one\n                                _b.sent();\n                                _b.label = 12;\n                            case 12: return [2 /*return*/];\n                        }\n                    });\n                }); });\n                return [2 /*return*/];\n            });\n        });\n    };\n    MutationEventOutbox.prototype.dequeue = function (storage, record, recordOp) {\n        return __awaiter(this, void 0, void 0, function () {\n            var head;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.peek(storage)];\n                    case 1:\n                        head = _a.sent();\n                        if (!record) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.syncOutboxVersionsOnDequeue(storage, record, head, recordOp)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [4 /*yield*/, storage.delete(head)];\n                    case 4:\n                        _a.sent();\n                        this.inProgressMutationEventId = undefined;\n                        return [2 /*return*/, head];\n                }\n            });\n        });\n    };\n    /**\n     * Doing a peek() implies that the mutation goes \"inProgress\"\n     *\n     * @param storage\n     */\n    MutationEventOutbox.prototype.peek = function (storage) {\n        return __awaiter(this, void 0, void 0, function () {\n            var head;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, storage.queryOne(this.MutationEvent, QueryOne.FIRST)];\n                    case 1:\n                        head = _a.sent();\n                        this.inProgressMutationEventId = head ? head.id : undefined;\n                        return [2 /*return*/, head];\n                }\n            });\n        });\n    };\n    MutationEventOutbox.prototype.getForModel = function (storage, model) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationEventModelDefinition, mutationEvents;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        mutationEventModelDefinition = this.schema.namespaces[SYNC].models\n                            .MutationEvent;\n                        return [4 /*yield*/, storage.query(this.MutationEvent, ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) { return c.modelId('eq', model.id); }))];\n                    case 1:\n                        mutationEvents = _a.sent();\n                        return [2 /*return*/, mutationEvents];\n                }\n            });\n        });\n    };\n    MutationEventOutbox.prototype.getModelIds = function (storage) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationEvents, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, storage.query(this.MutationEvent)];\n                    case 1:\n                        mutationEvents = _a.sent();\n                        result = new Set();\n                        mutationEvents.forEach(function (_a) {\n                            var modelId = _a.modelId;\n                            return result.add(modelId);\n                        });\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    // applies _version from the AppSync mutation response to other items\n    // in the mutation queue with the same id\n    // see https://github.com/aws-amplify/amplify-js/pull/7354 for more details\n    MutationEventOutbox.prototype.syncOutboxVersionsOnDequeue = function (storage, record, head, recordOp) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _version, _lastChangedAt, _deleted, incomingData, data, __version, __lastChangedAt, __deleted, outgoingData, mutationEventModelDefinition, predicate, outdatedMutations, reconciledMutations;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (head.operation !== recordOp) {\n                            return [2 /*return*/];\n                        }\n                        _version = record._version, _lastChangedAt = record._lastChangedAt, _deleted = record._deleted, incomingData = __rest(record, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n                        data = JSON.parse(head.data);\n                        if (!data) {\n                            return [2 /*return*/];\n                        }\n                        __version = data._version, __lastChangedAt = data._lastChangedAt, __deleted = data._deleted, outgoingData = __rest(data, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n                        // Don't sync the version when the data in the response does not match the data\n                        // in the request, i.e., when there's a handled conflict\n                        if (!valuesEqual(incomingData, outgoingData, true)) {\n                            return [2 /*return*/];\n                        }\n                        mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n                        predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) { return c.modelId('eq', record.id).id('ne', _this.inProgressMutationEventId); });\n                        return [4 /*yield*/, storage.query(this.MutationEvent, predicate)];\n                    case 1:\n                        outdatedMutations = _a.sent();\n                        if (!outdatedMutations.length) {\n                            return [2 /*return*/];\n                        }\n                        reconciledMutations = outdatedMutations.map(function (m) {\n                            var oldData = JSON.parse(m.data);\n                            var newData = __assign(__assign({}, oldData), { _version: _version, _lastChangedAt: _lastChangedAt });\n                            return _this.MutationEvent.copyOf(m, function (draft) {\n                                draft.data = JSON.stringify(newData);\n                            });\n                        });\n                        return [4 /*yield*/, storage.delete(this.MutationEvent, predicate)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, Promise.all(reconciledMutations.map(function (m) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, storage.save(m, undefined, this.ownSymbol)];\n                                    case 1: return [2 /*return*/, _a.sent()];\n                                }\n                            }); }); }))];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MutationEventOutbox.prototype.mergeUserFields = function (previous, current) {\n        var _a = JSON.parse(previous.data), _version = _a._version, id = _a.id, _lastChangedAt = _a._lastChangedAt, _deleted = _a._deleted, previousData = __rest(_a, [\"_version\", \"id\", \"_lastChangedAt\", \"_deleted\"]);\n        var _b = JSON.parse(current.data), __id = _b.id, __version = _b._version, __lastChangedAt = _b._lastChangedAt, __deleted = _b._deleted, currentData = __rest(_b, [\"id\", \"_version\", \"_lastChangedAt\", \"_deleted\"]);\n        var data = JSON.stringify(__assign(__assign({ id: id,\n            _version: _version,\n            _lastChangedAt: _lastChangedAt,\n            _deleted: _deleted }, previousData), currentData));\n        return this.modelInstanceCreator(this.MutationEvent, __assign(__assign({}, current), { data: data }));\n    };\n    return MutationEventOutbox;\n}());\nexport { MutationEventOutbox };\n//# sourceMappingURL=outbox.js.map"]},"metadata":{},"sourceType":"module"}