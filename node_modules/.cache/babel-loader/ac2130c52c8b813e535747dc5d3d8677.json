{"ast":null,"code":"import { __assign, __read, __rest, __spread } from \"tslib\";\n/**\n * @internal\n */\n\nexport function cloneRequest(_a) {\n  var headers = _a.headers,\n      query = _a.query,\n      rest = __rest(_a, [\"headers\", \"query\"]);\n\n  return __assign(__assign({}, rest), {\n    headers: __assign({}, headers),\n    query: query ? cloneQuery(query) : undefined\n  });\n}\n\nfunction cloneQuery(query) {\n  return Object.keys(query).reduce(function (carry, paramName) {\n    var _a;\n\n    var param = query[paramName];\n    return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spread(param) : param, _a));\n  }, {});\n}","map":{"version":3,"sources":["../../src/cloneRequest.ts"],"names":[],"mappings":";AAEA;;AAEG;;AACH,OAAM,SAAU,YAAV,CAAuB,EAAvB,EAA+D;AAAtC,MAAA,OAAO,GAAA,EAAA,CAAA,OAAP;AAAA,MAAS,KAAK,GAAA,EAAA,CAAA,KAAd;AAAA,MAAmB,IAAI,GAAA,MAAA,CAAA,EAAA,EAAzB,CAAA,SAAA,EAAA,OAAA,CAAyB,CAAvB;;AAC7B,SAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,IADL,CAAA,EACS;AACP,IAAA,OAAO,EAAA,QAAA,CAAA,EAAA,EAAO,OAAP,CADA;AAEP,IAAA,KAAK,EAAE,KAAK,GAAG,UAAU,CAAC,KAAD,CAAb,GAAuB;AAF5B,GADT,CAAA;AAKD;;AAED,SAAS,UAAT,CAAoB,KAApB,EAA4C;AAC1C,SAAO,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,MAAnB,CAA0B,UAAC,KAAD,EAA2B,SAA3B,EAA4C;;;AAC3E,QAAM,KAAK,GAAG,KAAK,CAAC,SAAD,CAAnB;AACA,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,KADL,CAAA,GACU,EAAA,GAAA,EAAA,EAAA,EAAA,CACP,SADO,CAAA,GACK,KAAK,CAAC,OAAN,CAAc,KAAd,IAAsB,QAAA,CAAK,KAAL,CAAtB,GAAoC,KADzC,EAC8C,EAFxD,EAAA;AAID,GANM,EAMJ,EANI,CAAP;AAOD","sourcesContent":["import { HttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\n/**\n * @internal\n */\nexport function cloneRequest({ headers, query, ...rest }: HttpRequest): HttpRequest {\n  return {\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n  };\n}\n\nfunction cloneQuery(query: QueryParameterBag): QueryParameterBag {\n  return Object.keys(query).reduce((carry: QueryParameterBag, paramName: string) => {\n    const param = query[paramName];\n    return {\n      ...carry,\n      [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n  }, {});\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}